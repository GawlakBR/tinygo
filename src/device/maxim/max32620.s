// Automatically generated file. DO NOT EDIT.
// Generated by gen-device-svd.go from max32620.svd, see https://github.com/posborne/cmsis-svd/tree/master/data/Maxim

// The MAX32620/1 device family is designed for wearable and portable medical and fitness applications. The devices contain an ARM Cortex-M4 processor with FPU, execute up to 96MHz and include a 10-bit ADC and a versatile set of on-chip peripherals.
//
//     Copyright (C) 2017 Maxim Integrated Products, Inc., All Rights Reserved.
//
//     Permission is hereby granted, free of charge, to any person obtaining a
//     copy of this software and associated documentation files (the "Software"),
//     to deal in the Software without restriction, including without limitation
//     the rights to use, copy, modify, merge, publish, distribute, sublicense,
//     and/or sell copies of the Software, and to permit persons to whom the
//     Software is furnished to do so, subject to the following conditions:
//
//     The above copyright notice and this permission notice shall be included
//     in all copies or substantial portions of the Software.
//
//     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//     IN NO EVENT SHALL MAXIM INTEGRATED BE LIABLE FOR ANY CLAIM, DAMAGES
//
//     OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
//     ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
//     OTHER DEALINGS IN THE SOFTWARE.
//
//     Except as contained in this notice, the name of Maxim Integrated
//     Products, Inc. shall not be used except as stated in the Maxim Integrated
//     Products, Inc. Branding Policy.
//
//     The mere transfer of this software does not imply any licenses
//     of trade secrets, proprietary technology, copyrights, patents,
//     trademarks, maskwork rights, or any other form of intellectual
//     property whatsoever. Maxim Integrated Products, Inc. retains all
//     ownership rights.

.syntax unified

// This is the default handler for interrupts, if triggered but not defined.
.section .text.Default_Handler
.global  Default_Handler
.type    Default_Handler, %function
Default_Handler:
    wfe
    b    Default_Handler
.size Default_Handler, .-Default_Handler

// Avoid the need for repeated .weak and .set instructions.
.macro IRQ handler
    .weak  \handler
    .set   \handler, Default_Handler
.endm

// Must set the "a" flag on the section:
// https://svnweb.freebsd.org/base/stable/11/sys/arm/arm/locore-v4.S?r1=321049&r2=321048&pathrev=321049
// https://sourceware.org/binutils/docs/as/Section.html#ELF-Version
.section .isr_vector, "a", %progbits
.global  __isr_vector
    // Interrupt vector as defined by Cortex-M, starting with the stack top.
    // On reset, SP is initialized with *0x0 and PC is loaded with *0x4, loading
    // _stack_top and Reset_Handler.
    .long _stack_top
    .long Reset_Handler
    .long NMI_Handler
    .long HardFault_Handler
    .long MemoryManagement_Handler
    .long BusFault_Handler
    .long UsageFault_Handler
    .long 0
    .long 0
    .long 0
    .long 0
    .long SVC_Handler
    .long DebugMon_Handler
    .long 0
    .long PendSV_Handler
    .long SysTick_Handler

    // Extra interrupts for peripherals defined by the hardware vendor.
    .long CLKMAN_IRQHandler
    .long PowerManager_IRQHandler
    .long FLC_IRQHandler
    .long RTC_COMP0_IRQHandler
    .long RTC_COMP1_IRQHandler
    .long RTC_PRESCALE_COMP_IRQHandler
    .long RTC_OVERFLOW_IRQHandler
    .long PMU_IRQHandler
    .long USB_IRQHandler
    .long AES_IRQHandler
    .long MAA_IRQHandler
    .long WDT0_IRQHandler
    .long WDT0_PRE_WIN_IRQHandler
    .long WDT1_IRQHandler
    .long WDT1_PRE_WIN_IRQHandler
    .long GPIO0_IRQHandler
    .long GPIO1_IRQHandler
    .long GPIO2_IRQHandler
    .long GPIO3_IRQHandler
    .long GPIO4_IRQHandler
    .long GPIO5_IRQHandler
    .long GPIO6_IRQHandler
    .long TMR0_IRQHandler
    .long TMR16_0_IRQHandler
    .long TMR1_IRQHandler
    .long TMR16_1_IRQHandler
    .long TMR2_IRQHandler
    .long TMR16_2_IRQHandler
    .long TMR3_IRQHandler
    .long TMR16_3_IRQHandler
    .long TMR4_IRQHandler
    .long TMR16_4_IRQHandler
    .long TMR5_IRQHandler
    .long TMR16_5_IRQHandler
    .long UART0_IRQHandler
    .long UART1_IRQHandler
    .long UART2_IRQHandler
    .long UART3_IRQHandler
    .long PT_IRQHandler
    .long I2CM0_IRQHandler
    .long I2CM1_IRQHandler
    .long I2CM2_IRQHandler
    .long I2CS_IRQHandler
    .long SPIM0_IRQHandler
    .long SPIM1_IRQHandler
    .long SPIM2_IRQHandler
    .long 0
    .long OWM_IRQHandler
    .long ADC_IRQHandler
    .long 0
    .long GPIO7_IRQHandler
    .long GPIO8_IRQHandler

    // Define default implementations for interrupts, redirecting to
    // Default_Handler when not implemented.
    IRQ NMI_Handler
    IRQ HardFault_Handler
    IRQ MemoryManagement_Handler
    IRQ BusFault_Handler
    IRQ UsageFault_Handler
    IRQ SVC_Handler
    IRQ DebugMon_Handler
    IRQ PendSV_Handler
    IRQ SysTick_Handler
    IRQ CLKMAN_IRQHandler
    IRQ PowerManager_IRQHandler
    IRQ FLC_IRQHandler
    IRQ RTC_COMP0_IRQHandler
    IRQ RTC_COMP1_IRQHandler
    IRQ RTC_PRESCALE_COMP_IRQHandler
    IRQ RTC_OVERFLOW_IRQHandler
    IRQ PMU_IRQHandler
    IRQ USB_IRQHandler
    IRQ AES_IRQHandler
    IRQ MAA_IRQHandler
    IRQ WDT0_IRQHandler
    IRQ WDT0_PRE_WIN_IRQHandler
    IRQ WDT1_IRQHandler
    IRQ WDT1_PRE_WIN_IRQHandler
    IRQ GPIO0_IRQHandler
    IRQ GPIO1_IRQHandler
    IRQ GPIO2_IRQHandler
    IRQ GPIO3_IRQHandler
    IRQ GPIO4_IRQHandler
    IRQ GPIO5_IRQHandler
    IRQ GPIO6_IRQHandler
    IRQ TMR0_IRQHandler
    IRQ TMR16_0_IRQHandler
    IRQ TMR1_IRQHandler
    IRQ TMR16_1_IRQHandler
    IRQ TMR2_IRQHandler
    IRQ TMR16_2_IRQHandler
    IRQ TMR3_IRQHandler
    IRQ TMR16_3_IRQHandler
    IRQ TMR4_IRQHandler
    IRQ TMR16_4_IRQHandler
    IRQ TMR5_IRQHandler
    IRQ TMR16_5_IRQHandler
    IRQ UART0_IRQHandler
    IRQ UART1_IRQHandler
    IRQ UART2_IRQHandler
    IRQ UART3_IRQHandler
    IRQ PT_IRQHandler
    IRQ I2CM0_IRQHandler
    IRQ I2CM1_IRQHandler
    IRQ I2CM2_IRQHandler
    IRQ I2CS_IRQHandler
    IRQ SPIM0_IRQHandler
    IRQ SPIM1_IRQHandler
    IRQ SPIM2_IRQHandler
    IRQ OWM_IRQHandler
    IRQ ADC_IRQHandler
    IRQ GPIO7_IRQHandler
    IRQ GPIO8_IRQHandler
