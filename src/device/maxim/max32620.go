// Automatically generated file. DO NOT EDIT.
// Generated by gen-device-svd.go from max32620.svd, see https://github.com/posborne/cmsis-svd/tree/master/data/Maxim

// +build maxim,max32620

// The MAX32620/1 device family is designed for wearable and portable medical and fitness applications. The devices contain an ARM Cortex-M4 processor with FPU, execute up to 96MHz and include a 10-bit ADC and a versatile set of on-chip peripherals.
//
//     Copyright (C) 2017 Maxim Integrated Products, Inc., All Rights Reserved.
//
//     Permission is hereby granted, free of charge, to any person obtaining a
//     copy of this software and associated documentation files (the "Software"),
//     to deal in the Software without restriction, including without limitation
//     the rights to use, copy, modify, merge, publish, distribute, sublicense,
//     and/or sell copies of the Software, and to permit persons to whom the
//     Software is furnished to do so, subject to the following conditions:
//
//     The above copyright notice and this permission notice shall be included
//     in all copies or substantial portions of the Software.
//
//     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//     IN NO EVENT SHALL MAXIM INTEGRATED BE LIABLE FOR ANY CLAIM, DAMAGES
//
//     OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
//     ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
//     OTHER DEALINGS IN THE SOFTWARE.
//
//     Except as contained in this notice, the name of Maxim Integrated
//     Products, Inc. shall not be used except as stated in the Maxim Integrated
//     Products, Inc. Branding Policy.
//
//     The mere transfer of this software does not imply any licenses
//     of trade secrets, proprietary technology, copyrights, patents,
//     trademarks, maskwork rights, or any other form of intellectual
//     property whatsoever. Maxim Integrated Products, Inc. retains all
//     ownership rights.
package maxim

import (
	"runtime/interrupt"
	"runtime/volatile"
	"unsafe"
)

// Some information about this device.
const (
	DEVICE = "max32620"
)

// Interrupt numbers.
const (
	IRQ_CLKMAN            = 0  // System Clock Manager
	IRQ_PowerManager      = 1  // System Power Manager
	IRQ_FLC               = 2  // Flash Controller
	IRQ_RTC_COMP0         = 3  // Real Time Clock
	IRQ_RTC_COMP1         = 4  // Real Time Clock
	IRQ_RTC_PRESCALE_COMP = 5  // Real Time Clock
	IRQ_RTC_OVERFLOW      = 6  // Real Time Clock
	IRQ_PMU               = 7  // Peripheral Management Unit
	IRQ_USB               = 8  // USB Device Controller
	IRQ_AES               = 9  // AES Cryptographic Engine
	IRQ_MAA               = 10 // MAA Cryptographic Engine
	IRQ_WDT0              = 11 // Watchdog Timers
	IRQ_WDT0_PRE_WIN      = 12 // Watchdog Timers
	IRQ_WDT1              = 13 //
	IRQ_WDT1_PRE_WIN      = 14 //
	IRQ_GPIO0             = 15 // General Purpose I/O Ports (GPIO)
	IRQ_GPIO1             = 16 // General Purpose I/O Ports (GPIO)
	IRQ_GPIO2             = 17 // General Purpose I/O Ports (GPIO)
	IRQ_GPIO3             = 18 // General Purpose I/O Ports (GPIO)
	IRQ_GPIO4             = 19 // General Purpose I/O Ports (GPIO)
	IRQ_GPIO5             = 20 // General Purpose I/O Ports (GPIO)
	IRQ_GPIO6             = 21 // General Purpose I/O Ports (GPIO)
	IRQ_TMR0              = 22 // 16/32 bit Timer/Counters
	IRQ_TMR16_0           = 23 // 16/32 bit Timer/Counters
	IRQ_TMR1              = 24 //
	IRQ_TMR16_1           = 25 //
	IRQ_TMR2              = 26 //
	IRQ_TMR16_2           = 27 //
	IRQ_TMR3              = 28 //
	IRQ_TMR16_3           = 29 //
	IRQ_TMR4              = 30 //
	IRQ_TMR16_4           = 31 //
	IRQ_TMR5              = 32 //
	IRQ_TMR16_5           = 33 //
	IRQ_UART0             = 34 // UART / Serial Port Interface
	IRQ_UART1             = 35 //
	IRQ_UART2             = 36 //
	IRQ_UART3             = 37 //
	IRQ_PT                = 38 // Pulse Train Generation
	IRQ_I2CM0             = 39 // I2C Master 0 Interface
	IRQ_I2CM1             = 40 //
	IRQ_I2CM2             = 41 //
	IRQ_I2CS              = 42 // I2C Slave Interface
	IRQ_SPIM0             = 43 // SPI Master Interface
	IRQ_SPIM1             = 44 //
	IRQ_SPIM2             = 45 //
	IRQ_OWM               = 47 // 1-Wire Master Interface
	IRQ_ADC               = 48 // ADC / AFE
	IRQ_GPIO7             = 50 // General Purpose I/O Ports (GPIO)
	IRQ_GPIO8             = 51 // General Purpose I/O Ports (GPIO)
	IRQ_max               = 51 // Highest interrupt number on this device.
)

// Map interrupt numbers to function names.
// These aren't real calls, they're removed by the compiler.
var (
	_ = interrupt.Register(IRQ_CLKMAN, "CLKMAN_IRQHandler")
	_ = interrupt.Register(IRQ_PowerManager, "PowerManager_IRQHandler")
	_ = interrupt.Register(IRQ_FLC, "FLC_IRQHandler")
	_ = interrupt.Register(IRQ_RTC_COMP0, "RTC_COMP0_IRQHandler")
	_ = interrupt.Register(IRQ_RTC_COMP1, "RTC_COMP1_IRQHandler")
	_ = interrupt.Register(IRQ_RTC_PRESCALE_COMP, "RTC_PRESCALE_COMP_IRQHandler")
	_ = interrupt.Register(IRQ_RTC_OVERFLOW, "RTC_OVERFLOW_IRQHandler")
	_ = interrupt.Register(IRQ_PMU, "PMU_IRQHandler")
	_ = interrupt.Register(IRQ_USB, "USB_IRQHandler")
	_ = interrupt.Register(IRQ_AES, "AES_IRQHandler")
	_ = interrupt.Register(IRQ_MAA, "MAA_IRQHandler")
	_ = interrupt.Register(IRQ_WDT0, "WDT0_IRQHandler")
	_ = interrupt.Register(IRQ_WDT0_PRE_WIN, "WDT0_PRE_WIN_IRQHandler")
	_ = interrupt.Register(IRQ_WDT1, "WDT1_IRQHandler")
	_ = interrupt.Register(IRQ_WDT1_PRE_WIN, "WDT1_PRE_WIN_IRQHandler")
	_ = interrupt.Register(IRQ_GPIO0, "GPIO0_IRQHandler")
	_ = interrupt.Register(IRQ_GPIO1, "GPIO1_IRQHandler")
	_ = interrupt.Register(IRQ_GPIO2, "GPIO2_IRQHandler")
	_ = interrupt.Register(IRQ_GPIO3, "GPIO3_IRQHandler")
	_ = interrupt.Register(IRQ_GPIO4, "GPIO4_IRQHandler")
	_ = interrupt.Register(IRQ_GPIO5, "GPIO5_IRQHandler")
	_ = interrupt.Register(IRQ_GPIO6, "GPIO6_IRQHandler")
	_ = interrupt.Register(IRQ_TMR0, "TMR0_IRQHandler")
	_ = interrupt.Register(IRQ_TMR16_0, "TMR16_0_IRQHandler")
	_ = interrupt.Register(IRQ_TMR1, "TMR1_IRQHandler")
	_ = interrupt.Register(IRQ_TMR16_1, "TMR16_1_IRQHandler")
	_ = interrupt.Register(IRQ_TMR2, "TMR2_IRQHandler")
	_ = interrupt.Register(IRQ_TMR16_2, "TMR16_2_IRQHandler")
	_ = interrupt.Register(IRQ_TMR3, "TMR3_IRQHandler")
	_ = interrupt.Register(IRQ_TMR16_3, "TMR16_3_IRQHandler")
	_ = interrupt.Register(IRQ_TMR4, "TMR4_IRQHandler")
	_ = interrupt.Register(IRQ_TMR16_4, "TMR16_4_IRQHandler")
	_ = interrupt.Register(IRQ_TMR5, "TMR5_IRQHandler")
	_ = interrupt.Register(IRQ_TMR16_5, "TMR16_5_IRQHandler")
	_ = interrupt.Register(IRQ_UART0, "UART0_IRQHandler")
	_ = interrupt.Register(IRQ_UART1, "UART1_IRQHandler")
	_ = interrupt.Register(IRQ_UART2, "UART2_IRQHandler")
	_ = interrupt.Register(IRQ_UART3, "UART3_IRQHandler")
	_ = interrupt.Register(IRQ_PT, "PT_IRQHandler")
	_ = interrupt.Register(IRQ_I2CM0, "I2CM0_IRQHandler")
	_ = interrupt.Register(IRQ_I2CM1, "I2CM1_IRQHandler")
	_ = interrupt.Register(IRQ_I2CM2, "I2CM2_IRQHandler")
	_ = interrupt.Register(IRQ_I2CS, "I2CS_IRQHandler")
	_ = interrupt.Register(IRQ_SPIM0, "SPIM0_IRQHandler")
	_ = interrupt.Register(IRQ_SPIM1, "SPIM1_IRQHandler")
	_ = interrupt.Register(IRQ_SPIM2, "SPIM2_IRQHandler")
	_ = interrupt.Register(IRQ_OWM, "OWM_IRQHandler")
	_ = interrupt.Register(IRQ_ADC, "ADC_IRQHandler")
	_ = interrupt.Register(IRQ_GPIO7, "GPIO7_IRQHandler")
	_ = interrupt.Register(IRQ_GPIO8, "GPIO8_IRQHandler")
)

// Peripherals.
var (
	CLKMAN  = (*System_Clock_Manager_Type)(unsafe.Pointer(uintptr(0x40000400))) // System Clock Manager
	PWRMAN  = (*Power_Manager_Type)(unsafe.Pointer(uintptr(0x40000800)))        // System Power Manager
	RTCTMR  = (*Real_Time_Clock_Type)(unsafe.Pointer(uintptr(0x40000a00)))      // Real Time Clock
	RTCCFG  = (*Real_Time_Clock_Type)(unsafe.Pointer(uintptr(0x40000a70)))      // RTC Configuration Register
	PWRSEQ  = (*Power_Manager_Type)(unsafe.Pointer(uintptr(0x40000a30)))        // Power Sequencer
	IOMAN   = (*IO_Type)(unsafe.Pointer(uintptr(0x40000c00)))                   // System I/O Manager
	FLC     = (*FLC_Type)(unsafe.Pointer(uintptr(0x40002000)))                  // Flash Controller
	ICC     = (*ICC_Type)(unsafe.Pointer(uintptr(0x40003000)))                  // Instruction Cache Controller
	SPIX    = (*SPI_XIP_Type)(unsafe.Pointer(uintptr(0x40004000)))              // SPI XIP Interface
	PMU0    = (*PMU_Type)(unsafe.Pointer(uintptr(0x40005000)))                  // Peripheral Management Unit
	USB     = (*USB_Type)(unsafe.Pointer(uintptr(0x40100000)))                  // USB Device Controller
	CRC     = (*CRC_Type)(unsafe.Pointer(uintptr(0x40006000)))                  // CRC-16/CRC-32 Engine
	TPU     = (*TPU_Type)(unsafe.Pointer(uintptr(0x40007000)))                  // Trust Protection Unit (TPU)
	TPU_TSR = (*TPU_TSR_Type)(unsafe.Pointer(uintptr(0x40007c00)))              // Trust Protection Unit (TPU)
	AES     = (*AES_Type)(unsafe.Pointer(uintptr(0x40007400)))                  // AES Cryptographic Engine
	MAA     = (*MAA_Type)(unsafe.Pointer(uintptr(0x40007800)))                  // MAA Cryptographic Engine
	WDT0    = (*Watch_Dog_Timers_Type)(unsafe.Pointer(uintptr(0x40008000)))     // Watchdog Timers
	GPIO    = (*IO_Type)(unsafe.Pointer(uintptr(0x4000a000)))                   // General Purpose I/O Ports (GPIO)
	TMR0    = (*Timers_Type)(unsafe.Pointer(uintptr(0x4000b000)))               // 16/32 bit Timer/Counters
	PTG     = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x40011000)))          // Pulse Train Generation
	PT0     = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x40011010)))          // Pulse Train Generation
	UART0   = (*UARTs_Type)(unsafe.Pointer(uintptr(0x40012000)))                // UART / Serial Port Interface
	I2CM0   = (*I2C_Master_Type)(unsafe.Pointer(uintptr(0x40016000)))           // I2C Master 0 Interface
	I2CS    = (*I2C_Slave_Type)(unsafe.Pointer(uintptr(0x40019000)))            // I2C Slave Interface
	SPIM0   = (*SPI_Master_Type)(unsafe.Pointer(uintptr(0x4001a000)))           // SPI Master Interface
	OWM     = (*_1_Wire_Master_Type)(unsafe.Pointer(uintptr(0x4001e000)))       // 1-Wire Master Interface
	ADC     = (*ADC_Type)(unsafe.Pointer(uintptr(0x4001f000)))                  // ADC / AFE
	PMU1    = (*PMU_Type)(unsafe.Pointer(uintptr(0x40005020)))                  // Peripheral Management Unit
	PMU2    = (*PMU_Type)(unsafe.Pointer(uintptr(0x40005040)))                  // Peripheral Management Unit
	PMU3    = (*PMU_Type)(unsafe.Pointer(uintptr(0x40005060)))                  // Peripheral Management Unit
	PMU4    = (*PMU_Type)(unsafe.Pointer(uintptr(0x40005080)))                  // Peripheral Management Unit
	PMU5    = (*PMU_Type)(unsafe.Pointer(uintptr(0x400050a0)))                  // Peripheral Management Unit
	WDT1    = (*Watch_Dog_Timers_Type)(unsafe.Pointer(uintptr(0x40009000)))     // Watchdog Timers
	TMR1    = (*Timers_Type)(unsafe.Pointer(uintptr(0x4000c000)))               // 16/32 bit Timer/Counters
	TMR2    = (*Timers_Type)(unsafe.Pointer(uintptr(0x4000d000)))               // 16/32 bit Timer/Counters
	TMR3    = (*Timers_Type)(unsafe.Pointer(uintptr(0x4000e000)))               // 16/32 bit Timer/Counters
	TMR4    = (*Timers_Type)(unsafe.Pointer(uintptr(0x4000f000)))               // 16/32 bit Timer/Counters
	TMR5    = (*Timers_Type)(unsafe.Pointer(uintptr(0x40010000)))               // 16/32 bit Timer/Counters
	PT1     = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x4001101c)))          // Pulse Train Generation
	PT2     = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x40011028)))          // Pulse Train Generation
	PT3     = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x40011034)))          // Pulse Train Generation
	PT4     = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x40011040)))          // Pulse Train Generation
	PT5     = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x4001104c)))          // Pulse Train Generation
	PT6     = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x40011058)))          // Pulse Train Generation
	PT7     = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x40011064)))          // Pulse Train Generation
	PT8     = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x40011070)))          // Pulse Train Generation
	PT9     = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x4001107c)))          // Pulse Train Generation
	PT10    = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x40011088)))          // Pulse Train Generation
	PT11    = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x40011094)))          // Pulse Train Generation
	PT12    = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x400110a0)))          // Pulse Train Generation
	PT13    = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x400110ac)))          // Pulse Train Generation
	PT14    = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x400110b8)))          // Pulse Train Generation
	PT15    = (*Pulse_Train_Type)(unsafe.Pointer(uintptr(0x400110c4)))          // Pulse Train Generation
	UART1   = (*UARTs_Type)(unsafe.Pointer(uintptr(0x40013000)))                // UART / Serial Port Interface
	UART2   = (*UARTs_Type)(unsafe.Pointer(uintptr(0x40014000)))                // UART / Serial Port Interface
	UART3   = (*UARTs_Type)(unsafe.Pointer(uintptr(0x40015000)))                // UART / Serial Port Interface
	I2CM1   = (*I2C_Master_Type)(unsafe.Pointer(uintptr(0x40017000)))           // I2C Master 0 Interface
	I2CM2   = (*I2C_Master_Type)(unsafe.Pointer(uintptr(0x40018000)))           // I2C Master 0 Interface
	SPIM1   = (*SPI_Master_Type)(unsafe.Pointer(uintptr(0x4001b000)))           // SPI Master Interface
	SPIM2   = (*SPI_Master_Type)(unsafe.Pointer(uintptr(0x4001c000)))           // SPI Master Interface
)

// System Clock Manager
type System_Clock_Manager_Type struct {
	CLK_CONFIG            volatile.Register32 // 0x0
	CLK_CTRL              volatile.Register32 // 0x4
	INTFL                 volatile.Register32 // 0x8
	INTEN                 volatile.Register32 // 0xC
	TRIM_CALC             volatile.Register32 // 0x10
	I2C_TIMER_CTRL        volatile.Register32 // 0x14
	CM4_START_CLK_EN0     volatile.Register32 // 0x18
	CM4_START_CLK_EN1     volatile.Register32 // 0x1C
	CM4_START_CLK_EN2     volatile.Register32 // 0x20
	_                     [28]byte
	SYS_CLK_CTRL_0_CM4    volatile.Register32 // 0x40
	SYS_CLK_CTRL_1_SYNC   volatile.Register32 // 0x44
	SYS_CLK_CTRL_2_SPIX   volatile.Register32 // 0x48
	SYS_CLK_CTRL_3_PRNG   volatile.Register32 // 0x4C
	SYS_CLK_CTRL_4_WDT0   volatile.Register32 // 0x50
	SYS_CLK_CTRL_5_WDT1   volatile.Register32 // 0x54
	SYS_CLK_CTRL_6_GPIO   volatile.Register32 // 0x58
	SYS_CLK_CTRL_7_PT     volatile.Register32 // 0x5C
	SYS_CLK_CTRL_8_UART   volatile.Register32 // 0x60
	SYS_CLK_CTRL_9_I2CM   volatile.Register32 // 0x64
	SYS_CLK_CTRL_10_I2CS  volatile.Register32 // 0x68
	SYS_CLK_CTRL_11_SPI0  volatile.Register32 // 0x6C
	SYS_CLK_CTRL_12_SPI1  volatile.Register32 // 0x70
	SYS_CLK_CTRL_13_SPI2  volatile.Register32 // 0x74
	SYS_CLK_CTRL_14_SPIB  volatile.Register32 // 0x78
	SYS_CLK_CTRL_15_OWM   volatile.Register32 // 0x7C
	_                     [128]byte
	CRYPT_CLK_CTRL_0_AES  volatile.Register32 // 0x100
	CRYPT_CLK_CTRL_1_MAA  volatile.Register32 // 0x104
	CRYPT_CLK_CTRL_2_PRNG volatile.Register32 // 0x108
	_                     [52]byte
	CLK_GATE_CTRL0        volatile.Register32 // 0x140
	CLK_GATE_CTRL1        volatile.Register32 // 0x144
	CLK_GATE_CTRL2        volatile.Register32 // 0x148
}

// System Power Manager
type Power_Manager_Type struct {
	PWR_RST_CTRL     volatile.Register32 // 0x0
	INTFL            volatile.Register32 // 0x4
	INTEN            volatile.Register32 // 0x8
	SVM_EVENTS       volatile.Register32 // 0xC
	WUD_CTRL         volatile.Register32 // 0x10
	WUD_PULSE0       volatile.Register32 // 0x14
	WUD_PULSE1       volatile.Register32 // 0x18
	WUD_SEEN0        volatile.Register32 // 0x1C
	WUD_SEEN1        volatile.Register32 // 0x20
	_                [16]byte
	MARGIN_CTRL      volatile.Register32 // 0x34
	DIE_TYPE         volatile.Register32 // 0x38
	BASE_PART_NUM    volatile.Register32 // 0x3C
	MASK_ID0         volatile.Register32 // 0x40
	MASK_ID1         volatile.Register32 // 0x44
	PERIPHERAL_RESET volatile.Register32 // 0x48
}

// Real Time Clock
type Real_Time_Clock_Type struct {
	CTRL          volatile.Register32 // 0x0
	TIMER         volatile.Register32 // 0x4
	COMP0         volatile.Register32 // 0x8
	COMP1         volatile.Register32 // 0xC
	FLAGS         volatile.Register32 // 0x10
	SNZ_VALUE     volatile.Register32 // 0x14
	INTEN         volatile.Register32 // 0x18
	PRESCALE      volatile.Register32 // 0x1C
	_             [4]byte
	PRESCALE_MASK volatile.Register32 // 0x24
	TRIM_CTRL     volatile.Register32 // 0x28
	TRIM_VALUE    volatile.Register32 // 0x2C
}

// System I/O Manager
type IO_Type struct {
	WUD_REQ0     volatile.Register32 // 0x0
	WUD_REQ1     volatile.Register32 // 0x4
	WUD_ACK0     volatile.Register32 // 0x8
	WUD_ACK1     volatile.Register32 // 0xC
	ALI_REQ0     volatile.Register32 // 0x10
	ALI_REQ1     volatile.Register32 // 0x14
	ALI_ACK0     volatile.Register32 // 0x18
	ALI_ACK1     volatile.Register32 // 0x1C
	ALI_CONNECT0 volatile.Register32 // 0x20
	ALI_CONNECT1 volatile.Register32 // 0x24
	SPIX_REQ     volatile.Register32 // 0x28
	SPIX_ACK     volatile.Register32 // 0x2C
	UART0_REQ    volatile.Register32 // 0x30
	UART0_ACK    volatile.Register32 // 0x34
	UART1_REQ    volatile.Register32 // 0x38
	UART1_ACK    volatile.Register32 // 0x3C
	UART2_REQ    volatile.Register32 // 0x40
	UART2_ACK    volatile.Register32 // 0x44
	UART3_REQ    volatile.Register32 // 0x48
	UART3_ACK    volatile.Register32 // 0x4C
	I2CM0_REQ    volatile.Register32 // 0x50
	I2CM0_ACK    volatile.Register32 // 0x54
	I2CM1_REQ    volatile.Register32 // 0x58
	I2CM1_ACK    volatile.Register32 // 0x5C
	I2CM2_REQ    volatile.Register32 // 0x60
	I2CM2_ACK    volatile.Register32 // 0x64
	I2CS_REQ     volatile.Register32 // 0x68
	I2CS_ACK     volatile.Register32 // 0x6C
	SPI0_REQ     volatile.Register32 // 0x70
	SPI0_ACK     volatile.Register32 // 0x74
	SPI1_REQ     volatile.Register32 // 0x78
	SPI1_ACK     volatile.Register32 // 0x7C
	SPI2_REQ     volatile.Register32 // 0x80
	SPI2_ACK     volatile.Register32 // 0x84
	SPIB_REQ     volatile.Register32 // 0x88
	SPIB_ACK     volatile.Register32 // 0x8C
	OWM_REQ      volatile.Register32 // 0x90
	OWM_ACK      volatile.Register32 // 0x94
}

// Flash Controller
type FLC_Type struct {
	FADDR        volatile.Register32 // 0x0
	FCKDIV       volatile.Register32 // 0x4
	CTRL         volatile.Register32 // 0x8
	_            [24]byte
	INTR         volatile.Register32 // 0x24
	_            [8]byte
	FDATA        volatile.Register32 // 0x30
	_            [28]byte
	PERFORM      volatile.Register32 // 0x50
	TACC         volatile.Register32 // 0x54
	TPROG        volatile.Register32 // 0x58
	_            [36]byte
	STATUS       volatile.Register32 // 0x80
	_            [4]byte
	SECURITY     volatile.Register32 // 0x88
	_            [16]byte
	BYPASS       volatile.Register32 // 0x9C
	_            [96]byte
	USER_OPTION  volatile.Register32 // 0x100
	_            [60]byte
	CTRL2        volatile.Register32 // 0x140
	INTFL1       volatile.Register32 // 0x144
	INTEN1       volatile.Register32 // 0x148
	_            [36]byte
	BL_CTRL      volatile.Register32 // 0x170
	TWK_CYCL_CNT volatile.Register32 // 0x174
	PDM33        volatile.Register32 // 0x178
	SLM          volatile.Register32 // 0x17C
	_            [128]byte
	DISABLE_XR0  volatile.Register32 // 0x200
	DISABLE_XR1  volatile.Register32 // 0x204
	DISABLE_XR2  volatile.Register32 // 0x208
	DISABLE_XR3  volatile.Register32 // 0x20C
	DISABLE_XR4  volatile.Register32 // 0x210
	DISABLE_XR5  volatile.Register32 // 0x214
	DISABLE_XR6  volatile.Register32 // 0x218
	DISABLE_XR7  volatile.Register32 // 0x21C
	_            [224]byte
	DISABLE_WE0  volatile.Register32 // 0x300
	DISABLE_WE1  volatile.Register32 // 0x304
	DISABLE_WE2  volatile.Register32 // 0x308
	DISABLE_WE3  volatile.Register32 // 0x30C
	DISABLE_WE4  volatile.Register32 // 0x310
	DISABLE_WE5  volatile.Register32 // 0x314
	DISABLE_WE6  volatile.Register32 // 0x318
	DISABLE_WE7  volatile.Register32 // 0x31C
}

// Instruction Cache Controller
type ICC_Type struct {
	ID        volatile.Register32 // 0x0
	MEM_CFG   volatile.Register32 // 0x4
	_         [248]byte
	CTRL_STAT volatile.Register32 // 0x100
	_         [1532]byte
	INVDT_ALL volatile.Register32 // 0x700
}

// SPI XIP Interface
type SPI_XIP_Type struct {
	MASTER_CFG volatile.Register32 // 0x0
	FETCH_CTRL volatile.Register32 // 0x4
	MODE_CTRL  volatile.Register32 // 0x8
	MODE_DATA  volatile.Register32 // 0xC
}

// Peripheral Management Unit
type PMU_Type struct {
	DSCADR volatile.Register32 // 0x0
	CFG    volatile.Register32 // 0x4
	LOOP   volatile.Register32 // 0x8
	OP     volatile.Register32 // 0xC
	DSC1   volatile.Register32 // 0x10
	DSC2   volatile.Register32 // 0x14
	DSC3   volatile.Register32 // 0x18
	DSC4   volatile.Register32 // 0x1C
}

// USB Device Controller
type USB_Type struct {
	CN          volatile.Register32 // 0x0
	_           [508]byte
	DEV_ADDR    volatile.Register32 // 0x200
	DEV_CN      volatile.Register32 // 0x204
	DEV_INTFL   volatile.Register32 // 0x208
	DEV_INTEN   volatile.Register32 // 0x20C
	_           [16]byte
	EP_BASE     volatile.Register32 // 0x220
	CUR_BUF     volatile.Register32 // 0x224
	IN_OWNER    volatile.Register32 // 0x228
	OUT_OWNER   volatile.Register32 // 0x22C
	IN_INT      volatile.Register32 // 0x230
	OUT_INT     volatile.Register32 // 0x234
	NAK_INT     volatile.Register32 // 0x238
	DMA_ERR_INT volatile.Register32 // 0x23C
	BUF_OVR_INT volatile.Register32 // 0x240
	_           [28]byte
	SETUP0      volatile.Register32 // 0x260
	SETUP1      volatile.Register32 // 0x264
	_           [24]byte
	EP0         volatile.Register32 // 0x280
	EP1         volatile.Register32 // 0x284
	EP2         volatile.Register32 // 0x288
	EP3         volatile.Register32 // 0x28C
	EP4         volatile.Register32 // 0x290
	EP5         volatile.Register32 // 0x294
	EP6         volatile.Register32 // 0x298
	EP7         volatile.Register32 // 0x29C
}

// CRC-16/CRC-32 Engine
type CRC_Type struct {
	RESEED volatile.Register32 // 0x0
	SEED16 volatile.Register32 // 0x4
	SEED32 volatile.Register32 // 0x8
}

// Trust Protection Unit (TPU)
type TPU_Type struct {
	PRNG_USER_ENTROPY volatile.Register32 // 0x0
	PRNG_RND_NUM      volatile.Register32 // 0x4
}

// Trust Protection Unit (TPU)
type TPU_TSR_Type struct {
	_    [16]byte
	SKS0 volatile.Register32 // 0x10
	SKS1 volatile.Register32 // 0x14
	SKS2 volatile.Register32 // 0x18
	SKS3 volatile.Register32 // 0x1C
}

// AES Cryptographic Engine
type AES_Type struct {
	CTRL      volatile.Register32 // 0x0
	_         [4]byte
	ERASE_ALL volatile.Register32 // 0x8
}

// MAA Cryptographic Engine
type MAA_Type struct {
	CTRL volatile.Register32 // 0x0
	MAWS volatile.Register32 // 0x4
}

// Watchdog Timers
type Watch_Dog_Timers_Type struct {
	CTRL      volatile.Register32 // 0x0
	CLEAR     volatile.Register32 // 0x4
	FLAGS     volatile.Register32 // 0x8
	ENABLE    volatile.Register32 // 0xC
	_         [4]byte
	LOCK_CTRL volatile.Register32 // 0x14
}

// 16/32 bit Timer/Counters
type Timers_Type struct {
	CTRL         volatile.Register32 // 0x0
	COUNT32      volatile.Register32 // 0x4
	TERM_CNT32   volatile.Register32 // 0x8
	PWM_CAP32    volatile.Register32 // 0xC
	COUNT16_0    volatile.Register32 // 0x10
	TERM_CNT16_0 volatile.Register32 // 0x14
	COUNT16_1    volatile.Register32 // 0x18
	TERM_CNT16_1 volatile.Register32 // 0x1C
	INTFL        volatile.Register32 // 0x20
	INTEN        volatile.Register32 // 0x24
}

// Pulse Train Generation
type Pulse_Train_Type struct {
	ENABLE volatile.Register32 // 0x0
	RESYNC volatile.Register32 // 0x4
	INTFL  volatile.Register32 // 0x8
	INTEN  volatile.Register32 // 0xC
}

// UART / Serial Port Interface
type UARTs_Type struct {
	CTRL         volatile.Register32 // 0x0
	BAUD         volatile.Register32 // 0x4
	TX_FIFO_CTRL volatile.Register32 // 0x8
	RX_FIFO_CTRL volatile.Register32 // 0xC
	MD_CTRL      volatile.Register32 // 0x10
	INTFL        volatile.Register32 // 0x14
	INTEN        volatile.Register32 // 0x18
}

// I2C Master 0 Interface
type I2C_Master_Type struct {
	FS_CLK_DIV volatile.Register32 // 0x0
	_          [8]byte
	TIMEOUT    volatile.Register32 // 0xC
	CTRL       volatile.Register32 // 0x10
	TRANS      volatile.Register32 // 0x14
	INTFL      volatile.Register32 // 0x18
	INTEN      volatile.Register32 // 0x1C
	_          [8]byte
	BB         volatile.Register32 // 0x28
}

// I2C Slave Interface
type I2C_Slave_Type struct {
	CLK_DIV   volatile.Register32 // 0x0
	DEV_ID    volatile.Register32 // 0x4
	INTFL     volatile.Register32 // 0x8
	INTEN     volatile.Register32 // 0xC
	DATA_BYTE volatile.Register32 // 0x10
}

// SPI Master Interface
type SPI_Master_Type struct {
	MSTR_CFG       volatile.Register32 // 0x0
	SS_SR_POLARITY volatile.Register32 // 0x4
	GEN_CTRL       volatile.Register32 // 0x8
	FIFO_CTRL      volatile.Register32 // 0xC
	SPCL_CTRL      volatile.Register32 // 0x10
	INTFL          volatile.Register32 // 0x14
	INTEN          volatile.Register32 // 0x18
}

// 1-Wire Master Interface
type _1_Wire_Master_Type struct {
	CFG         volatile.Register32 // 0x0
	CLK_DIV_1US volatile.Register32 // 0x4
	CTRL_STAT   volatile.Register32 // 0x8
	DATA        volatile.Register32 // 0xC
	INTFL       volatile.Register32 // 0x10
	INTEN       volatile.Register32 // 0x14
}

// ADC / AFE
type ADC_Type struct {
	CTRL     volatile.Register32 // 0x0
	STATUS   volatile.Register32 // 0x4
	DATA     volatile.Register32 // 0x8
	INTR     volatile.Register32 // 0xC
	LIMIT0   volatile.Register32 // 0x10
	LIMIT1   volatile.Register32 // 0x14
	LIMIT2   volatile.Register32 // 0x18
	LIMIT3   volatile.Register32 // 0x1C
	AFE_CTRL volatile.Register32 // 0x20
	RO_CAL0  volatile.Register32 // 0x24
	RO_CAL1  volatile.Register32 // 0x28
	RO_CAL2  volatile.Register32 // 0x2C
}

// Bitfields for CLKMAN: System Clock Manager
const (
	// CLK_CONFIG: System Clock Configuration
	System_Clock_Manager_CLK_CONFIG_CRYPTO_ENABLE_Pos          = 0x0  // Position of CRYPTO_ENABLE field.
	System_Clock_Manager_CLK_CONFIG_CRYPTO_ENABLE_Msk          = 0x1  // Bit mask of CRYPTO_ENABLE field.
	System_Clock_Manager_CLK_CONFIG_CRYPTO_ENABLE              = 0x1  // Bit CRYPTO_ENABLE.
	System_Clock_Manager_CLK_CONFIG_CRYPTO_STABILITY_COUNT_Pos = 0x4  // Position of CRYPTO_STABILITY_COUNT field.
	System_Clock_Manager_CLK_CONFIG_CRYPTO_STABILITY_COUNT_Msk = 0xf0 // Bit mask of CRYPTO_STABILITY_COUNT field.

	// CLK_CTRL: System Clock Controls
	System_Clock_Manager_CLK_CTRL_SYSTEM_SOURCE_SELECT_Pos = 0x0       // Position of SYSTEM_SOURCE_SELECT field.
	System_Clock_Manager_CLK_CTRL_SYSTEM_SOURCE_SELECT_Msk = 0x3       // Bit mask of SYSTEM_SOURCE_SELECT field.
	System_Clock_Manager_CLK_CTRL_USB_CLOCK_ENABLE_Pos     = 0x4       // Position of USB_CLOCK_ENABLE field.
	System_Clock_Manager_CLK_CTRL_USB_CLOCK_ENABLE_Msk     = 0x10      // Bit mask of USB_CLOCK_ENABLE field.
	System_Clock_Manager_CLK_CTRL_USB_CLOCK_ENABLE         = 0x10      // Bit USB_CLOCK_ENABLE.
	System_Clock_Manager_CLK_CTRL_USB_CLOCK_SELECT_Pos     = 0x5       // Position of USB_CLOCK_SELECT field.
	System_Clock_Manager_CLK_CTRL_USB_CLOCK_SELECT_Msk     = 0x20      // Bit mask of USB_CLOCK_SELECT field.
	System_Clock_Manager_CLK_CTRL_USB_CLOCK_SELECT         = 0x20      // Bit USB_CLOCK_SELECT.
	System_Clock_Manager_CLK_CTRL_CRYPTO_CLOCK_ENABLE_Pos  = 0x8       // Position of CRYPTO_CLOCK_ENABLE field.
	System_Clock_Manager_CLK_CTRL_CRYPTO_CLOCK_ENABLE_Msk  = 0x100     // Bit mask of CRYPTO_CLOCK_ENABLE field.
	System_Clock_Manager_CLK_CTRL_CRYPTO_CLOCK_ENABLE      = 0x100     // Bit CRYPTO_CLOCK_ENABLE.
	System_Clock_Manager_CLK_CTRL_RTOS_MODE_Pos            = 0xc       // Position of RTOS_MODE field.
	System_Clock_Manager_CLK_CTRL_RTOS_MODE_Msk            = 0x1000    // Bit mask of RTOS_MODE field.
	System_Clock_Manager_CLK_CTRL_RTOS_MODE                = 0x1000    // Bit RTOS_MODE.
	System_Clock_Manager_CLK_CTRL_CPU_DYNAMIC_CLOCK_Pos    = 0xd       // Position of CPU_DYNAMIC_CLOCK field.
	System_Clock_Manager_CLK_CTRL_CPU_DYNAMIC_CLOCK_Msk    = 0x2000    // Bit mask of CPU_DYNAMIC_CLOCK field.
	System_Clock_Manager_CLK_CTRL_CPU_DYNAMIC_CLOCK        = 0x2000    // Bit CPU_DYNAMIC_CLOCK.
	System_Clock_Manager_CLK_CTRL_WDT0_CLOCK_ENABLE_Pos    = 0x10      // Position of WDT0_CLOCK_ENABLE field.
	System_Clock_Manager_CLK_CTRL_WDT0_CLOCK_ENABLE_Msk    = 0x10000   // Bit mask of WDT0_CLOCK_ENABLE field.
	System_Clock_Manager_CLK_CTRL_WDT0_CLOCK_ENABLE        = 0x10000   // Bit WDT0_CLOCK_ENABLE.
	System_Clock_Manager_CLK_CTRL_WDT0_CLOCK_SELECT_Pos    = 0x11      // Position of WDT0_CLOCK_SELECT field.
	System_Clock_Manager_CLK_CTRL_WDT0_CLOCK_SELECT_Msk    = 0x60000   // Bit mask of WDT0_CLOCK_SELECT field.
	System_Clock_Manager_CLK_CTRL_WDT1_CLOCK_ENABLE_Pos    = 0x14      // Position of WDT1_CLOCK_ENABLE field.
	System_Clock_Manager_CLK_CTRL_WDT1_CLOCK_ENABLE_Msk    = 0x100000  // Bit mask of WDT1_CLOCK_ENABLE field.
	System_Clock_Manager_CLK_CTRL_WDT1_CLOCK_ENABLE        = 0x100000  // Bit WDT1_CLOCK_ENABLE.
	System_Clock_Manager_CLK_CTRL_WDT1_CLOCK_SELECT_Pos    = 0x15      // Position of WDT1_CLOCK_SELECT field.
	System_Clock_Manager_CLK_CTRL_WDT1_CLOCK_SELECT_Msk    = 0x600000  // Bit mask of WDT1_CLOCK_SELECT field.
	System_Clock_Manager_CLK_CTRL_ADC_CLOCK_ENABLE_Pos     = 0x18      // Position of ADC_CLOCK_ENABLE field.
	System_Clock_Manager_CLK_CTRL_ADC_CLOCK_ENABLE_Msk     = 0x1000000 // Bit mask of ADC_CLOCK_ENABLE field.
	System_Clock_Manager_CLK_CTRL_ADC_CLOCK_ENABLE         = 0x1000000 // Bit ADC_CLOCK_ENABLE.

	// INTFL: Interrupt Flags
	System_Clock_Manager_INTFL_CRYPTO_STABLE_Pos = 0x0 // Position of CRYPTO_STABLE field.
	System_Clock_Manager_INTFL_CRYPTO_STABLE_Msk = 0x1 // Bit mask of CRYPTO_STABLE field.
	System_Clock_Manager_INTFL_CRYPTO_STABLE     = 0x1 // Bit CRYPTO_STABLE.
	System_Clock_Manager_INTFL_SYS_RO_STABLE_Pos = 0x1 // Position of SYS_RO_STABLE field.
	System_Clock_Manager_INTFL_SYS_RO_STABLE_Msk = 0x2 // Bit mask of SYS_RO_STABLE field.
	System_Clock_Manager_INTFL_SYS_RO_STABLE     = 0x2 // Bit SYS_RO_STABLE.

	// INTEN: Interrupt Enable/Disable Controls
	System_Clock_Manager_INTEN_CRYPTO_STABLE_Pos = 0x0 // Position of CRYPTO_STABLE field.
	System_Clock_Manager_INTEN_CRYPTO_STABLE_Msk = 0x1 // Bit mask of CRYPTO_STABLE field.
	System_Clock_Manager_INTEN_CRYPTO_STABLE     = 0x1 // Bit CRYPTO_STABLE.
	System_Clock_Manager_INTEN_SYS_RO_STABLE_Pos = 0x1 // Position of SYS_RO_STABLE field.
	System_Clock_Manager_INTEN_SYS_RO_STABLE_Msk = 0x2 // Bit mask of SYS_RO_STABLE field.
	System_Clock_Manager_INTEN_SYS_RO_STABLE     = 0x2 // Bit SYS_RO_STABLE.

	// TRIM_CALC: Trim Calculation Controls
	System_Clock_Manager_TRIM_CALC_TRIM_CLK_SEL_Pos        = 0x0       // Position of TRIM_CLK_SEL field.
	System_Clock_Manager_TRIM_CALC_TRIM_CLK_SEL_Msk        = 0x1       // Bit mask of TRIM_CLK_SEL field.
	System_Clock_Manager_TRIM_CALC_TRIM_CLK_SEL            = 0x1       // Bit TRIM_CLK_SEL.
	System_Clock_Manager_TRIM_CALC_TRIM_CALC_START_Pos     = 0x1       // Position of TRIM_CALC_START field.
	System_Clock_Manager_TRIM_CALC_TRIM_CALC_START_Msk     = 0x2       // Bit mask of TRIM_CALC_START field.
	System_Clock_Manager_TRIM_CALC_TRIM_CALC_START         = 0x2       // Bit TRIM_CALC_START.
	System_Clock_Manager_TRIM_CALC_TRIM_CALC_COMPLETED_Pos = 0x2       // Position of TRIM_CALC_COMPLETED field.
	System_Clock_Manager_TRIM_CALC_TRIM_CALC_COMPLETED_Msk = 0x4       // Bit mask of TRIM_CALC_COMPLETED field.
	System_Clock_Manager_TRIM_CALC_TRIM_CALC_COMPLETED     = 0x4       // Bit TRIM_CALC_COMPLETED.
	System_Clock_Manager_TRIM_CALC_TRIM_ENABLE_Pos         = 0x3       // Position of TRIM_ENABLE field.
	System_Clock_Manager_TRIM_CALC_TRIM_ENABLE_Msk         = 0x8       // Bit mask of TRIM_ENABLE field.
	System_Clock_Manager_TRIM_CALC_TRIM_ENABLE             = 0x8       // Bit TRIM_ENABLE.
	System_Clock_Manager_TRIM_CALC_TRIM_CALC_RESULTS_Pos   = 0x10      // Position of TRIM_CALC_RESULTS field.
	System_Clock_Manager_TRIM_CALC_TRIM_CALC_RESULTS_Msk   = 0x3ff0000 // Bit mask of TRIM_CALC_RESULTS field.

	// I2C_TIMER_CTRL: I2C Timer Control
	System_Clock_Manager_I2C_TIMER_CTRL_I2C_1MS_TIMER_EN_Pos = 0x0 // Position of I2C_1MS_TIMER_EN field.
	System_Clock_Manager_I2C_TIMER_CTRL_I2C_1MS_TIMER_EN_Msk = 0x1 // Bit mask of I2C_1MS_TIMER_EN field.
	System_Clock_Manager_I2C_TIMER_CTRL_I2C_1MS_TIMER_EN     = 0x1 // Bit I2C_1MS_TIMER_EN.

	// CM4_START_CLK_EN0: CM4 Start Clock on Interrupt Enable 0
	System_Clock_Manager_CM4_START_CLK_EN0_INTS_Pos = 0x0        // Position of INTS field.
	System_Clock_Manager_CM4_START_CLK_EN0_INTS_Msk = 0xffffffff // Bit mask of INTS field.

	// CM4_START_CLK_EN1: CM4 Start Clock on Interrupt Enable 1
	System_Clock_Manager_CM4_START_CLK_EN1_INTS_Pos = 0x0        // Position of INTS field.
	System_Clock_Manager_CM4_START_CLK_EN1_INTS_Msk = 0xffffffff // Bit mask of INTS field.

	// CM4_START_CLK_EN2: CM4 Start Clock on Interrupt Enable 2
	System_Clock_Manager_CM4_START_CLK_EN2_INTS_Pos = 0x0        // Position of INTS field.
	System_Clock_Manager_CM4_START_CLK_EN2_INTS_Msk = 0xffffffff // Bit mask of INTS field.

	// SYS_CLK_CTRL_0_CM4: Control Settings for CLK0 - Cortex M4 Clock
	System_Clock_Manager_SYS_CLK_CTRL_0_CM4_CM4_CLK_SCALE_Pos = 0x0 // Position of CM4_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_0_CM4_CM4_CLK_SCALE_Msk = 0xf // Bit mask of CM4_CLK_SCALE field.

	// SYS_CLK_CTRL_1_SYNC: Control Settings for CLK1 - Synchronizer Clock
	System_Clock_Manager_SYS_CLK_CTRL_1_SYNC_SYNC_CLK_SCALE_Pos = 0x0 // Position of SYNC_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_1_SYNC_SYNC_CLK_SCALE_Msk = 0xf // Bit mask of SYNC_CLK_SCALE field.

	// SYS_CLK_CTRL_2_SPIX: Control Settings for CLK2 - SPI XIP Clock
	System_Clock_Manager_SYS_CLK_CTRL_2_SPIX_SPIX_CLK_SCALE_Pos = 0x0 // Position of SPIX_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_2_SPIX_SPIX_CLK_SCALE_Msk = 0xf // Bit mask of SPIX_CLK_SCALE field.

	// SYS_CLK_CTRL_3_PRNG: Control Settings for CLK3 - PRNG Clock
	System_Clock_Manager_SYS_CLK_CTRL_3_PRNG_PRNG_CLK_SCALE_Pos = 0x0 // Position of PRNG_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_3_PRNG_PRNG_CLK_SCALE_Msk = 0xf // Bit mask of PRNG_CLK_SCALE field.

	// SYS_CLK_CTRL_4_WDT0: Control Settings for CLK4 - Watchdog Timer 0
	System_Clock_Manager_SYS_CLK_CTRL_4_WDT0_WATCHDOG0_CLK_SCALE_Pos = 0x0 // Position of WATCHDOG0_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_4_WDT0_WATCHDOG0_CLK_SCALE_Msk = 0xf // Bit mask of WATCHDOG0_CLK_SCALE field.

	// SYS_CLK_CTRL_5_WDT1: Control Settings for CLK5 - Watchdog Timer 1
	System_Clock_Manager_SYS_CLK_CTRL_5_WDT1_WATCHDOG1_CLK_SCALE_Pos = 0x0 // Position of WATCHDOG1_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_5_WDT1_WATCHDOG1_CLK_SCALE_Msk = 0xf // Bit mask of WATCHDOG1_CLK_SCALE field.

	// SYS_CLK_CTRL_6_GPIO: Control Settings for CLK6 - Clock for GPIO Ports
	System_Clock_Manager_SYS_CLK_CTRL_6_GPIO_GPIO_CLK_SCALE_Pos = 0x0 // Position of GPIO_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_6_GPIO_GPIO_CLK_SCALE_Msk = 0xf // Bit mask of GPIO_CLK_SCALE field.

	// SYS_CLK_CTRL_7_PT: Control Settings for CLK7 - Source Clock for All Pulse Trains
	System_Clock_Manager_SYS_CLK_CTRL_7_PT_PULSE_TRAIN_CLK_SCALE_Pos = 0x0 // Position of PULSE_TRAIN_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_7_PT_PULSE_TRAIN_CLK_SCALE_Msk = 0xf // Bit mask of PULSE_TRAIN_CLK_SCALE field.

	// SYS_CLK_CTRL_8_UART: Control Settings for CLK8 - Source Clock for All UARTs
	System_Clock_Manager_SYS_CLK_CTRL_8_UART_UART_CLK_SCALE_Pos = 0x0 // Position of UART_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_8_UART_UART_CLK_SCALE_Msk = 0xf // Bit mask of UART_CLK_SCALE field.

	// SYS_CLK_CTRL_9_I2CM: Control Settings for CLK9 - Source Clock for All I2C Masters
	System_Clock_Manager_SYS_CLK_CTRL_9_I2CM_I2CM_CLK_SCALE_Pos = 0x0 // Position of I2CM_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_9_I2CM_I2CM_CLK_SCALE_Msk = 0xf // Bit mask of I2CM_CLK_SCALE field.

	// SYS_CLK_CTRL_10_I2CS: Control Settings for CLK10 - Source Clock for I2C Slave
	System_Clock_Manager_SYS_CLK_CTRL_10_I2CS_I2CS_CLK_SCALE_Pos = 0x0 // Position of I2CS_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_10_I2CS_I2CS_CLK_SCALE_Msk = 0xf // Bit mask of I2CS_CLK_SCALE field.

	// SYS_CLK_CTRL_11_SPI0: Control Settings for CLK11 - SPI Master 0
	System_Clock_Manager_SYS_CLK_CTRL_11_SPI0_SPI0_CLK_SCALE_Pos = 0x0 // Position of SPI0_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_11_SPI0_SPI0_CLK_SCALE_Msk = 0xf // Bit mask of SPI0_CLK_SCALE field.

	// SYS_CLK_CTRL_12_SPI1: Control Settings for CLK12 - SPI Master 1
	System_Clock_Manager_SYS_CLK_CTRL_12_SPI1_SPI1_CLK_SCALE_Pos = 0x0 // Position of SPI1_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_12_SPI1_SPI1_CLK_SCALE_Msk = 0xf // Bit mask of SPI1_CLK_SCALE field.

	// SYS_CLK_CTRL_13_SPI2: Control Settings for CLK13 - SPI Master 2
	System_Clock_Manager_SYS_CLK_CTRL_13_SPI2_SPI2_CLK_SCALE_Pos = 0x0 // Position of SPI2_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_13_SPI2_SPI2_CLK_SCALE_Msk = 0xf // Bit mask of SPI2_CLK_SCALE field.

	// SYS_CLK_CTRL_14_SPIB: Control Settings for CLK14 - SPI Bridge Clock
	System_Clock_Manager_SYS_CLK_CTRL_14_SPIB_SPIB_CLK_SCALE_Pos = 0x0 // Position of SPIB_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_14_SPIB_SPIB_CLK_SCALE_Msk = 0xf // Bit mask of SPIB_CLK_SCALE field.

	// SYS_CLK_CTRL_15_OWM: Control Settings for CLK15 - 1-Wire Master Clock
	System_Clock_Manager_SYS_CLK_CTRL_15_OWM_OWM_CLK_SCALE_Pos = 0x0 // Position of OWM_CLK_SCALE field.
	System_Clock_Manager_SYS_CLK_CTRL_15_OWM_OWM_CLK_SCALE_Msk = 0xf // Bit mask of OWM_CLK_SCALE field.

	// CRYPT_CLK_CTRL_0_AES: Control Settings for Crypto Clock 0 - AES
	System_Clock_Manager_CRYPT_CLK_CTRL_0_AES_AES_CLK_SCALE_Pos = 0x0 // Position of AES_CLK_SCALE field.
	System_Clock_Manager_CRYPT_CLK_CTRL_0_AES_AES_CLK_SCALE_Msk = 0xf // Bit mask of AES_CLK_SCALE field.

	// CRYPT_CLK_CTRL_1_MAA: Control Settings for Crypto Clock 1 - MAA
	System_Clock_Manager_CRYPT_CLK_CTRL_1_MAA_MAA_CLK_SCALE_Pos = 0x0 // Position of MAA_CLK_SCALE field.
	System_Clock_Manager_CRYPT_CLK_CTRL_1_MAA_MAA_CLK_SCALE_Msk = 0xf // Bit mask of MAA_CLK_SCALE field.

	// CRYPT_CLK_CTRL_2_PRNG: Control Settings for Crypto Clock 2 - PRNG
	System_Clock_Manager_CRYPT_CLK_CTRL_2_PRNG_PRNG_CLK_SCALE_Pos = 0x0 // Position of PRNG_CLK_SCALE field.
	System_Clock_Manager_CRYPT_CLK_CTRL_2_PRNG_PRNG_CLK_SCALE_Msk = 0xf // Bit mask of PRNG_CLK_SCALE field.

	// CLK_GATE_CTRL0: Dynamic Clock Gating Control Register 0
	System_Clock_Manager_CLK_GATE_CTRL0_CM4_CLK_GATER_Pos        = 0x0        // Position of CM4_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_CM4_CLK_GATER_Msk        = 0x3        // Bit mask of CM4_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_AHB32_CLK_GATER_Pos      = 0x2        // Position of AHB32_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_AHB32_CLK_GATER_Msk      = 0xc        // Bit mask of AHB32_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_ICACHE_CLK_GATER_Pos     = 0x4        // Position of ICACHE_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_ICACHE_CLK_GATER_Msk     = 0x30       // Bit mask of ICACHE_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_FLASH_CLK_GATER_Pos      = 0x6        // Position of FLASH_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_FLASH_CLK_GATER_Msk      = 0xc0       // Bit mask of FLASH_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_SRAM_CLK_GATER_Pos       = 0x8        // Position of SRAM_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_SRAM_CLK_GATER_Msk       = 0x300      // Bit mask of SRAM_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_APB_BRIDGE_CLK_GATER_Pos = 0xa        // Position of APB_BRIDGE_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_APB_BRIDGE_CLK_GATER_Msk = 0xc00      // Bit mask of APB_BRIDGE_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_SYSMAN_CLK_GATER_Pos     = 0xc        // Position of SYSMAN_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_SYSMAN_CLK_GATER_Msk     = 0x3000     // Bit mask of SYSMAN_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_PTP_CLK_GATER_Pos        = 0xe        // Position of PTP_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_PTP_CLK_GATER_Msk        = 0xc000     // Bit mask of PTP_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_SSB_MUX_CLK_GATER_Pos    = 0x10       // Position of SSB_MUX_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_SSB_MUX_CLK_GATER_Msk    = 0x30000    // Bit mask of SSB_MUX_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_PAD_CLK_GATER_Pos        = 0x12       // Position of PAD_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_PAD_CLK_GATER_Msk        = 0xc0000    // Bit mask of PAD_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_SPIX_CLK_GATER_Pos       = 0x14       // Position of SPIX_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_SPIX_CLK_GATER_Msk       = 0x300000   // Bit mask of SPIX_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_PMU_CLK_GATER_Pos        = 0x16       // Position of PMU_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_PMU_CLK_GATER_Msk        = 0xc00000   // Bit mask of PMU_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_USB_CLK_GATER_Pos        = 0x18       // Position of USB_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_USB_CLK_GATER_Msk        = 0x3000000  // Bit mask of USB_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_CRC_CLK_GATER_Pos        = 0x1a       // Position of CRC_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_CRC_CLK_GATER_Msk        = 0xc000000  // Bit mask of CRC_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_TPU_CLK_GATER_Pos        = 0x1c       // Position of TPU_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_TPU_CLK_GATER_Msk        = 0x30000000 // Bit mask of TPU_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_WATCHDOG0_CLK_GATER_Pos  = 0x1e       // Position of WATCHDOG0_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL0_WATCHDOG0_CLK_GATER_Msk  = 0xc0000000 // Bit mask of WATCHDOG0_CLK_GATER field.

	// CLK_GATE_CTRL1: Dynamic Clock Gating Control Register 1
	System_Clock_Manager_CLK_GATE_CTRL1_WATCHDOG1_CLK_GATER_Pos  = 0x0        // Position of WATCHDOG1_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_WATCHDOG1_CLK_GATER_Msk  = 0x3        // Bit mask of WATCHDOG1_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_GPIO_CLK_GATER_Pos       = 0x2        // Position of GPIO_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_GPIO_CLK_GATER_Msk       = 0xc        // Bit mask of GPIO_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER0_CLK_GATER_Pos     = 0x4        // Position of TIMER0_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER0_CLK_GATER_Msk     = 0x30       // Bit mask of TIMER0_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER1_CLK_GATER_Pos     = 0x6        // Position of TIMER1_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER1_CLK_GATER_Msk     = 0xc0       // Bit mask of TIMER1_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER2_CLK_GATER_Pos     = 0x8        // Position of TIMER2_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER2_CLK_GATER_Msk     = 0x300      // Bit mask of TIMER2_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER3_CLK_GATER_Pos     = 0xa        // Position of TIMER3_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER3_CLK_GATER_Msk     = 0xc00      // Bit mask of TIMER3_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER4_CLK_GATER_Pos     = 0xc        // Position of TIMER4_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER4_CLK_GATER_Msk     = 0x3000     // Bit mask of TIMER4_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER5_CLK_GATER_Pos     = 0xe        // Position of TIMER5_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_TIMER5_CLK_GATER_Msk     = 0xc000     // Bit mask of TIMER5_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_PULSETRAIN_CLK_GATER_Pos = 0x10       // Position of PULSETRAIN_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_PULSETRAIN_CLK_GATER_Msk = 0x30000    // Bit mask of PULSETRAIN_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_UART0_CLK_GATER_Pos      = 0x12       // Position of UART0_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_UART0_CLK_GATER_Msk      = 0xc0000    // Bit mask of UART0_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_UART1_CLK_GATER_Pos      = 0x14       // Position of UART1_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_UART1_CLK_GATER_Msk      = 0x300000   // Bit mask of UART1_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_UART2_CLK_GATER_Pos      = 0x16       // Position of UART2_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_UART2_CLK_GATER_Msk      = 0xc00000   // Bit mask of UART2_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_UART3_CLK_GATER_Pos      = 0x18       // Position of UART3_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_UART3_CLK_GATER_Msk      = 0x3000000  // Bit mask of UART3_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_I2CM0_CLK_GATER_Pos      = 0x1a       // Position of I2CM0_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_I2CM0_CLK_GATER_Msk      = 0xc000000  // Bit mask of I2CM0_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_I2CM1_CLK_GATER_Pos      = 0x1c       // Position of I2CM1_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_I2CM1_CLK_GATER_Msk      = 0x30000000 // Bit mask of I2CM1_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_I2CM2_CLK_GATER_Pos      = 0x1e       // Position of I2CM2_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL1_I2CM2_CLK_GATER_Msk      = 0xc0000000 // Bit mask of I2CM2_CLK_GATER field.

	// CLK_GATE_CTRL2: Dynamic Clock Gating Control Register 2
	System_Clock_Manager_CLK_GATE_CTRL2_I2CS_CLK_GATER_Pos       = 0x0    // Position of I2CS_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_I2CS_CLK_GATER_Msk       = 0x3    // Bit mask of I2CS_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_SPI0_CLK_GATER_Pos       = 0x2    // Position of SPI0_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_SPI0_CLK_GATER_Msk       = 0xc    // Bit mask of SPI0_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_SPI1_CLK_GATER_Pos       = 0x4    // Position of SPI1_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_SPI1_CLK_GATER_Msk       = 0x30   // Bit mask of SPI1_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_SPI2_CLK_GATER_Pos       = 0x6    // Position of SPI2_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_SPI2_CLK_GATER_Msk       = 0xc0   // Bit mask of SPI2_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_SPI_BRIDGE_CLK_GATER_Pos = 0x8    // Position of SPI_BRIDGE_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_SPI_BRIDGE_CLK_GATER_Msk = 0x300  // Bit mask of SPI_BRIDGE_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_OWM_CLK_GATER_Pos        = 0xa    // Position of OWM_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_OWM_CLK_GATER_Msk        = 0xc00  // Bit mask of OWM_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_ADC_CLK_GATER_Pos        = 0xc    // Position of ADC_CLK_GATER field.
	System_Clock_Manager_CLK_GATE_CTRL2_ADC_CLK_GATER_Msk        = 0x3000 // Bit mask of ADC_CLK_GATER field.
)

// Bitfields for PWRMAN: System Power Manager
const (
	// PWR_RST_CTRL: Power Reset Control and Status
	Power_Manager_PWR_RST_CTRL_AFE_POWERED_Pos       = 0x2        // Position of AFE_POWERED field.
	Power_Manager_PWR_RST_CTRL_AFE_POWERED_Msk       = 0x4        // Bit mask of AFE_POWERED field.
	Power_Manager_PWR_RST_CTRL_AFE_POWERED           = 0x4        // Bit AFE_POWERED.
	Power_Manager_PWR_RST_CTRL_IO_ACTIVE_Pos         = 0x3        // Position of IO_ACTIVE field.
	Power_Manager_PWR_RST_CTRL_IO_ACTIVE_Msk         = 0x8        // Bit mask of IO_ACTIVE field.
	Power_Manager_PWR_RST_CTRL_IO_ACTIVE             = 0x8        // Bit IO_ACTIVE.
	Power_Manager_PWR_RST_CTRL_USB_POWERED_Pos       = 0x4        // Position of USB_POWERED field.
	Power_Manager_PWR_RST_CTRL_USB_POWERED_Msk       = 0x10       // Bit mask of USB_POWERED field.
	Power_Manager_PWR_RST_CTRL_USB_POWERED           = 0x10       // Bit USB_POWERED.
	Power_Manager_PWR_RST_CTRL_PULLUPS_ENABLED_Pos   = 0x5        // Position of PULLUPS_ENABLED field.
	Power_Manager_PWR_RST_CTRL_PULLUPS_ENABLED_Msk   = 0x20       // Bit mask of PULLUPS_ENABLED field.
	Power_Manager_PWR_RST_CTRL_PULLUPS_ENABLED       = 0x20       // Bit PULLUPS_ENABLED.
	Power_Manager_PWR_RST_CTRL_FIRMWARE_RESET_Pos    = 0x8        // Position of FIRMWARE_RESET field.
	Power_Manager_PWR_RST_CTRL_FIRMWARE_RESET_Msk    = 0x100      // Bit mask of FIRMWARE_RESET field.
	Power_Manager_PWR_RST_CTRL_FIRMWARE_RESET        = 0x100      // Bit FIRMWARE_RESET.
	Power_Manager_PWR_RST_CTRL_ARM_LOCKUP_RESET_Pos  = 0x9        // Position of ARM_LOCKUP_RESET field.
	Power_Manager_PWR_RST_CTRL_ARM_LOCKUP_RESET_Msk  = 0x200      // Bit mask of ARM_LOCKUP_RESET field.
	Power_Manager_PWR_RST_CTRL_ARM_LOCKUP_RESET      = 0x200      // Bit ARM_LOCKUP_RESET.
	Power_Manager_PWR_RST_CTRL_TAMPER_DETECT_Pos     = 0x10       // Position of TAMPER_DETECT field.
	Power_Manager_PWR_RST_CTRL_TAMPER_DETECT_Msk     = 0x10000    // Bit mask of TAMPER_DETECT field.
	Power_Manager_PWR_RST_CTRL_TAMPER_DETECT         = 0x10000    // Bit TAMPER_DETECT.
	Power_Manager_PWR_RST_CTRL_FW_COMMAND_SYSMAN_Pos = 0x11       // Position of FW_COMMAND_SYSMAN field.
	Power_Manager_PWR_RST_CTRL_FW_COMMAND_SYSMAN_Msk = 0x20000    // Bit mask of FW_COMMAND_SYSMAN field.
	Power_Manager_PWR_RST_CTRL_FW_COMMAND_SYSMAN     = 0x20000    // Bit FW_COMMAND_SYSMAN.
	Power_Manager_PWR_RST_CTRL_WATCHDOG_TIMEOUT_Pos  = 0x12       // Position of WATCHDOG_TIMEOUT field.
	Power_Manager_PWR_RST_CTRL_WATCHDOG_TIMEOUT_Msk  = 0x40000    // Bit mask of WATCHDOG_TIMEOUT field.
	Power_Manager_PWR_RST_CTRL_WATCHDOG_TIMEOUT      = 0x40000    // Bit WATCHDOG_TIMEOUT.
	Power_Manager_PWR_RST_CTRL_FW_COMMAND_ARM_Pos    = 0x13       // Position of FW_COMMAND_ARM field.
	Power_Manager_PWR_RST_CTRL_FW_COMMAND_ARM_Msk    = 0x80000    // Bit mask of FW_COMMAND_ARM field.
	Power_Manager_PWR_RST_CTRL_FW_COMMAND_ARM        = 0x80000    // Bit FW_COMMAND_ARM.
	Power_Manager_PWR_RST_CTRL_ARM_LOCKUP_Pos        = 0x14       // Position of ARM_LOCKUP field.
	Power_Manager_PWR_RST_CTRL_ARM_LOCKUP_Msk        = 0x100000   // Bit mask of ARM_LOCKUP field.
	Power_Manager_PWR_RST_CTRL_ARM_LOCKUP            = 0x100000   // Bit ARM_LOCKUP.
	Power_Manager_PWR_RST_CTRL_SRSTN_ASSERTION_Pos   = 0x15       // Position of SRSTN_ASSERTION field.
	Power_Manager_PWR_RST_CTRL_SRSTN_ASSERTION_Msk   = 0x200000   // Bit mask of SRSTN_ASSERTION field.
	Power_Manager_PWR_RST_CTRL_SRSTN_ASSERTION       = 0x200000   // Bit SRSTN_ASSERTION.
	Power_Manager_PWR_RST_CTRL_POR_Pos               = 0x16       // Position of POR field.
	Power_Manager_PWR_RST_CTRL_POR_Msk               = 0x400000   // Bit mask of POR field.
	Power_Manager_PWR_RST_CTRL_POR                   = 0x400000   // Bit POR.
	Power_Manager_PWR_RST_CTRL_LOW_POWER_MODE_Pos    = 0x1f       // Position of LOW_POWER_MODE field.
	Power_Manager_PWR_RST_CTRL_LOW_POWER_MODE_Msk    = 0x80000000 // Bit mask of LOW_POWER_MODE field.
	Power_Manager_PWR_RST_CTRL_LOW_POWER_MODE        = 0x80000000 // Bit LOW_POWER_MODE.

	// INTFL: Interrupt Flags
	Power_Manager_INTFL_V1_2_WARNING_Pos = 0x0  // Position of V1_2_WARNING field.
	Power_Manager_INTFL_V1_2_WARNING_Msk = 0x1  // Bit mask of V1_2_WARNING field.
	Power_Manager_INTFL_V1_2_WARNING     = 0x1  // Bit V1_2_WARNING.
	Power_Manager_INTFL_V1_8_WARNING_Pos = 0x1  // Position of V1_8_WARNING field.
	Power_Manager_INTFL_V1_8_WARNING_Msk = 0x2  // Bit mask of V1_8_WARNING field.
	Power_Manager_INTFL_V1_8_WARNING     = 0x2  // Bit V1_8_WARNING.
	Power_Manager_INTFL_RTC_WARNING_Pos  = 0x2  // Position of RTC_WARNING field.
	Power_Manager_INTFL_RTC_WARNING_Msk  = 0x4  // Bit mask of RTC_WARNING field.
	Power_Manager_INTFL_RTC_WARNING      = 0x4  // Bit RTC_WARNING.
	Power_Manager_INTFL_VDDA_WARNING_Pos = 0x3  // Position of VDDA_WARNING field.
	Power_Manager_INTFL_VDDA_WARNING_Msk = 0x8  // Bit mask of VDDA_WARNING field.
	Power_Manager_INTFL_VDDA_WARNING     = 0x8  // Bit VDDA_WARNING.
	Power_Manager_INTFL_VDDB_WARNING_Pos = 0x4  // Position of VDDB_WARNING field.
	Power_Manager_INTFL_VDDB_WARNING_Msk = 0x10 // Bit mask of VDDB_WARNING field.
	Power_Manager_INTFL_VDDB_WARNING     = 0x10 // Bit VDDB_WARNING.

	// INTEN: Interrupt Enable/Disable Controls
	Power_Manager_INTEN_V1_2_WARNING_Pos = 0x0  // Position of V1_2_WARNING field.
	Power_Manager_INTEN_V1_2_WARNING_Msk = 0x1  // Bit mask of V1_2_WARNING field.
	Power_Manager_INTEN_V1_2_WARNING     = 0x1  // Bit V1_2_WARNING.
	Power_Manager_INTEN_V1_8_WARNING_Pos = 0x1  // Position of V1_8_WARNING field.
	Power_Manager_INTEN_V1_8_WARNING_Msk = 0x2  // Bit mask of V1_8_WARNING field.
	Power_Manager_INTEN_V1_8_WARNING     = 0x2  // Bit V1_8_WARNING.
	Power_Manager_INTEN_RTC_WARNING_Pos  = 0x2  // Position of RTC_WARNING field.
	Power_Manager_INTEN_RTC_WARNING_Msk  = 0x4  // Bit mask of RTC_WARNING field.
	Power_Manager_INTEN_RTC_WARNING      = 0x4  // Bit RTC_WARNING.
	Power_Manager_INTEN_VDDA_WARNING_Pos = 0x3  // Position of VDDA_WARNING field.
	Power_Manager_INTEN_VDDA_WARNING_Msk = 0x8  // Bit mask of VDDA_WARNING field.
	Power_Manager_INTEN_VDDA_WARNING     = 0x8  // Bit VDDA_WARNING.
	Power_Manager_INTEN_VDDB_WARNING_Pos = 0x4  // Position of VDDB_WARNING field.
	Power_Manager_INTEN_VDDB_WARNING_Msk = 0x10 // Bit mask of VDDB_WARNING field.
	Power_Manager_INTEN_VDDB_WARNING     = 0x10 // Bit VDDB_WARNING.

	// SVM_EVENTS: SVM Event Status Flags (read-only)
	Power_Manager_SVM_EVENTS_V1_2_WARNING_Pos = 0x0  // Position of V1_2_WARNING field.
	Power_Manager_SVM_EVENTS_V1_2_WARNING_Msk = 0x1  // Bit mask of V1_2_WARNING field.
	Power_Manager_SVM_EVENTS_V1_2_WARNING     = 0x1  // Bit V1_2_WARNING.
	Power_Manager_SVM_EVENTS_V1_8_WARNING_Pos = 0x1  // Position of V1_8_WARNING field.
	Power_Manager_SVM_EVENTS_V1_8_WARNING_Msk = 0x2  // Bit mask of V1_8_WARNING field.
	Power_Manager_SVM_EVENTS_V1_8_WARNING     = 0x2  // Bit V1_8_WARNING.
	Power_Manager_SVM_EVENTS_RTC_WARNING_Pos  = 0x2  // Position of RTC_WARNING field.
	Power_Manager_SVM_EVENTS_RTC_WARNING_Msk  = 0x4  // Bit mask of RTC_WARNING field.
	Power_Manager_SVM_EVENTS_RTC_WARNING      = 0x4  // Bit RTC_WARNING.
	Power_Manager_SVM_EVENTS_VDDA_WARNING_Pos = 0x3  // Position of VDDA_WARNING field.
	Power_Manager_SVM_EVENTS_VDDA_WARNING_Msk = 0x8  // Bit mask of VDDA_WARNING field.
	Power_Manager_SVM_EVENTS_VDDA_WARNING     = 0x8  // Bit VDDA_WARNING.
	Power_Manager_SVM_EVENTS_VDDB_WARNING_Pos = 0x4  // Position of VDDB_WARNING field.
	Power_Manager_SVM_EVENTS_VDDB_WARNING_Msk = 0x10 // Bit mask of VDDB_WARNING field.
	Power_Manager_SVM_EVENTS_VDDB_WARNING     = 0x10 // Bit VDDB_WARNING.

	// WUD_CTRL: Wake-Up Detect Control
	Power_Manager_WUD_CTRL_PAD_SELECT_Pos  = 0x0     // Position of PAD_SELECT field.
	Power_Manager_WUD_CTRL_PAD_SELECT_Msk  = 0x3f    // Bit mask of PAD_SELECT field.
	Power_Manager_WUD_CTRL_PAD_MODE_Pos    = 0x8     // Position of PAD_MODE field.
	Power_Manager_WUD_CTRL_PAD_MODE_Msk    = 0x300   // Bit mask of PAD_MODE field.
	Power_Manager_WUD_CTRL_CLEAR_ALL_Pos   = 0xc     // Position of CLEAR_ALL field.
	Power_Manager_WUD_CTRL_CLEAR_ALL_Msk   = 0x1000  // Bit mask of CLEAR_ALL field.
	Power_Manager_WUD_CTRL_CLEAR_ALL       = 0x1000  // Bit CLEAR_ALL.
	Power_Manager_WUD_CTRL_CTRL_ENABLE_Pos = 0x10    // Position of CTRL_ENABLE field.
	Power_Manager_WUD_CTRL_CTRL_ENABLE_Msk = 0x10000 // Bit mask of CTRL_ENABLE field.
	Power_Manager_WUD_CTRL_CTRL_ENABLE     = 0x10000 // Bit CTRL_ENABLE.

	// WUD_SEEN0: Wake-up Detect Status for P0/P1/P2/P3
	Power_Manager_WUD_SEEN0_GPIO0_Pos  = 0x0        // Position of GPIO0 field.
	Power_Manager_WUD_SEEN0_GPIO0_Msk  = 0x1        // Bit mask of GPIO0 field.
	Power_Manager_WUD_SEEN0_GPIO0      = 0x1        // Bit GPIO0.
	Power_Manager_WUD_SEEN0_GPIO1_Pos  = 0x1        // Position of GPIO1 field.
	Power_Manager_WUD_SEEN0_GPIO1_Msk  = 0x2        // Bit mask of GPIO1 field.
	Power_Manager_WUD_SEEN0_GPIO1      = 0x2        // Bit GPIO1.
	Power_Manager_WUD_SEEN0_GPIO2_Pos  = 0x2        // Position of GPIO2 field.
	Power_Manager_WUD_SEEN0_GPIO2_Msk  = 0x4        // Bit mask of GPIO2 field.
	Power_Manager_WUD_SEEN0_GPIO2      = 0x4        // Bit GPIO2.
	Power_Manager_WUD_SEEN0_GPIO3_Pos  = 0x3        // Position of GPIO3 field.
	Power_Manager_WUD_SEEN0_GPIO3_Msk  = 0x8        // Bit mask of GPIO3 field.
	Power_Manager_WUD_SEEN0_GPIO3      = 0x8        // Bit GPIO3.
	Power_Manager_WUD_SEEN0_GPIO4_Pos  = 0x4        // Position of GPIO4 field.
	Power_Manager_WUD_SEEN0_GPIO4_Msk  = 0x10       // Bit mask of GPIO4 field.
	Power_Manager_WUD_SEEN0_GPIO4      = 0x10       // Bit GPIO4.
	Power_Manager_WUD_SEEN0_GPIO5_Pos  = 0x5        // Position of GPIO5 field.
	Power_Manager_WUD_SEEN0_GPIO5_Msk  = 0x20       // Bit mask of GPIO5 field.
	Power_Manager_WUD_SEEN0_GPIO5      = 0x20       // Bit GPIO5.
	Power_Manager_WUD_SEEN0_GPIO6_Pos  = 0x6        // Position of GPIO6 field.
	Power_Manager_WUD_SEEN0_GPIO6_Msk  = 0x40       // Bit mask of GPIO6 field.
	Power_Manager_WUD_SEEN0_GPIO6      = 0x40       // Bit GPIO6.
	Power_Manager_WUD_SEEN0_GPIO7_Pos  = 0x7        // Position of GPIO7 field.
	Power_Manager_WUD_SEEN0_GPIO7_Msk  = 0x80       // Bit mask of GPIO7 field.
	Power_Manager_WUD_SEEN0_GPIO7      = 0x80       // Bit GPIO7.
	Power_Manager_WUD_SEEN0_GPIO8_Pos  = 0x8        // Position of GPIO8 field.
	Power_Manager_WUD_SEEN0_GPIO8_Msk  = 0x100      // Bit mask of GPIO8 field.
	Power_Manager_WUD_SEEN0_GPIO8      = 0x100      // Bit GPIO8.
	Power_Manager_WUD_SEEN0_GPIO9_Pos  = 0x9        // Position of GPIO9 field.
	Power_Manager_WUD_SEEN0_GPIO9_Msk  = 0x200      // Bit mask of GPIO9 field.
	Power_Manager_WUD_SEEN0_GPIO9      = 0x200      // Bit GPIO9.
	Power_Manager_WUD_SEEN0_GPIO10_Pos = 0xa        // Position of GPIO10 field.
	Power_Manager_WUD_SEEN0_GPIO10_Msk = 0x400      // Bit mask of GPIO10 field.
	Power_Manager_WUD_SEEN0_GPIO10     = 0x400      // Bit GPIO10.
	Power_Manager_WUD_SEEN0_GPIO11_Pos = 0xb        // Position of GPIO11 field.
	Power_Manager_WUD_SEEN0_GPIO11_Msk = 0x800      // Bit mask of GPIO11 field.
	Power_Manager_WUD_SEEN0_GPIO11     = 0x800      // Bit GPIO11.
	Power_Manager_WUD_SEEN0_GPIO12_Pos = 0xc        // Position of GPIO12 field.
	Power_Manager_WUD_SEEN0_GPIO12_Msk = 0x1000     // Bit mask of GPIO12 field.
	Power_Manager_WUD_SEEN0_GPIO12     = 0x1000     // Bit GPIO12.
	Power_Manager_WUD_SEEN0_GPIO13_Pos = 0xd        // Position of GPIO13 field.
	Power_Manager_WUD_SEEN0_GPIO13_Msk = 0x2000     // Bit mask of GPIO13 field.
	Power_Manager_WUD_SEEN0_GPIO13     = 0x2000     // Bit GPIO13.
	Power_Manager_WUD_SEEN0_GPIO14_Pos = 0xe        // Position of GPIO14 field.
	Power_Manager_WUD_SEEN0_GPIO14_Msk = 0x4000     // Bit mask of GPIO14 field.
	Power_Manager_WUD_SEEN0_GPIO14     = 0x4000     // Bit GPIO14.
	Power_Manager_WUD_SEEN0_GPIO15_Pos = 0xf        // Position of GPIO15 field.
	Power_Manager_WUD_SEEN0_GPIO15_Msk = 0x8000     // Bit mask of GPIO15 field.
	Power_Manager_WUD_SEEN0_GPIO15     = 0x8000     // Bit GPIO15.
	Power_Manager_WUD_SEEN0_GPIO16_Pos = 0x10       // Position of GPIO16 field.
	Power_Manager_WUD_SEEN0_GPIO16_Msk = 0x10000    // Bit mask of GPIO16 field.
	Power_Manager_WUD_SEEN0_GPIO16     = 0x10000    // Bit GPIO16.
	Power_Manager_WUD_SEEN0_GPIO17_Pos = 0x11       // Position of GPIO17 field.
	Power_Manager_WUD_SEEN0_GPIO17_Msk = 0x20000    // Bit mask of GPIO17 field.
	Power_Manager_WUD_SEEN0_GPIO17     = 0x20000    // Bit GPIO17.
	Power_Manager_WUD_SEEN0_GPIO18_Pos = 0x12       // Position of GPIO18 field.
	Power_Manager_WUD_SEEN0_GPIO18_Msk = 0x40000    // Bit mask of GPIO18 field.
	Power_Manager_WUD_SEEN0_GPIO18     = 0x40000    // Bit GPIO18.
	Power_Manager_WUD_SEEN0_GPIO19_Pos = 0x13       // Position of GPIO19 field.
	Power_Manager_WUD_SEEN0_GPIO19_Msk = 0x80000    // Bit mask of GPIO19 field.
	Power_Manager_WUD_SEEN0_GPIO19     = 0x80000    // Bit GPIO19.
	Power_Manager_WUD_SEEN0_GPIO20_Pos = 0x14       // Position of GPIO20 field.
	Power_Manager_WUD_SEEN0_GPIO20_Msk = 0x100000   // Bit mask of GPIO20 field.
	Power_Manager_WUD_SEEN0_GPIO20     = 0x100000   // Bit GPIO20.
	Power_Manager_WUD_SEEN0_GPIO21_Pos = 0x15       // Position of GPIO21 field.
	Power_Manager_WUD_SEEN0_GPIO21_Msk = 0x200000   // Bit mask of GPIO21 field.
	Power_Manager_WUD_SEEN0_GPIO21     = 0x200000   // Bit GPIO21.
	Power_Manager_WUD_SEEN0_GPIO22_Pos = 0x16       // Position of GPIO22 field.
	Power_Manager_WUD_SEEN0_GPIO22_Msk = 0x400000   // Bit mask of GPIO22 field.
	Power_Manager_WUD_SEEN0_GPIO22     = 0x400000   // Bit GPIO22.
	Power_Manager_WUD_SEEN0_GPIO23_Pos = 0x17       // Position of GPIO23 field.
	Power_Manager_WUD_SEEN0_GPIO23_Msk = 0x800000   // Bit mask of GPIO23 field.
	Power_Manager_WUD_SEEN0_GPIO23     = 0x800000   // Bit GPIO23.
	Power_Manager_WUD_SEEN0_GPIO24_Pos = 0x18       // Position of GPIO24 field.
	Power_Manager_WUD_SEEN0_GPIO24_Msk = 0x1000000  // Bit mask of GPIO24 field.
	Power_Manager_WUD_SEEN0_GPIO24     = 0x1000000  // Bit GPIO24.
	Power_Manager_WUD_SEEN0_GPIO25_Pos = 0x19       // Position of GPIO25 field.
	Power_Manager_WUD_SEEN0_GPIO25_Msk = 0x2000000  // Bit mask of GPIO25 field.
	Power_Manager_WUD_SEEN0_GPIO25     = 0x2000000  // Bit GPIO25.
	Power_Manager_WUD_SEEN0_GPIO26_Pos = 0x1a       // Position of GPIO26 field.
	Power_Manager_WUD_SEEN0_GPIO26_Msk = 0x4000000  // Bit mask of GPIO26 field.
	Power_Manager_WUD_SEEN0_GPIO26     = 0x4000000  // Bit GPIO26.
	Power_Manager_WUD_SEEN0_GPIO27_Pos = 0x1b       // Position of GPIO27 field.
	Power_Manager_WUD_SEEN0_GPIO27_Msk = 0x8000000  // Bit mask of GPIO27 field.
	Power_Manager_WUD_SEEN0_GPIO27     = 0x8000000  // Bit GPIO27.
	Power_Manager_WUD_SEEN0_GPIO28_Pos = 0x1c       // Position of GPIO28 field.
	Power_Manager_WUD_SEEN0_GPIO28_Msk = 0x10000000 // Bit mask of GPIO28 field.
	Power_Manager_WUD_SEEN0_GPIO28     = 0x10000000 // Bit GPIO28.
	Power_Manager_WUD_SEEN0_GPIO29_Pos = 0x1d       // Position of GPIO29 field.
	Power_Manager_WUD_SEEN0_GPIO29_Msk = 0x20000000 // Bit mask of GPIO29 field.
	Power_Manager_WUD_SEEN0_GPIO29     = 0x20000000 // Bit GPIO29.
	Power_Manager_WUD_SEEN0_GPIO30_Pos = 0x1e       // Position of GPIO30 field.
	Power_Manager_WUD_SEEN0_GPIO30_Msk = 0x40000000 // Bit mask of GPIO30 field.
	Power_Manager_WUD_SEEN0_GPIO30     = 0x40000000 // Bit GPIO30.
	Power_Manager_WUD_SEEN0_GPIO31_Pos = 0x1f       // Position of GPIO31 field.
	Power_Manager_WUD_SEEN0_GPIO31_Msk = 0x80000000 // Bit mask of GPIO31 field.
	Power_Manager_WUD_SEEN0_GPIO31     = 0x80000000 // Bit GPIO31.

	// WUD_SEEN1: Wake-up Detect Status for P4/P5/P6/P7
	Power_Manager_WUD_SEEN1_GPIO32_Pos = 0x0     // Position of GPIO32 field.
	Power_Manager_WUD_SEEN1_GPIO32_Msk = 0x1     // Bit mask of GPIO32 field.
	Power_Manager_WUD_SEEN1_GPIO32     = 0x1     // Bit GPIO32.
	Power_Manager_WUD_SEEN1_GPIO33_Pos = 0x1     // Position of GPIO33 field.
	Power_Manager_WUD_SEEN1_GPIO33_Msk = 0x2     // Bit mask of GPIO33 field.
	Power_Manager_WUD_SEEN1_GPIO33     = 0x2     // Bit GPIO33.
	Power_Manager_WUD_SEEN1_GPIO34_Pos = 0x2     // Position of GPIO34 field.
	Power_Manager_WUD_SEEN1_GPIO34_Msk = 0x4     // Bit mask of GPIO34 field.
	Power_Manager_WUD_SEEN1_GPIO34     = 0x4     // Bit GPIO34.
	Power_Manager_WUD_SEEN1_GPIO35_Pos = 0x3     // Position of GPIO35 field.
	Power_Manager_WUD_SEEN1_GPIO35_Msk = 0x8     // Bit mask of GPIO35 field.
	Power_Manager_WUD_SEEN1_GPIO35     = 0x8     // Bit GPIO35.
	Power_Manager_WUD_SEEN1_GPIO36_Pos = 0x4     // Position of GPIO36 field.
	Power_Manager_WUD_SEEN1_GPIO36_Msk = 0x10    // Bit mask of GPIO36 field.
	Power_Manager_WUD_SEEN1_GPIO36     = 0x10    // Bit GPIO36.
	Power_Manager_WUD_SEEN1_GPIO37_Pos = 0x5     // Position of GPIO37 field.
	Power_Manager_WUD_SEEN1_GPIO37_Msk = 0x20    // Bit mask of GPIO37 field.
	Power_Manager_WUD_SEEN1_GPIO37     = 0x20    // Bit GPIO37.
	Power_Manager_WUD_SEEN1_GPIO38_Pos = 0x6     // Position of GPIO38 field.
	Power_Manager_WUD_SEEN1_GPIO38_Msk = 0x40    // Bit mask of GPIO38 field.
	Power_Manager_WUD_SEEN1_GPIO38     = 0x40    // Bit GPIO38.
	Power_Manager_WUD_SEEN1_GPIO39_Pos = 0x7     // Position of GPIO39 field.
	Power_Manager_WUD_SEEN1_GPIO39_Msk = 0x80    // Bit mask of GPIO39 field.
	Power_Manager_WUD_SEEN1_GPIO39     = 0x80    // Bit GPIO39.
	Power_Manager_WUD_SEEN1_GPIO40_Pos = 0x8     // Position of GPIO40 field.
	Power_Manager_WUD_SEEN1_GPIO40_Msk = 0x100   // Bit mask of GPIO40 field.
	Power_Manager_WUD_SEEN1_GPIO40     = 0x100   // Bit GPIO40.
	Power_Manager_WUD_SEEN1_GPIO41_Pos = 0x9     // Position of GPIO41 field.
	Power_Manager_WUD_SEEN1_GPIO41_Msk = 0x200   // Bit mask of GPIO41 field.
	Power_Manager_WUD_SEEN1_GPIO41     = 0x200   // Bit GPIO41.
	Power_Manager_WUD_SEEN1_GPIO42_Pos = 0xa     // Position of GPIO42 field.
	Power_Manager_WUD_SEEN1_GPIO42_Msk = 0x400   // Bit mask of GPIO42 field.
	Power_Manager_WUD_SEEN1_GPIO42     = 0x400   // Bit GPIO42.
	Power_Manager_WUD_SEEN1_GPIO43_Pos = 0xb     // Position of GPIO43 field.
	Power_Manager_WUD_SEEN1_GPIO43_Msk = 0x800   // Bit mask of GPIO43 field.
	Power_Manager_WUD_SEEN1_GPIO43     = 0x800   // Bit GPIO43.
	Power_Manager_WUD_SEEN1_GPIO44_Pos = 0xc     // Position of GPIO44 field.
	Power_Manager_WUD_SEEN1_GPIO44_Msk = 0x1000  // Bit mask of GPIO44 field.
	Power_Manager_WUD_SEEN1_GPIO44     = 0x1000  // Bit GPIO44.
	Power_Manager_WUD_SEEN1_GPIO45_Pos = 0xd     // Position of GPIO45 field.
	Power_Manager_WUD_SEEN1_GPIO45_Msk = 0x2000  // Bit mask of GPIO45 field.
	Power_Manager_WUD_SEEN1_GPIO45     = 0x2000  // Bit GPIO45.
	Power_Manager_WUD_SEEN1_GPIO46_Pos = 0xe     // Position of GPIO46 field.
	Power_Manager_WUD_SEEN1_GPIO46_Msk = 0x4000  // Bit mask of GPIO46 field.
	Power_Manager_WUD_SEEN1_GPIO46     = 0x4000  // Bit GPIO46.
	Power_Manager_WUD_SEEN1_GPIO47_Pos = 0xf     // Position of GPIO47 field.
	Power_Manager_WUD_SEEN1_GPIO47_Msk = 0x8000  // Bit mask of GPIO47 field.
	Power_Manager_WUD_SEEN1_GPIO47     = 0x8000  // Bit GPIO47.
	Power_Manager_WUD_SEEN1_GPIO48_Pos = 0x10    // Position of GPIO48 field.
	Power_Manager_WUD_SEEN1_GPIO48_Msk = 0x10000 // Bit mask of GPIO48 field.
	Power_Manager_WUD_SEEN1_GPIO48     = 0x10000 // Bit GPIO48.

	// MARGIN_CTRL: SRAM Margin Adjustment
	Power_Manager_MARGIN_CTRL_EXTRA_MARGIN_Pos        = 0x0  // Position of EXTRA_MARGIN field.
	Power_Manager_MARGIN_CTRL_EXTRA_MARGIN_Msk        = 0x7  // Bit mask of EXTRA_MARGIN field.
	Power_Manager_MARGIN_CTRL_EXTRA_WRITE_MARGIN_Pos  = 0x3  // Position of EXTRA_WRITE_MARGIN field.
	Power_Manager_MARGIN_CTRL_EXTRA_WRITE_MARGIN_Msk  = 0x18 // Bit mask of EXTRA_WRITE_MARGIN field.
	Power_Manager_MARGIN_CTRL_WRITE_ASSIST_EN_Pos     = 0x5  // Position of WRITE_ASSIST_EN field.
	Power_Manager_MARGIN_CTRL_WRITE_ASSIST_EN_Msk     = 0x20 // Bit mask of WRITE_ASSIST_EN field.
	Power_Manager_MARGIN_CTRL_WRITE_ASSIST_EN         = 0x20 // Bit WRITE_ASSIST_EN.
	Power_Manager_MARGIN_CTRL_WRITE_ASSIST_MARGIN_Pos = 0x6  // Position of WRITE_ASSIST_MARGIN field.
	Power_Manager_MARGIN_CTRL_WRITE_ASSIST_MARGIN_Msk = 0xc0 // Bit mask of WRITE_ASSIST_MARGIN field.

	// BASE_PART_NUM: Base Part Number
	Power_Manager_BASE_PART_NUM_BASE_PART_NUMBER_Pos = 0x0    // Position of BASE_PART_NUMBER field.
	Power_Manager_BASE_PART_NUM_BASE_PART_NUMBER_Msk = 0xffff // Bit mask of BASE_PART_NUMBER field.

	// MASK_ID0: Mask ID Register 0
	Power_Manager_MASK_ID0_REVISION_ID_Pos = 0x0        // Position of REVISION_ID field.
	Power_Manager_MASK_ID0_REVISION_ID_Msk = 0xf        // Bit mask of REVISION_ID field.
	Power_Manager_MASK_ID0_MASK_ID_Pos     = 0x4        // Position of MASK_ID field.
	Power_Manager_MASK_ID0_MASK_ID_Msk     = 0xfffffff0 // Bit mask of MASK_ID field.

	// MASK_ID1: Mask ID Register 1
	Power_Manager_MASK_ID1_MASK_ID_Pos        = 0x0        // Position of MASK_ID field.
	Power_Manager_MASK_ID1_MASK_ID_Msk        = 0x7fffffff // Bit mask of MASK_ID field.
	Power_Manager_MASK_ID1_MASK_ID_ENABLE_Pos = 0x1f       // Position of MASK_ID_ENABLE field.
	Power_Manager_MASK_ID1_MASK_ID_ENABLE_Msk = 0x80000000 // Bit mask of MASK_ID_ENABLE field.
	Power_Manager_MASK_ID1_MASK_ID_ENABLE     = 0x80000000 // Bit MASK_ID_ENABLE.

	// PERIPHERAL_RESET: Peripheral Reset Control Register
	Power_Manager_PERIPHERAL_RESET_SSB_Pos         = 0x0        // Position of SSB field.
	Power_Manager_PERIPHERAL_RESET_SSB_Msk         = 0x1        // Bit mask of SSB field.
	Power_Manager_PERIPHERAL_RESET_SSB             = 0x1        // Bit SSB.
	Power_Manager_PERIPHERAL_RESET_SPIX_Pos        = 0x1        // Position of SPIX field.
	Power_Manager_PERIPHERAL_RESET_SPIX_Msk        = 0x2        // Bit mask of SPIX field.
	Power_Manager_PERIPHERAL_RESET_SPIX            = 0x2        // Bit SPIX.
	Power_Manager_PERIPHERAL_RESET_PMU_Pos         = 0x2        // Position of PMU field.
	Power_Manager_PERIPHERAL_RESET_PMU_Msk         = 0x4        // Bit mask of PMU field.
	Power_Manager_PERIPHERAL_RESET_PMU             = 0x4        // Bit PMU.
	Power_Manager_PERIPHERAL_RESET_USB_Pos         = 0x3        // Position of USB field.
	Power_Manager_PERIPHERAL_RESET_USB_Msk         = 0x8        // Bit mask of USB field.
	Power_Manager_PERIPHERAL_RESET_USB             = 0x8        // Bit USB.
	Power_Manager_PERIPHERAL_RESET_CRC_Pos         = 0x4        // Position of CRC field.
	Power_Manager_PERIPHERAL_RESET_CRC_Msk         = 0x10       // Bit mask of CRC field.
	Power_Manager_PERIPHERAL_RESET_CRC             = 0x10       // Bit CRC.
	Power_Manager_PERIPHERAL_RESET_TPU_Pos         = 0x5        // Position of TPU field.
	Power_Manager_PERIPHERAL_RESET_TPU_Msk         = 0x20       // Bit mask of TPU field.
	Power_Manager_PERIPHERAL_RESET_TPU             = 0x20       // Bit TPU.
	Power_Manager_PERIPHERAL_RESET_WATCHDOG0_Pos   = 0x6        // Position of WATCHDOG0 field.
	Power_Manager_PERIPHERAL_RESET_WATCHDOG0_Msk   = 0x40       // Bit mask of WATCHDOG0 field.
	Power_Manager_PERIPHERAL_RESET_WATCHDOG0       = 0x40       // Bit WATCHDOG0.
	Power_Manager_PERIPHERAL_RESET_GPIO_Pos        = 0x7        // Position of GPIO field.
	Power_Manager_PERIPHERAL_RESET_GPIO_Msk        = 0x80       // Bit mask of GPIO field.
	Power_Manager_PERIPHERAL_RESET_GPIO            = 0x80       // Bit GPIO.
	Power_Manager_PERIPHERAL_RESET_TIMER0_Pos      = 0x8        // Position of TIMER0 field.
	Power_Manager_PERIPHERAL_RESET_TIMER0_Msk      = 0x100      // Bit mask of TIMER0 field.
	Power_Manager_PERIPHERAL_RESET_TIMER0          = 0x100      // Bit TIMER0.
	Power_Manager_PERIPHERAL_RESET_TIMER1_Pos      = 0x9        // Position of TIMER1 field.
	Power_Manager_PERIPHERAL_RESET_TIMER1_Msk      = 0x200      // Bit mask of TIMER1 field.
	Power_Manager_PERIPHERAL_RESET_TIMER1          = 0x200      // Bit TIMER1.
	Power_Manager_PERIPHERAL_RESET_TIMER2_Pos      = 0xa        // Position of TIMER2 field.
	Power_Manager_PERIPHERAL_RESET_TIMER2_Msk      = 0x400      // Bit mask of TIMER2 field.
	Power_Manager_PERIPHERAL_RESET_TIMER2          = 0x400      // Bit TIMER2.
	Power_Manager_PERIPHERAL_RESET_TIMER3_Pos      = 0xb        // Position of TIMER3 field.
	Power_Manager_PERIPHERAL_RESET_TIMER3_Msk      = 0x800      // Bit mask of TIMER3 field.
	Power_Manager_PERIPHERAL_RESET_TIMER3          = 0x800      // Bit TIMER3.
	Power_Manager_PERIPHERAL_RESET_TIMER4_Pos      = 0xc        // Position of TIMER4 field.
	Power_Manager_PERIPHERAL_RESET_TIMER4_Msk      = 0x1000     // Bit mask of TIMER4 field.
	Power_Manager_PERIPHERAL_RESET_TIMER4          = 0x1000     // Bit TIMER4.
	Power_Manager_PERIPHERAL_RESET_TIMER5_Pos      = 0xd        // Position of TIMER5 field.
	Power_Manager_PERIPHERAL_RESET_TIMER5_Msk      = 0x2000     // Bit mask of TIMER5 field.
	Power_Manager_PERIPHERAL_RESET_TIMER5          = 0x2000     // Bit TIMER5.
	Power_Manager_PERIPHERAL_RESET_PULSE_TRAIN_Pos = 0xe        // Position of PULSE_TRAIN field.
	Power_Manager_PERIPHERAL_RESET_PULSE_TRAIN_Msk = 0x4000     // Bit mask of PULSE_TRAIN field.
	Power_Manager_PERIPHERAL_RESET_PULSE_TRAIN     = 0x4000     // Bit PULSE_TRAIN.
	Power_Manager_PERIPHERAL_RESET_UART0_Pos       = 0xf        // Position of UART0 field.
	Power_Manager_PERIPHERAL_RESET_UART0_Msk       = 0x8000     // Bit mask of UART0 field.
	Power_Manager_PERIPHERAL_RESET_UART0           = 0x8000     // Bit UART0.
	Power_Manager_PERIPHERAL_RESET_UART1_Pos       = 0x10       // Position of UART1 field.
	Power_Manager_PERIPHERAL_RESET_UART1_Msk       = 0x10000    // Bit mask of UART1 field.
	Power_Manager_PERIPHERAL_RESET_UART1           = 0x10000    // Bit UART1.
	Power_Manager_PERIPHERAL_RESET_UART2_Pos       = 0x11       // Position of UART2 field.
	Power_Manager_PERIPHERAL_RESET_UART2_Msk       = 0x20000    // Bit mask of UART2 field.
	Power_Manager_PERIPHERAL_RESET_UART2           = 0x20000    // Bit UART2.
	Power_Manager_PERIPHERAL_RESET_UART3_Pos       = 0x12       // Position of UART3 field.
	Power_Manager_PERIPHERAL_RESET_UART3_Msk       = 0x40000    // Bit mask of UART3 field.
	Power_Manager_PERIPHERAL_RESET_UART3           = 0x40000    // Bit UART3.
	Power_Manager_PERIPHERAL_RESET_I2CM0_Pos       = 0x13       // Position of I2CM0 field.
	Power_Manager_PERIPHERAL_RESET_I2CM0_Msk       = 0x80000    // Bit mask of I2CM0 field.
	Power_Manager_PERIPHERAL_RESET_I2CM0           = 0x80000    // Bit I2CM0.
	Power_Manager_PERIPHERAL_RESET_I2CM1_Pos       = 0x14       // Position of I2CM1 field.
	Power_Manager_PERIPHERAL_RESET_I2CM1_Msk       = 0x100000   // Bit mask of I2CM1 field.
	Power_Manager_PERIPHERAL_RESET_I2CM1           = 0x100000   // Bit I2CM1.
	Power_Manager_PERIPHERAL_RESET_I2CM2_Pos       = 0x15       // Position of I2CM2 field.
	Power_Manager_PERIPHERAL_RESET_I2CM2_Msk       = 0x200000   // Bit mask of I2CM2 field.
	Power_Manager_PERIPHERAL_RESET_I2CM2           = 0x200000   // Bit I2CM2.
	Power_Manager_PERIPHERAL_RESET_I2CS_Pos        = 0x16       // Position of I2CS field.
	Power_Manager_PERIPHERAL_RESET_I2CS_Msk        = 0x400000   // Bit mask of I2CS field.
	Power_Manager_PERIPHERAL_RESET_I2CS            = 0x400000   // Bit I2CS.
	Power_Manager_PERIPHERAL_RESET_SPIM0_Pos       = 0x17       // Position of SPIM0 field.
	Power_Manager_PERIPHERAL_RESET_SPIM0_Msk       = 0x800000   // Bit mask of SPIM0 field.
	Power_Manager_PERIPHERAL_RESET_SPIM0           = 0x800000   // Bit SPIM0.
	Power_Manager_PERIPHERAL_RESET_SPIM1_Pos       = 0x18       // Position of SPIM1 field.
	Power_Manager_PERIPHERAL_RESET_SPIM1_Msk       = 0x1000000  // Bit mask of SPIM1 field.
	Power_Manager_PERIPHERAL_RESET_SPIM1           = 0x1000000  // Bit SPIM1.
	Power_Manager_PERIPHERAL_RESET_SPIM2_Pos       = 0x19       // Position of SPIM2 field.
	Power_Manager_PERIPHERAL_RESET_SPIM2_Msk       = 0x2000000  // Bit mask of SPIM2 field.
	Power_Manager_PERIPHERAL_RESET_SPIM2           = 0x2000000  // Bit SPIM2.
	Power_Manager_PERIPHERAL_RESET_SPIB_Pos        = 0x1a       // Position of SPIB field.
	Power_Manager_PERIPHERAL_RESET_SPIB_Msk        = 0x4000000  // Bit mask of SPIB field.
	Power_Manager_PERIPHERAL_RESET_SPIB            = 0x4000000  // Bit SPIB.
	Power_Manager_PERIPHERAL_RESET_OWM_Pos         = 0x1b       // Position of OWM field.
	Power_Manager_PERIPHERAL_RESET_OWM_Msk         = 0x8000000  // Bit mask of OWM field.
	Power_Manager_PERIPHERAL_RESET_OWM             = 0x8000000  // Bit OWM.
	Power_Manager_PERIPHERAL_RESET_ADC_Pos         = 0x1c       // Position of ADC field.
	Power_Manager_PERIPHERAL_RESET_ADC_Msk         = 0x10000000 // Bit mask of ADC field.
	Power_Manager_PERIPHERAL_RESET_ADC             = 0x10000000 // Bit ADC.
)

// Bitfields for RTCTMR: Real Time Clock
const (
	// CTRL: RTC Timer Control
	Real_Time_Clock_CTRL_ENABLE_Pos                 = 0x0       // Position of ENABLE field.
	Real_Time_Clock_CTRL_ENABLE_Msk                 = 0x1       // Bit mask of ENABLE field.
	Real_Time_Clock_CTRL_ENABLE                     = 0x1       // Bit ENABLE.
	Real_Time_Clock_CTRL_CLEAR_Pos                  = 0x1       // Position of CLEAR field.
	Real_Time_Clock_CTRL_CLEAR_Msk                  = 0x2       // Bit mask of CLEAR field.
	Real_Time_Clock_CTRL_CLEAR                      = 0x2       // Bit CLEAR.
	Real_Time_Clock_CTRL_PENDING_Pos                = 0x2       // Position of PENDING field.
	Real_Time_Clock_CTRL_PENDING_Msk                = 0x4       // Bit mask of PENDING field.
	Real_Time_Clock_CTRL_PENDING                    = 0x4       // Bit PENDING.
	Real_Time_Clock_CTRL_USE_ASYNC_FLAGS_Pos        = 0x3       // Position of USE_ASYNC_FLAGS field.
	Real_Time_Clock_CTRL_USE_ASYNC_FLAGS_Msk        = 0x8       // Bit mask of USE_ASYNC_FLAGS field.
	Real_Time_Clock_CTRL_USE_ASYNC_FLAGS            = 0x8       // Bit USE_ASYNC_FLAGS.
	Real_Time_Clock_CTRL_AGGRESSIVE_RST_Pos         = 0x4       // Position of AGGRESSIVE_RST field.
	Real_Time_Clock_CTRL_AGGRESSIVE_RST_Msk         = 0x10      // Bit mask of AGGRESSIVE_RST field.
	Real_Time_Clock_CTRL_AGGRESSIVE_RST             = 0x10      // Bit AGGRESSIVE_RST.
	Real_Time_Clock_CTRL_EN_ACTIVE_Pos              = 0x10      // Position of EN_ACTIVE field.
	Real_Time_Clock_CTRL_EN_ACTIVE_Msk              = 0x10000   // Bit mask of EN_ACTIVE field.
	Real_Time_Clock_CTRL_EN_ACTIVE                  = 0x10000   // Bit EN_ACTIVE.
	Real_Time_Clock_CTRL_OSC_GOTO_LOW_ACTIVE_Pos    = 0x11      // Position of OSC_GOTO_LOW_ACTIVE field.
	Real_Time_Clock_CTRL_OSC_GOTO_LOW_ACTIVE_Msk    = 0x20000   // Bit mask of OSC_GOTO_LOW_ACTIVE field.
	Real_Time_Clock_CTRL_OSC_GOTO_LOW_ACTIVE        = 0x20000   // Bit OSC_GOTO_LOW_ACTIVE.
	Real_Time_Clock_CTRL_OSC_FRCE_SM_EN_ACTIVE_Pos  = 0x12      // Position of OSC_FRCE_SM_EN_ACTIVE field.
	Real_Time_Clock_CTRL_OSC_FRCE_SM_EN_ACTIVE_Msk  = 0x40000   // Bit mask of OSC_FRCE_SM_EN_ACTIVE field.
	Real_Time_Clock_CTRL_OSC_FRCE_SM_EN_ACTIVE      = 0x40000   // Bit OSC_FRCE_SM_EN_ACTIVE.
	Real_Time_Clock_CTRL_OSC_FRCE_ST_ACTIVE_Pos     = 0x13      // Position of OSC_FRCE_ST_ACTIVE field.
	Real_Time_Clock_CTRL_OSC_FRCE_ST_ACTIVE_Msk     = 0x80000   // Bit mask of OSC_FRCE_ST_ACTIVE field.
	Real_Time_Clock_CTRL_OSC_FRCE_ST_ACTIVE         = 0x80000   // Bit OSC_FRCE_ST_ACTIVE.
	Real_Time_Clock_CTRL_SET_ACTIVE_Pos             = 0x14      // Position of SET_ACTIVE field.
	Real_Time_Clock_CTRL_SET_ACTIVE_Msk             = 0x100000  // Bit mask of SET_ACTIVE field.
	Real_Time_Clock_CTRL_SET_ACTIVE                 = 0x100000  // Bit SET_ACTIVE.
	Real_Time_Clock_CTRL_CLR_ACTIVE_Pos             = 0x15      // Position of CLR_ACTIVE field.
	Real_Time_Clock_CTRL_CLR_ACTIVE_Msk             = 0x200000  // Bit mask of CLR_ACTIVE field.
	Real_Time_Clock_CTRL_CLR_ACTIVE                 = 0x200000  // Bit CLR_ACTIVE.
	Real_Time_Clock_CTRL_ROLLOVER_CLR_ACTIVE_Pos    = 0x16      // Position of ROLLOVER_CLR_ACTIVE field.
	Real_Time_Clock_CTRL_ROLLOVER_CLR_ACTIVE_Msk    = 0x400000  // Bit mask of ROLLOVER_CLR_ACTIVE field.
	Real_Time_Clock_CTRL_ROLLOVER_CLR_ACTIVE        = 0x400000  // Bit ROLLOVER_CLR_ACTIVE.
	Real_Time_Clock_CTRL_PRESCALE_CMPR0_ACTIVE_Pos  = 0x17      // Position of PRESCALE_CMPR0_ACTIVE field.
	Real_Time_Clock_CTRL_PRESCALE_CMPR0_ACTIVE_Msk  = 0x800000  // Bit mask of PRESCALE_CMPR0_ACTIVE field.
	Real_Time_Clock_CTRL_PRESCALE_CMPR0_ACTIVE      = 0x800000  // Bit PRESCALE_CMPR0_ACTIVE.
	Real_Time_Clock_CTRL_PRESCALE_UPDATE_ACTIVE_Pos = 0x18      // Position of PRESCALE_UPDATE_ACTIVE field.
	Real_Time_Clock_CTRL_PRESCALE_UPDATE_ACTIVE_Msk = 0x1000000 // Bit mask of PRESCALE_UPDATE_ACTIVE field.
	Real_Time_Clock_CTRL_PRESCALE_UPDATE_ACTIVE     = 0x1000000 // Bit PRESCALE_UPDATE_ACTIVE.
	Real_Time_Clock_CTRL_CMPR1_CLR_ACTIVE_Pos       = 0x19      // Position of CMPR1_CLR_ACTIVE field.
	Real_Time_Clock_CTRL_CMPR1_CLR_ACTIVE_Msk       = 0x2000000 // Bit mask of CMPR1_CLR_ACTIVE field.
	Real_Time_Clock_CTRL_CMPR1_CLR_ACTIVE           = 0x2000000 // Bit CMPR1_CLR_ACTIVE.
	Real_Time_Clock_CTRL_CMPR0_CLR_ACTIVE_Pos       = 0x1a      // Position of CMPR0_CLR_ACTIVE field.
	Real_Time_Clock_CTRL_CMPR0_CLR_ACTIVE_Msk       = 0x4000000 // Bit mask of CMPR0_CLR_ACTIVE field.
	Real_Time_Clock_CTRL_CMPR0_CLR_ACTIVE           = 0x4000000 // Bit CMPR0_CLR_ACTIVE.

	// FLAGS: CPU Interrupt and RTC Domain Flags
	Real_Time_Clock_FLAGS_COMP0_Pos           = 0x0        // Position of COMP0 field.
	Real_Time_Clock_FLAGS_COMP0_Msk           = 0x1        // Bit mask of COMP0 field.
	Real_Time_Clock_FLAGS_COMP0               = 0x1        // Bit COMP0.
	Real_Time_Clock_FLAGS_COMP1_Pos           = 0x1        // Position of COMP1 field.
	Real_Time_Clock_FLAGS_COMP1_Msk           = 0x2        // Bit mask of COMP1 field.
	Real_Time_Clock_FLAGS_COMP1               = 0x2        // Bit COMP1.
	Real_Time_Clock_FLAGS_PRESCALE_COMP_Pos   = 0x2        // Position of PRESCALE_COMP field.
	Real_Time_Clock_FLAGS_PRESCALE_COMP_Msk   = 0x4        // Bit mask of PRESCALE_COMP field.
	Real_Time_Clock_FLAGS_PRESCALE_COMP       = 0x4        // Bit PRESCALE_COMP.
	Real_Time_Clock_FLAGS_OVERFLOW_Pos        = 0x3        // Position of OVERFLOW field.
	Real_Time_Clock_FLAGS_OVERFLOW_Msk        = 0x8        // Bit mask of OVERFLOW field.
	Real_Time_Clock_FLAGS_OVERFLOW            = 0x8        // Bit OVERFLOW.
	Real_Time_Clock_FLAGS_TRIM_Pos            = 0x4        // Position of TRIM field.
	Real_Time_Clock_FLAGS_TRIM_Msk            = 0x10       // Bit mask of TRIM field.
	Real_Time_Clock_FLAGS_TRIM                = 0x10       // Bit TRIM.
	Real_Time_Clock_FLAGS_COMP0_FLAG_A_Pos    = 0x8        // Position of COMP0_FLAG_A field.
	Real_Time_Clock_FLAGS_COMP0_FLAG_A_Msk    = 0x100      // Bit mask of COMP0_FLAG_A field.
	Real_Time_Clock_FLAGS_COMP0_FLAG_A        = 0x100      // Bit COMP0_FLAG_A.
	Real_Time_Clock_FLAGS_COMP1_FLAG_A_Pos    = 0x9        // Position of COMP1_FLAG_A field.
	Real_Time_Clock_FLAGS_COMP1_FLAG_A_Msk    = 0x200      // Bit mask of COMP1_FLAG_A field.
	Real_Time_Clock_FLAGS_COMP1_FLAG_A        = 0x200      // Bit COMP1_FLAG_A.
	Real_Time_Clock_FLAGS_PRESCL_FLAG_A_Pos   = 0xa        // Position of PRESCL_FLAG_A field.
	Real_Time_Clock_FLAGS_PRESCL_FLAG_A_Msk   = 0x400      // Bit mask of PRESCL_FLAG_A field.
	Real_Time_Clock_FLAGS_PRESCL_FLAG_A       = 0x400      // Bit PRESCL_FLAG_A.
	Real_Time_Clock_FLAGS_OVERFLOW_FLAG_A_Pos = 0xb        // Position of OVERFLOW_FLAG_A field.
	Real_Time_Clock_FLAGS_OVERFLOW_FLAG_A_Msk = 0x800      // Bit mask of OVERFLOW_FLAG_A field.
	Real_Time_Clock_FLAGS_OVERFLOW_FLAG_A     = 0x800      // Bit OVERFLOW_FLAG_A.
	Real_Time_Clock_FLAGS_TRIM_FLAG_A_Pos     = 0xc        // Position of TRIM_FLAG_A field.
	Real_Time_Clock_FLAGS_TRIM_FLAG_A_Msk     = 0x1000     // Bit mask of TRIM_FLAG_A field.
	Real_Time_Clock_FLAGS_TRIM_FLAG_A         = 0x1000     // Bit TRIM_FLAG_A.
	Real_Time_Clock_FLAGS_ASYNC_CLR_FLAGS_Pos = 0x1f       // Position of ASYNC_CLR_FLAGS field.
	Real_Time_Clock_FLAGS_ASYNC_CLR_FLAGS_Msk = 0x80000000 // Bit mask of ASYNC_CLR_FLAGS field.
	Real_Time_Clock_FLAGS_ASYNC_CLR_FLAGS     = 0x80000000 // Bit ASYNC_CLR_FLAGS.

	// INTEN: Interrupt Enable Controls
	Real_Time_Clock_INTEN_COMP0_Pos         = 0x0  // Position of COMP0 field.
	Real_Time_Clock_INTEN_COMP0_Msk         = 0x1  // Bit mask of COMP0 field.
	Real_Time_Clock_INTEN_COMP0             = 0x1  // Bit COMP0.
	Real_Time_Clock_INTEN_COMP1_Pos         = 0x1  // Position of COMP1 field.
	Real_Time_Clock_INTEN_COMP1_Msk         = 0x2  // Bit mask of COMP1 field.
	Real_Time_Clock_INTEN_COMP1             = 0x2  // Bit COMP1.
	Real_Time_Clock_INTEN_PRESCALE_COMP_Pos = 0x2  // Position of PRESCALE_COMP field.
	Real_Time_Clock_INTEN_PRESCALE_COMP_Msk = 0x4  // Bit mask of PRESCALE_COMP field.
	Real_Time_Clock_INTEN_PRESCALE_COMP     = 0x4  // Bit PRESCALE_COMP.
	Real_Time_Clock_INTEN_OVERFLOW_Pos      = 0x3  // Position of OVERFLOW field.
	Real_Time_Clock_INTEN_OVERFLOW_Msk      = 0x8  // Bit mask of OVERFLOW field.
	Real_Time_Clock_INTEN_OVERFLOW          = 0x8  // Bit OVERFLOW.
	Real_Time_Clock_INTEN_TRIM_Pos          = 0x4  // Position of TRIM field.
	Real_Time_Clock_INTEN_TRIM_Msk          = 0x10 // Bit mask of TRIM field.
	Real_Time_Clock_INTEN_TRIM              = 0x10 // Bit TRIM.

	// PRESCALE: RTC Timer Prescale Setting
	Real_Time_Clock_PRESCALE_WIDTH_SELECTION_Pos = 0x0 // Position of WIDTH_SELECTION field.
	Real_Time_Clock_PRESCALE_WIDTH_SELECTION_Msk = 0xf // Bit mask of WIDTH_SELECTION field.

	// PRESCALE_MASK: RTC Timer Prescale Compare Mask
	Real_Time_Clock_PRESCALE_MASK_COMP_MASK_Pos = 0x0 // Position of COMP_MASK field.
	Real_Time_Clock_PRESCALE_MASK_COMP_MASK_Msk = 0xf // Bit mask of COMP_MASK field.

	// TRIM_CTRL: RTC Timer Trim Controls
	Real_Time_Clock_TRIM_CTRL_TRIM_ENABLE_R_Pos     = 0x0 // Position of TRIM_ENABLE_R field.
	Real_Time_Clock_TRIM_CTRL_TRIM_ENABLE_R_Msk     = 0x1 // Bit mask of TRIM_ENABLE_R field.
	Real_Time_Clock_TRIM_CTRL_TRIM_ENABLE_R         = 0x1 // Bit TRIM_ENABLE_R.
	Real_Time_Clock_TRIM_CTRL_TRIM_FASTER_OVR_R_Pos = 0x1 // Position of TRIM_FASTER_OVR_R field.
	Real_Time_Clock_TRIM_CTRL_TRIM_FASTER_OVR_R_Msk = 0x2 // Bit mask of TRIM_FASTER_OVR_R field.
	Real_Time_Clock_TRIM_CTRL_TRIM_FASTER_OVR_R     = 0x2 // Bit TRIM_FASTER_OVR_R.
	Real_Time_Clock_TRIM_CTRL_TRIM_SLOWER_R_Pos     = 0x2 // Position of TRIM_SLOWER_R field.
	Real_Time_Clock_TRIM_CTRL_TRIM_SLOWER_R_Msk     = 0x4 // Bit mask of TRIM_SLOWER_R field.
	Real_Time_Clock_TRIM_CTRL_TRIM_SLOWER_R         = 0x4 // Bit TRIM_SLOWER_R.

	// TRIM_VALUE: RTC Timer Trim Adjustment Interval
	Real_Time_Clock_TRIM_VALUE_TRIM_VALUE_Pos   = 0x0     // Position of TRIM_VALUE field.
	Real_Time_Clock_TRIM_VALUE_TRIM_VALUE_Msk   = 0x3ffff // Bit mask of TRIM_VALUE field.
	Real_Time_Clock_TRIM_VALUE_TRIM_CONTROL_Pos = 0x12    // Position of TRIM_CONTROL field.
	Real_Time_Clock_TRIM_VALUE_TRIM_CONTROL_Msk = 0x40000 // Bit mask of TRIM_CONTROL field.
	Real_Time_Clock_TRIM_VALUE_TRIM_CONTROL     = 0x40000 // Bit TRIM_CONTROL.
)

// Bitfields for IOMAN: System I/O Manager
const (
	// WUD_REQ0: Wakeup Detect Mode Request Register 0 (P0/P1/P2/P3)
	IO_WUD_REQ0_WUD_REQ_P0_Pos = 0x0        // Position of WUD_REQ_P0 field.
	IO_WUD_REQ0_WUD_REQ_P0_Msk = 0xff       // Bit mask of WUD_REQ_P0 field.
	IO_WUD_REQ0_WUD_REQ_P1_Pos = 0x8        // Position of WUD_REQ_P1 field.
	IO_WUD_REQ0_WUD_REQ_P1_Msk = 0xff00     // Bit mask of WUD_REQ_P1 field.
	IO_WUD_REQ0_WUD_REQ_P2_Pos = 0x10       // Position of WUD_REQ_P2 field.
	IO_WUD_REQ0_WUD_REQ_P2_Msk = 0xff0000   // Bit mask of WUD_REQ_P2 field.
	IO_WUD_REQ0_WUD_REQ_P3_Pos = 0x18       // Position of WUD_REQ_P3 field.
	IO_WUD_REQ0_WUD_REQ_P3_Msk = 0xff000000 // Bit mask of WUD_REQ_P3 field.

	// WUD_REQ1: Wakeup Detect Mode Request Register 1 (P4/P5/P6)
	IO_WUD_REQ1_WUD_REQ_P4_Pos = 0x0     // Position of WUD_REQ_P4 field.
	IO_WUD_REQ1_WUD_REQ_P4_Msk = 0xff    // Bit mask of WUD_REQ_P4 field.
	IO_WUD_REQ1_WUD_REQ_P5_Pos = 0x8     // Position of WUD_REQ_P5 field.
	IO_WUD_REQ1_WUD_REQ_P5_Msk = 0xff00  // Bit mask of WUD_REQ_P5 field.
	IO_WUD_REQ1_WUD_REQ_P6_Pos = 0x10    // Position of WUD_REQ_P6 field.
	IO_WUD_REQ1_WUD_REQ_P6_Msk = 0x10000 // Bit mask of WUD_REQ_P6 field.
	IO_WUD_REQ1_WUD_REQ_P6     = 0x10000 // Bit WUD_REQ_P6.

	// WUD_ACK0: Wakeup Detect Mode Acknowledge Register 0 (P0/P1/P2/P3)
	IO_WUD_ACK0_WUD_ACK_P0_Pos = 0x0        // Position of WUD_ACK_P0 field.
	IO_WUD_ACK0_WUD_ACK_P0_Msk = 0xff       // Bit mask of WUD_ACK_P0 field.
	IO_WUD_ACK0_WUD_ACK_P1_Pos = 0x8        // Position of WUD_ACK_P1 field.
	IO_WUD_ACK0_WUD_ACK_P1_Msk = 0xff00     // Bit mask of WUD_ACK_P1 field.
	IO_WUD_ACK0_WUD_ACK_P2_Pos = 0x10       // Position of WUD_ACK_P2 field.
	IO_WUD_ACK0_WUD_ACK_P2_Msk = 0xff0000   // Bit mask of WUD_ACK_P2 field.
	IO_WUD_ACK0_WUD_ACK_P3_Pos = 0x18       // Position of WUD_ACK_P3 field.
	IO_WUD_ACK0_WUD_ACK_P3_Msk = 0xff000000 // Bit mask of WUD_ACK_P3 field.

	// WUD_ACK1: Wakeup Detect Mode Acknowledge Register 1 (P4/P5/P6)
	IO_WUD_ACK1_WUD_ACK_P4_Pos = 0x0     // Position of WUD_ACK_P4 field.
	IO_WUD_ACK1_WUD_ACK_P4_Msk = 0xff    // Bit mask of WUD_ACK_P4 field.
	IO_WUD_ACK1_WUD_ACK_P5_Pos = 0x8     // Position of WUD_ACK_P5 field.
	IO_WUD_ACK1_WUD_ACK_P5_Msk = 0xff00  // Bit mask of WUD_ACK_P5 field.
	IO_WUD_ACK1_WUD_ACK_P6_Pos = 0x10    // Position of WUD_ACK_P6 field.
	IO_WUD_ACK1_WUD_ACK_P6_Msk = 0x10000 // Bit mask of WUD_ACK_P6 field.
	IO_WUD_ACK1_WUD_ACK_P6     = 0x10000 // Bit WUD_ACK_P6.

	// ALI_REQ0: Analog Input Request Register 0 (P0/P1/P2/P3)
	IO_ALI_REQ0_ALI_REQ_P0_Pos = 0x0        // Position of ALI_REQ_P0 field.
	IO_ALI_REQ0_ALI_REQ_P0_Msk = 0xff       // Bit mask of ALI_REQ_P0 field.
	IO_ALI_REQ0_ALI_REQ_P1_Pos = 0x8        // Position of ALI_REQ_P1 field.
	IO_ALI_REQ0_ALI_REQ_P1_Msk = 0xff00     // Bit mask of ALI_REQ_P1 field.
	IO_ALI_REQ0_ALI_REQ_P2_Pos = 0x10       // Position of ALI_REQ_P2 field.
	IO_ALI_REQ0_ALI_REQ_P2_Msk = 0xff0000   // Bit mask of ALI_REQ_P2 field.
	IO_ALI_REQ0_ALI_REQ_P3_Pos = 0x18       // Position of ALI_REQ_P3 field.
	IO_ALI_REQ0_ALI_REQ_P3_Msk = 0xff000000 // Bit mask of ALI_REQ_P3 field.

	// ALI_REQ1: Analog Input Request Register 1 (P4/P5/P6)
	IO_ALI_REQ1_ALI_REQ_P4_Pos = 0x0     // Position of ALI_REQ_P4 field.
	IO_ALI_REQ1_ALI_REQ_P4_Msk = 0xff    // Bit mask of ALI_REQ_P4 field.
	IO_ALI_REQ1_ALI_REQ_P5_Pos = 0x8     // Position of ALI_REQ_P5 field.
	IO_ALI_REQ1_ALI_REQ_P5_Msk = 0xff00  // Bit mask of ALI_REQ_P5 field.
	IO_ALI_REQ1_ALI_REQ_P6_Pos = 0x10    // Position of ALI_REQ_P6 field.
	IO_ALI_REQ1_ALI_REQ_P6_Msk = 0x10000 // Bit mask of ALI_REQ_P6 field.
	IO_ALI_REQ1_ALI_REQ_P6     = 0x10000 // Bit ALI_REQ_P6.

	// ALI_ACK0: Analog Input Acknowledge Register 0 (P0/P1/P2/P3)
	IO_ALI_ACK0_ALI_ACK_P0_Pos = 0x0        // Position of ALI_ACK_P0 field.
	IO_ALI_ACK0_ALI_ACK_P0_Msk = 0xff       // Bit mask of ALI_ACK_P0 field.
	IO_ALI_ACK0_ALI_ACK_P1_Pos = 0x8        // Position of ALI_ACK_P1 field.
	IO_ALI_ACK0_ALI_ACK_P1_Msk = 0xff00     // Bit mask of ALI_ACK_P1 field.
	IO_ALI_ACK0_ALI_ACK_P2_Pos = 0x10       // Position of ALI_ACK_P2 field.
	IO_ALI_ACK0_ALI_ACK_P2_Msk = 0xff0000   // Bit mask of ALI_ACK_P2 field.
	IO_ALI_ACK0_ALI_ACK_P3_Pos = 0x18       // Position of ALI_ACK_P3 field.
	IO_ALI_ACK0_ALI_ACK_P3_Msk = 0xff000000 // Bit mask of ALI_ACK_P3 field.

	// ALI_ACK1: Analog Input Acknowledge Register 1 (P4/P5/P6)
	IO_ALI_ACK1_ALI_ACK_P4_Pos = 0x0     // Position of ALI_ACK_P4 field.
	IO_ALI_ACK1_ALI_ACK_P4_Msk = 0xff    // Bit mask of ALI_ACK_P4 field.
	IO_ALI_ACK1_ALI_ACK_P5_Pos = 0x8     // Position of ALI_ACK_P5 field.
	IO_ALI_ACK1_ALI_ACK_P5_Msk = 0xff00  // Bit mask of ALI_ACK_P5 field.
	IO_ALI_ACK1_ALI_ACK_P6_Pos = 0x10    // Position of ALI_ACK_P6 field.
	IO_ALI_ACK1_ALI_ACK_P6_Msk = 0x10000 // Bit mask of ALI_ACK_P6 field.
	IO_ALI_ACK1_ALI_ACK_P6     = 0x10000 // Bit ALI_ACK_P6.

	// SPIX_REQ: SPIX I/O Mode Request
	IO_SPIX_REQ_CORE_IO_REQ_Pos = 0x4     // Position of CORE_IO_REQ field.
	IO_SPIX_REQ_CORE_IO_REQ_Msk = 0x10    // Bit mask of CORE_IO_REQ field.
	IO_SPIX_REQ_CORE_IO_REQ     = 0x10    // Bit CORE_IO_REQ.
	IO_SPIX_REQ_SS0_IO_REQ_Pos  = 0x8     // Position of SS0_IO_REQ field.
	IO_SPIX_REQ_SS0_IO_REQ_Msk  = 0x100   // Bit mask of SS0_IO_REQ field.
	IO_SPIX_REQ_SS0_IO_REQ      = 0x100   // Bit SS0_IO_REQ.
	IO_SPIX_REQ_SS1_IO_REQ_Pos  = 0x9     // Position of SS1_IO_REQ field.
	IO_SPIX_REQ_SS1_IO_REQ_Msk  = 0x200   // Bit mask of SS1_IO_REQ field.
	IO_SPIX_REQ_SS1_IO_REQ      = 0x200   // Bit SS1_IO_REQ.
	IO_SPIX_REQ_SS2_IO_REQ_Pos  = 0xa     // Position of SS2_IO_REQ field.
	IO_SPIX_REQ_SS2_IO_REQ_Msk  = 0x400   // Bit mask of SS2_IO_REQ field.
	IO_SPIX_REQ_SS2_IO_REQ      = 0x400   // Bit SS2_IO_REQ.
	IO_SPIX_REQ_QUAD_IO_REQ_Pos = 0xc     // Position of QUAD_IO_REQ field.
	IO_SPIX_REQ_QUAD_IO_REQ_Msk = 0x1000  // Bit mask of QUAD_IO_REQ field.
	IO_SPIX_REQ_QUAD_IO_REQ     = 0x1000  // Bit QUAD_IO_REQ.
	IO_SPIX_REQ_FAST_MODE_Pos   = 0x10    // Position of FAST_MODE field.
	IO_SPIX_REQ_FAST_MODE_Msk   = 0x10000 // Bit mask of FAST_MODE field.
	IO_SPIX_REQ_FAST_MODE       = 0x10000 // Bit FAST_MODE.

	// SPIX_ACK: SPIX I/O Mode Acknowledge
	IO_SPIX_ACK_CORE_IO_ACK_Pos = 0x4     // Position of CORE_IO_ACK field.
	IO_SPIX_ACK_CORE_IO_ACK_Msk = 0x10    // Bit mask of CORE_IO_ACK field.
	IO_SPIX_ACK_CORE_IO_ACK     = 0x10    // Bit CORE_IO_ACK.
	IO_SPIX_ACK_SS0_IO_ACK_Pos  = 0x8     // Position of SS0_IO_ACK field.
	IO_SPIX_ACK_SS0_IO_ACK_Msk  = 0x100   // Bit mask of SS0_IO_ACK field.
	IO_SPIX_ACK_SS0_IO_ACK      = 0x100   // Bit SS0_IO_ACK.
	IO_SPIX_ACK_SS1_IO_ACK_Pos  = 0x9     // Position of SS1_IO_ACK field.
	IO_SPIX_ACK_SS1_IO_ACK_Msk  = 0x200   // Bit mask of SS1_IO_ACK field.
	IO_SPIX_ACK_SS1_IO_ACK      = 0x200   // Bit SS1_IO_ACK.
	IO_SPIX_ACK_SS2_IO_ACK_Pos  = 0xa     // Position of SS2_IO_ACK field.
	IO_SPIX_ACK_SS2_IO_ACK_Msk  = 0x400   // Bit mask of SS2_IO_ACK field.
	IO_SPIX_ACK_SS2_IO_ACK      = 0x400   // Bit SS2_IO_ACK.
	IO_SPIX_ACK_QUAD_IO_ACK_Pos = 0xc     // Position of QUAD_IO_ACK field.
	IO_SPIX_ACK_QUAD_IO_ACK_Msk = 0x1000  // Bit mask of QUAD_IO_ACK field.
	IO_SPIX_ACK_QUAD_IO_ACK     = 0x1000  // Bit QUAD_IO_ACK.
	IO_SPIX_ACK_FAST_MODE_Pos   = 0x10    // Position of FAST_MODE field.
	IO_SPIX_ACK_FAST_MODE_Msk   = 0x10000 // Bit mask of FAST_MODE field.
	IO_SPIX_ACK_FAST_MODE       = 0x10000 // Bit FAST_MODE.

	// UART0_REQ: UART0 I/O Mode Request
	IO_UART0_REQ_IO_MAP_Pos     = 0x0  // Position of IO_MAP field.
	IO_UART0_REQ_IO_MAP_Msk     = 0x1  // Bit mask of IO_MAP field.
	IO_UART0_REQ_IO_MAP         = 0x1  // Bit IO_MAP.
	IO_UART0_REQ_CTS_MAP_Pos    = 0x1  // Position of CTS_MAP field.
	IO_UART0_REQ_CTS_MAP_Msk    = 0x2  // Bit mask of CTS_MAP field.
	IO_UART0_REQ_CTS_MAP        = 0x2  // Bit CTS_MAP.
	IO_UART0_REQ_RTS_MAP_Pos    = 0x2  // Position of RTS_MAP field.
	IO_UART0_REQ_RTS_MAP_Msk    = 0x4  // Bit mask of RTS_MAP field.
	IO_UART0_REQ_RTS_MAP        = 0x4  // Bit RTS_MAP.
	IO_UART0_REQ_IO_REQ_Pos     = 0x4  // Position of IO_REQ field.
	IO_UART0_REQ_IO_REQ_Msk     = 0x10 // Bit mask of IO_REQ field.
	IO_UART0_REQ_IO_REQ         = 0x10 // Bit IO_REQ.
	IO_UART0_REQ_CTS_IO_REQ_Pos = 0x5  // Position of CTS_IO_REQ field.
	IO_UART0_REQ_CTS_IO_REQ_Msk = 0x20 // Bit mask of CTS_IO_REQ field.
	IO_UART0_REQ_CTS_IO_REQ     = 0x20 // Bit CTS_IO_REQ.
	IO_UART0_REQ_RTS_IO_REQ_Pos = 0x6  // Position of RTS_IO_REQ field.
	IO_UART0_REQ_RTS_IO_REQ_Msk = 0x40 // Bit mask of RTS_IO_REQ field.
	IO_UART0_REQ_RTS_IO_REQ     = 0x40 // Bit RTS_IO_REQ.

	// UART0_ACK: UART0 I/O Mode Acknowledge
	IO_UART0_ACK_IO_MAP_Pos     = 0x0  // Position of IO_MAP field.
	IO_UART0_ACK_IO_MAP_Msk     = 0x1  // Bit mask of IO_MAP field.
	IO_UART0_ACK_IO_MAP         = 0x1  // Bit IO_MAP.
	IO_UART0_ACK_CTS_MAP_Pos    = 0x1  // Position of CTS_MAP field.
	IO_UART0_ACK_CTS_MAP_Msk    = 0x2  // Bit mask of CTS_MAP field.
	IO_UART0_ACK_CTS_MAP        = 0x2  // Bit CTS_MAP.
	IO_UART0_ACK_RTS_MAP_Pos    = 0x2  // Position of RTS_MAP field.
	IO_UART0_ACK_RTS_MAP_Msk    = 0x4  // Bit mask of RTS_MAP field.
	IO_UART0_ACK_RTS_MAP        = 0x4  // Bit RTS_MAP.
	IO_UART0_ACK_IO_REQ_Pos     = 0x4  // Position of IO_REQ field.
	IO_UART0_ACK_IO_REQ_Msk     = 0x10 // Bit mask of IO_REQ field.
	IO_UART0_ACK_IO_REQ         = 0x10 // Bit IO_REQ.
	IO_UART0_ACK_CTS_IO_REQ_Pos = 0x5  // Position of CTS_IO_REQ field.
	IO_UART0_ACK_CTS_IO_REQ_Msk = 0x20 // Bit mask of CTS_IO_REQ field.
	IO_UART0_ACK_CTS_IO_REQ     = 0x20 // Bit CTS_IO_REQ.
	IO_UART0_ACK_RTS_IO_REQ_Pos = 0x6  // Position of RTS_IO_REQ field.
	IO_UART0_ACK_RTS_IO_REQ_Msk = 0x40 // Bit mask of RTS_IO_REQ field.
	IO_UART0_ACK_RTS_IO_REQ     = 0x40 // Bit RTS_IO_REQ.

	// UART1_REQ: UART1 I/O Mode Request
	IO_UART1_REQ_IO_MAP_Pos     = 0x0  // Position of IO_MAP field.
	IO_UART1_REQ_IO_MAP_Msk     = 0x1  // Bit mask of IO_MAP field.
	IO_UART1_REQ_IO_MAP         = 0x1  // Bit IO_MAP.
	IO_UART1_REQ_CTS_MAP_Pos    = 0x1  // Position of CTS_MAP field.
	IO_UART1_REQ_CTS_MAP_Msk    = 0x2  // Bit mask of CTS_MAP field.
	IO_UART1_REQ_CTS_MAP        = 0x2  // Bit CTS_MAP.
	IO_UART1_REQ_RTS_MAP_Pos    = 0x2  // Position of RTS_MAP field.
	IO_UART1_REQ_RTS_MAP_Msk    = 0x4  // Bit mask of RTS_MAP field.
	IO_UART1_REQ_RTS_MAP        = 0x4  // Bit RTS_MAP.
	IO_UART1_REQ_IO_REQ_Pos     = 0x4  // Position of IO_REQ field.
	IO_UART1_REQ_IO_REQ_Msk     = 0x10 // Bit mask of IO_REQ field.
	IO_UART1_REQ_IO_REQ         = 0x10 // Bit IO_REQ.
	IO_UART1_REQ_CTS_IO_REQ_Pos = 0x5  // Position of CTS_IO_REQ field.
	IO_UART1_REQ_CTS_IO_REQ_Msk = 0x20 // Bit mask of CTS_IO_REQ field.
	IO_UART1_REQ_CTS_IO_REQ     = 0x20 // Bit CTS_IO_REQ.
	IO_UART1_REQ_RTS_IO_REQ_Pos = 0x6  // Position of RTS_IO_REQ field.
	IO_UART1_REQ_RTS_IO_REQ_Msk = 0x40 // Bit mask of RTS_IO_REQ field.
	IO_UART1_REQ_RTS_IO_REQ     = 0x40 // Bit RTS_IO_REQ.

	// UART1_ACK: UART1 I/O Mode Acknowledge
	IO_UART1_ACK_IO_MAP_Pos     = 0x0  // Position of IO_MAP field.
	IO_UART1_ACK_IO_MAP_Msk     = 0x1  // Bit mask of IO_MAP field.
	IO_UART1_ACK_IO_MAP         = 0x1  // Bit IO_MAP.
	IO_UART1_ACK_CTS_MAP_Pos    = 0x1  // Position of CTS_MAP field.
	IO_UART1_ACK_CTS_MAP_Msk    = 0x2  // Bit mask of CTS_MAP field.
	IO_UART1_ACK_CTS_MAP        = 0x2  // Bit CTS_MAP.
	IO_UART1_ACK_RTS_MAP_Pos    = 0x2  // Position of RTS_MAP field.
	IO_UART1_ACK_RTS_MAP_Msk    = 0x4  // Bit mask of RTS_MAP field.
	IO_UART1_ACK_RTS_MAP        = 0x4  // Bit RTS_MAP.
	IO_UART1_ACK_IO_REQ_Pos     = 0x4  // Position of IO_REQ field.
	IO_UART1_ACK_IO_REQ_Msk     = 0x10 // Bit mask of IO_REQ field.
	IO_UART1_ACK_IO_REQ         = 0x10 // Bit IO_REQ.
	IO_UART1_ACK_CTS_IO_REQ_Pos = 0x5  // Position of CTS_IO_REQ field.
	IO_UART1_ACK_CTS_IO_REQ_Msk = 0x20 // Bit mask of CTS_IO_REQ field.
	IO_UART1_ACK_CTS_IO_REQ     = 0x20 // Bit CTS_IO_REQ.
	IO_UART1_ACK_RTS_IO_REQ_Pos = 0x6  // Position of RTS_IO_REQ field.
	IO_UART1_ACK_RTS_IO_REQ_Msk = 0x40 // Bit mask of RTS_IO_REQ field.
	IO_UART1_ACK_RTS_IO_REQ     = 0x40 // Bit RTS_IO_REQ.

	// UART2_REQ: UART2 I/O Mode Request
	IO_UART2_REQ_IO_MAP_Pos     = 0x0  // Position of IO_MAP field.
	IO_UART2_REQ_IO_MAP_Msk     = 0x1  // Bit mask of IO_MAP field.
	IO_UART2_REQ_IO_MAP         = 0x1  // Bit IO_MAP.
	IO_UART2_REQ_CTS_MAP_Pos    = 0x1  // Position of CTS_MAP field.
	IO_UART2_REQ_CTS_MAP_Msk    = 0x2  // Bit mask of CTS_MAP field.
	IO_UART2_REQ_CTS_MAP        = 0x2  // Bit CTS_MAP.
	IO_UART2_REQ_RTS_MAP_Pos    = 0x2  // Position of RTS_MAP field.
	IO_UART2_REQ_RTS_MAP_Msk    = 0x4  // Bit mask of RTS_MAP field.
	IO_UART2_REQ_RTS_MAP        = 0x4  // Bit RTS_MAP.
	IO_UART2_REQ_IO_REQ_Pos     = 0x4  // Position of IO_REQ field.
	IO_UART2_REQ_IO_REQ_Msk     = 0x10 // Bit mask of IO_REQ field.
	IO_UART2_REQ_IO_REQ         = 0x10 // Bit IO_REQ.
	IO_UART2_REQ_CTS_IO_REQ_Pos = 0x5  // Position of CTS_IO_REQ field.
	IO_UART2_REQ_CTS_IO_REQ_Msk = 0x20 // Bit mask of CTS_IO_REQ field.
	IO_UART2_REQ_CTS_IO_REQ     = 0x20 // Bit CTS_IO_REQ.
	IO_UART2_REQ_RTS_IO_REQ_Pos = 0x6  // Position of RTS_IO_REQ field.
	IO_UART2_REQ_RTS_IO_REQ_Msk = 0x40 // Bit mask of RTS_IO_REQ field.
	IO_UART2_REQ_RTS_IO_REQ     = 0x40 // Bit RTS_IO_REQ.

	// UART2_ACK: UART2 I/O Mode Acknowledge
	IO_UART2_ACK_IO_MAP_Pos     = 0x0  // Position of IO_MAP field.
	IO_UART2_ACK_IO_MAP_Msk     = 0x1  // Bit mask of IO_MAP field.
	IO_UART2_ACK_IO_MAP         = 0x1  // Bit IO_MAP.
	IO_UART2_ACK_CTS_MAP_Pos    = 0x1  // Position of CTS_MAP field.
	IO_UART2_ACK_CTS_MAP_Msk    = 0x2  // Bit mask of CTS_MAP field.
	IO_UART2_ACK_CTS_MAP        = 0x2  // Bit CTS_MAP.
	IO_UART2_ACK_RTS_MAP_Pos    = 0x2  // Position of RTS_MAP field.
	IO_UART2_ACK_RTS_MAP_Msk    = 0x4  // Bit mask of RTS_MAP field.
	IO_UART2_ACK_RTS_MAP        = 0x4  // Bit RTS_MAP.
	IO_UART2_ACK_IO_REQ_Pos     = 0x4  // Position of IO_REQ field.
	IO_UART2_ACK_IO_REQ_Msk     = 0x10 // Bit mask of IO_REQ field.
	IO_UART2_ACK_IO_REQ         = 0x10 // Bit IO_REQ.
	IO_UART2_ACK_CTS_IO_REQ_Pos = 0x5  // Position of CTS_IO_REQ field.
	IO_UART2_ACK_CTS_IO_REQ_Msk = 0x20 // Bit mask of CTS_IO_REQ field.
	IO_UART2_ACK_CTS_IO_REQ     = 0x20 // Bit CTS_IO_REQ.
	IO_UART2_ACK_RTS_IO_REQ_Pos = 0x6  // Position of RTS_IO_REQ field.
	IO_UART2_ACK_RTS_IO_REQ_Msk = 0x40 // Bit mask of RTS_IO_REQ field.
	IO_UART2_ACK_RTS_IO_REQ     = 0x40 // Bit RTS_IO_REQ.

	// UART3_REQ: UART3 I/O Mode Request
	IO_UART3_REQ_IO_MAP_Pos     = 0x0  // Position of IO_MAP field.
	IO_UART3_REQ_IO_MAP_Msk     = 0x1  // Bit mask of IO_MAP field.
	IO_UART3_REQ_IO_MAP         = 0x1  // Bit IO_MAP.
	IO_UART3_REQ_CTS_MAP_Pos    = 0x1  // Position of CTS_MAP field.
	IO_UART3_REQ_CTS_MAP_Msk    = 0x2  // Bit mask of CTS_MAP field.
	IO_UART3_REQ_CTS_MAP        = 0x2  // Bit CTS_MAP.
	IO_UART3_REQ_RTS_MAP_Pos    = 0x2  // Position of RTS_MAP field.
	IO_UART3_REQ_RTS_MAP_Msk    = 0x4  // Bit mask of RTS_MAP field.
	IO_UART3_REQ_RTS_MAP        = 0x4  // Bit RTS_MAP.
	IO_UART3_REQ_IO_REQ_Pos     = 0x4  // Position of IO_REQ field.
	IO_UART3_REQ_IO_REQ_Msk     = 0x10 // Bit mask of IO_REQ field.
	IO_UART3_REQ_IO_REQ         = 0x10 // Bit IO_REQ.
	IO_UART3_REQ_CTS_IO_REQ_Pos = 0x5  // Position of CTS_IO_REQ field.
	IO_UART3_REQ_CTS_IO_REQ_Msk = 0x20 // Bit mask of CTS_IO_REQ field.
	IO_UART3_REQ_CTS_IO_REQ     = 0x20 // Bit CTS_IO_REQ.
	IO_UART3_REQ_RTS_IO_REQ_Pos = 0x6  // Position of RTS_IO_REQ field.
	IO_UART3_REQ_RTS_IO_REQ_Msk = 0x40 // Bit mask of RTS_IO_REQ field.
	IO_UART3_REQ_RTS_IO_REQ     = 0x40 // Bit RTS_IO_REQ.

	// UART3_ACK: UART3 I/O Mode Acknowledge
	IO_UART3_ACK_IO_MAP_Pos     = 0x0  // Position of IO_MAP field.
	IO_UART3_ACK_IO_MAP_Msk     = 0x1  // Bit mask of IO_MAP field.
	IO_UART3_ACK_IO_MAP         = 0x1  // Bit IO_MAP.
	IO_UART3_ACK_CTS_MAP_Pos    = 0x1  // Position of CTS_MAP field.
	IO_UART3_ACK_CTS_MAP_Msk    = 0x2  // Bit mask of CTS_MAP field.
	IO_UART3_ACK_CTS_MAP        = 0x2  // Bit CTS_MAP.
	IO_UART3_ACK_RTS_MAP_Pos    = 0x2  // Position of RTS_MAP field.
	IO_UART3_ACK_RTS_MAP_Msk    = 0x4  // Bit mask of RTS_MAP field.
	IO_UART3_ACK_RTS_MAP        = 0x4  // Bit RTS_MAP.
	IO_UART3_ACK_IO_REQ_Pos     = 0x4  // Position of IO_REQ field.
	IO_UART3_ACK_IO_REQ_Msk     = 0x10 // Bit mask of IO_REQ field.
	IO_UART3_ACK_IO_REQ         = 0x10 // Bit IO_REQ.
	IO_UART3_ACK_CTS_IO_REQ_Pos = 0x5  // Position of CTS_IO_REQ field.
	IO_UART3_ACK_CTS_IO_REQ_Msk = 0x20 // Bit mask of CTS_IO_REQ field.
	IO_UART3_ACK_CTS_IO_REQ     = 0x20 // Bit CTS_IO_REQ.
	IO_UART3_ACK_RTS_IO_REQ_Pos = 0x6  // Position of RTS_IO_REQ field.
	IO_UART3_ACK_RTS_IO_REQ_Msk = 0x40 // Bit mask of RTS_IO_REQ field.
	IO_UART3_ACK_RTS_IO_REQ     = 0x40 // Bit RTS_IO_REQ.

	// I2CM0_REQ: I2C Master 0 I/O Request
	IO_I2CM0_REQ_MAPPING_REQ_Pos = 0x4  // Position of MAPPING_REQ field.
	IO_I2CM0_REQ_MAPPING_REQ_Msk = 0x10 // Bit mask of MAPPING_REQ field.
	IO_I2CM0_REQ_MAPPING_REQ     = 0x10 // Bit MAPPING_REQ.

	// I2CM0_ACK: I2C Master 0 I/O Acknowledge
	IO_I2CM0_ACK_MAPPING_ACK_Pos = 0x4  // Position of MAPPING_ACK field.
	IO_I2CM0_ACK_MAPPING_ACK_Msk = 0x10 // Bit mask of MAPPING_ACK field.
	IO_I2CM0_ACK_MAPPING_ACK     = 0x10 // Bit MAPPING_ACK.

	// I2CM1_REQ: I2C Master 1 I/O Request
	IO_I2CM1_REQ_MAPPING_REQ_Pos = 0x4  // Position of MAPPING_REQ field.
	IO_I2CM1_REQ_MAPPING_REQ_Msk = 0x10 // Bit mask of MAPPING_REQ field.
	IO_I2CM1_REQ_MAPPING_REQ     = 0x10 // Bit MAPPING_REQ.

	// I2CM1_ACK: I2C Master 1 I/O Acknowledge
	IO_I2CM1_ACK_MAPPING_ACK_Pos = 0x4  // Position of MAPPING_ACK field.
	IO_I2CM1_ACK_MAPPING_ACK_Msk = 0x10 // Bit mask of MAPPING_ACK field.
	IO_I2CM1_ACK_MAPPING_ACK     = 0x10 // Bit MAPPING_ACK.

	// I2CM2_REQ: I2C Master 2 I/O Request
	IO_I2CM2_REQ_MAPPING_REQ_Pos = 0x4  // Position of MAPPING_REQ field.
	IO_I2CM2_REQ_MAPPING_REQ_Msk = 0x10 // Bit mask of MAPPING_REQ field.
	IO_I2CM2_REQ_MAPPING_REQ     = 0x10 // Bit MAPPING_REQ.

	// I2CM2_ACK: I2C Master 2 I/O Acknowledge
	IO_I2CM2_ACK_MAPPING_ACK_Pos = 0x4  // Position of MAPPING_ACK field.
	IO_I2CM2_ACK_MAPPING_ACK_Msk = 0x10 // Bit mask of MAPPING_ACK field.
	IO_I2CM2_ACK_MAPPING_ACK     = 0x10 // Bit MAPPING_ACK.

	// I2CS_REQ: I2C Slave I/O Request
	IO_I2CS_REQ_IO_SEL_Pos      = 0x0  // Position of IO_SEL field.
	IO_I2CS_REQ_IO_SEL_Msk      = 0x3  // Bit mask of IO_SEL field.
	IO_I2CS_REQ_MAPPING_REQ_Pos = 0x4  // Position of MAPPING_REQ field.
	IO_I2CS_REQ_MAPPING_REQ_Msk = 0x10 // Bit mask of MAPPING_REQ field.
	IO_I2CS_REQ_MAPPING_REQ     = 0x10 // Bit MAPPING_REQ.

	// I2CS_ACK: I2C Slave I/O Acknowledge
	IO_I2CS_ACK_IO_SEL_Pos      = 0x0  // Position of IO_SEL field.
	IO_I2CS_ACK_IO_SEL_Msk      = 0x3  // Bit mask of IO_SEL field.
	IO_I2CS_ACK_MAPPING_ACK_Pos = 0x4  // Position of MAPPING_ACK field.
	IO_I2CS_ACK_MAPPING_ACK_Msk = 0x10 // Bit mask of MAPPING_ACK field.
	IO_I2CS_ACK_MAPPING_ACK     = 0x10 // Bit MAPPING_ACK.

	// SPI0_REQ: SPI Master 0 I/O Mode Request
	IO_SPI0_REQ_CORE_IO_REQ_Pos = 0x4       // Position of CORE_IO_REQ field.
	IO_SPI0_REQ_CORE_IO_REQ_Msk = 0x10      // Bit mask of CORE_IO_REQ field.
	IO_SPI0_REQ_CORE_IO_REQ     = 0x10      // Bit CORE_IO_REQ.
	IO_SPI0_REQ_SS0_IO_REQ_Pos  = 0x8       // Position of SS0_IO_REQ field.
	IO_SPI0_REQ_SS0_IO_REQ_Msk  = 0x100     // Bit mask of SS0_IO_REQ field.
	IO_SPI0_REQ_SS0_IO_REQ      = 0x100     // Bit SS0_IO_REQ.
	IO_SPI0_REQ_SS1_IO_REQ_Pos  = 0x9       // Position of SS1_IO_REQ field.
	IO_SPI0_REQ_SS1_IO_REQ_Msk  = 0x200     // Bit mask of SS1_IO_REQ field.
	IO_SPI0_REQ_SS1_IO_REQ      = 0x200     // Bit SS1_IO_REQ.
	IO_SPI0_REQ_SS2_IO_REQ_Pos  = 0xa       // Position of SS2_IO_REQ field.
	IO_SPI0_REQ_SS2_IO_REQ_Msk  = 0x400     // Bit mask of SS2_IO_REQ field.
	IO_SPI0_REQ_SS2_IO_REQ      = 0x400     // Bit SS2_IO_REQ.
	IO_SPI0_REQ_SS3_IO_REQ_Pos  = 0xb       // Position of SS3_IO_REQ field.
	IO_SPI0_REQ_SS3_IO_REQ_Msk  = 0x800     // Bit mask of SS3_IO_REQ field.
	IO_SPI0_REQ_SS3_IO_REQ      = 0x800     // Bit SS3_IO_REQ.
	IO_SPI0_REQ_SS4_IO_REQ_Pos  = 0xc       // Position of SS4_IO_REQ field.
	IO_SPI0_REQ_SS4_IO_REQ_Msk  = 0x1000    // Bit mask of SS4_IO_REQ field.
	IO_SPI0_REQ_SS4_IO_REQ      = 0x1000    // Bit SS4_IO_REQ.
	IO_SPI0_REQ_QUAD_IO_REQ_Pos = 0x14      // Position of QUAD_IO_REQ field.
	IO_SPI0_REQ_QUAD_IO_REQ_Msk = 0x100000  // Bit mask of QUAD_IO_REQ field.
	IO_SPI0_REQ_QUAD_IO_REQ     = 0x100000  // Bit QUAD_IO_REQ.
	IO_SPI0_REQ_FAST_MODE_Pos   = 0x18      // Position of FAST_MODE field.
	IO_SPI0_REQ_FAST_MODE_Msk   = 0x1000000 // Bit mask of FAST_MODE field.
	IO_SPI0_REQ_FAST_MODE       = 0x1000000 // Bit FAST_MODE.

	// SPI0_ACK: SPI Master 0 I/O Mode Acknowledge
	IO_SPI0_ACK_CORE_IO_ACK_Pos = 0x4       // Position of CORE_IO_ACK field.
	IO_SPI0_ACK_CORE_IO_ACK_Msk = 0x10      // Bit mask of CORE_IO_ACK field.
	IO_SPI0_ACK_CORE_IO_ACK     = 0x10      // Bit CORE_IO_ACK.
	IO_SPI0_ACK_SS0_IO_ACK_Pos  = 0x8       // Position of SS0_IO_ACK field.
	IO_SPI0_ACK_SS0_IO_ACK_Msk  = 0x100     // Bit mask of SS0_IO_ACK field.
	IO_SPI0_ACK_SS0_IO_ACK      = 0x100     // Bit SS0_IO_ACK.
	IO_SPI0_ACK_SS1_IO_ACK_Pos  = 0x9       // Position of SS1_IO_ACK field.
	IO_SPI0_ACK_SS1_IO_ACK_Msk  = 0x200     // Bit mask of SS1_IO_ACK field.
	IO_SPI0_ACK_SS1_IO_ACK      = 0x200     // Bit SS1_IO_ACK.
	IO_SPI0_ACK_SS2_IO_ACK_Pos  = 0xa       // Position of SS2_IO_ACK field.
	IO_SPI0_ACK_SS2_IO_ACK_Msk  = 0x400     // Bit mask of SS2_IO_ACK field.
	IO_SPI0_ACK_SS2_IO_ACK      = 0x400     // Bit SS2_IO_ACK.
	IO_SPI0_ACK_SS3_IO_ACK_Pos  = 0xb       // Position of SS3_IO_ACK field.
	IO_SPI0_ACK_SS3_IO_ACK_Msk  = 0x800     // Bit mask of SS3_IO_ACK field.
	IO_SPI0_ACK_SS3_IO_ACK      = 0x800     // Bit SS3_IO_ACK.
	IO_SPI0_ACK_SS4_IO_ACK_Pos  = 0xc       // Position of SS4_IO_ACK field.
	IO_SPI0_ACK_SS4_IO_ACK_Msk  = 0x1000    // Bit mask of SS4_IO_ACK field.
	IO_SPI0_ACK_SS4_IO_ACK      = 0x1000    // Bit SS4_IO_ACK.
	IO_SPI0_ACK_QUAD_IO_ACK_Pos = 0x14      // Position of QUAD_IO_ACK field.
	IO_SPI0_ACK_QUAD_IO_ACK_Msk = 0x100000  // Bit mask of QUAD_IO_ACK field.
	IO_SPI0_ACK_QUAD_IO_ACK     = 0x100000  // Bit QUAD_IO_ACK.
	IO_SPI0_ACK_FAST_MODE_Pos   = 0x18      // Position of FAST_MODE field.
	IO_SPI0_ACK_FAST_MODE_Msk   = 0x1000000 // Bit mask of FAST_MODE field.
	IO_SPI0_ACK_FAST_MODE       = 0x1000000 // Bit FAST_MODE.

	// SPI1_REQ: SPI Master 1 I/O Mode Request
	IO_SPI1_REQ_CORE_IO_REQ_Pos = 0x4       // Position of CORE_IO_REQ field.
	IO_SPI1_REQ_CORE_IO_REQ_Msk = 0x10      // Bit mask of CORE_IO_REQ field.
	IO_SPI1_REQ_CORE_IO_REQ     = 0x10      // Bit CORE_IO_REQ.
	IO_SPI1_REQ_SS0_IO_REQ_Pos  = 0x8       // Position of SS0_IO_REQ field.
	IO_SPI1_REQ_SS0_IO_REQ_Msk  = 0x100     // Bit mask of SS0_IO_REQ field.
	IO_SPI1_REQ_SS0_IO_REQ      = 0x100     // Bit SS0_IO_REQ.
	IO_SPI1_REQ_SS1_IO_REQ_Pos  = 0x9       // Position of SS1_IO_REQ field.
	IO_SPI1_REQ_SS1_IO_REQ_Msk  = 0x200     // Bit mask of SS1_IO_REQ field.
	IO_SPI1_REQ_SS1_IO_REQ      = 0x200     // Bit SS1_IO_REQ.
	IO_SPI1_REQ_SS2_IO_REQ_Pos  = 0xa       // Position of SS2_IO_REQ field.
	IO_SPI1_REQ_SS2_IO_REQ_Msk  = 0x400     // Bit mask of SS2_IO_REQ field.
	IO_SPI1_REQ_SS2_IO_REQ      = 0x400     // Bit SS2_IO_REQ.
	IO_SPI1_REQ_QUAD_IO_REQ_Pos = 0x14      // Position of QUAD_IO_REQ field.
	IO_SPI1_REQ_QUAD_IO_REQ_Msk = 0x100000  // Bit mask of QUAD_IO_REQ field.
	IO_SPI1_REQ_QUAD_IO_REQ     = 0x100000  // Bit QUAD_IO_REQ.
	IO_SPI1_REQ_FAST_MODE_Pos   = 0x18      // Position of FAST_MODE field.
	IO_SPI1_REQ_FAST_MODE_Msk   = 0x1000000 // Bit mask of FAST_MODE field.
	IO_SPI1_REQ_FAST_MODE       = 0x1000000 // Bit FAST_MODE.

	// SPI1_ACK: SPI Master 1 I/O Mode Acknowledge
	IO_SPI1_ACK_CORE_IO_ACK_Pos = 0x4       // Position of CORE_IO_ACK field.
	IO_SPI1_ACK_CORE_IO_ACK_Msk = 0x10      // Bit mask of CORE_IO_ACK field.
	IO_SPI1_ACK_CORE_IO_ACK     = 0x10      // Bit CORE_IO_ACK.
	IO_SPI1_ACK_SS0_IO_ACK_Pos  = 0x8       // Position of SS0_IO_ACK field.
	IO_SPI1_ACK_SS0_IO_ACK_Msk  = 0x100     // Bit mask of SS0_IO_ACK field.
	IO_SPI1_ACK_SS0_IO_ACK      = 0x100     // Bit SS0_IO_ACK.
	IO_SPI1_ACK_SS1_IO_ACK_Pos  = 0x9       // Position of SS1_IO_ACK field.
	IO_SPI1_ACK_SS1_IO_ACK_Msk  = 0x200     // Bit mask of SS1_IO_ACK field.
	IO_SPI1_ACK_SS1_IO_ACK      = 0x200     // Bit SS1_IO_ACK.
	IO_SPI1_ACK_SS2_IO_ACK_Pos  = 0xa       // Position of SS2_IO_ACK field.
	IO_SPI1_ACK_SS2_IO_ACK_Msk  = 0x400     // Bit mask of SS2_IO_ACK field.
	IO_SPI1_ACK_SS2_IO_ACK      = 0x400     // Bit SS2_IO_ACK.
	IO_SPI1_ACK_QUAD_IO_ACK_Pos = 0x14      // Position of QUAD_IO_ACK field.
	IO_SPI1_ACK_QUAD_IO_ACK_Msk = 0x100000  // Bit mask of QUAD_IO_ACK field.
	IO_SPI1_ACK_QUAD_IO_ACK     = 0x100000  // Bit QUAD_IO_ACK.
	IO_SPI1_ACK_FAST_MODE_Pos   = 0x18      // Position of FAST_MODE field.
	IO_SPI1_ACK_FAST_MODE_Msk   = 0x1000000 // Bit mask of FAST_MODE field.
	IO_SPI1_ACK_FAST_MODE       = 0x1000000 // Bit FAST_MODE.

	// SPI2_REQ: SPI Master 2 I/O Mode Request
	IO_SPI2_REQ_MAPPING_REQ_Pos = 0x0       // Position of MAPPING_REQ field.
	IO_SPI2_REQ_MAPPING_REQ_Msk = 0x1       // Bit mask of MAPPING_REQ field.
	IO_SPI2_REQ_MAPPING_REQ     = 0x1       // Bit MAPPING_REQ.
	IO_SPI2_REQ_CORE_IO_REQ_Pos = 0x4       // Position of CORE_IO_REQ field.
	IO_SPI2_REQ_CORE_IO_REQ_Msk = 0x10      // Bit mask of CORE_IO_REQ field.
	IO_SPI2_REQ_CORE_IO_REQ     = 0x10      // Bit CORE_IO_REQ.
	IO_SPI2_REQ_SS0_IO_REQ_Pos  = 0x8       // Position of SS0_IO_REQ field.
	IO_SPI2_REQ_SS0_IO_REQ_Msk  = 0x100     // Bit mask of SS0_IO_REQ field.
	IO_SPI2_REQ_SS0_IO_REQ      = 0x100     // Bit SS0_IO_REQ.
	IO_SPI2_REQ_SS1_IO_REQ_Pos  = 0x9       // Position of SS1_IO_REQ field.
	IO_SPI2_REQ_SS1_IO_REQ_Msk  = 0x200     // Bit mask of SS1_IO_REQ field.
	IO_SPI2_REQ_SS1_IO_REQ      = 0x200     // Bit SS1_IO_REQ.
	IO_SPI2_REQ_SS2_IO_REQ_Pos  = 0xa       // Position of SS2_IO_REQ field.
	IO_SPI2_REQ_SS2_IO_REQ_Msk  = 0x400     // Bit mask of SS2_IO_REQ field.
	IO_SPI2_REQ_SS2_IO_REQ      = 0x400     // Bit SS2_IO_REQ.
	IO_SPI2_REQ_SR0_IO_REQ_Pos  = 0x10      // Position of SR0_IO_REQ field.
	IO_SPI2_REQ_SR0_IO_REQ_Msk  = 0x10000   // Bit mask of SR0_IO_REQ field.
	IO_SPI2_REQ_SR0_IO_REQ      = 0x10000   // Bit SR0_IO_REQ.
	IO_SPI2_REQ_SR1_IO_REQ_Pos  = 0x11      // Position of SR1_IO_REQ field.
	IO_SPI2_REQ_SR1_IO_REQ_Msk  = 0x20000   // Bit mask of SR1_IO_REQ field.
	IO_SPI2_REQ_SR1_IO_REQ      = 0x20000   // Bit SR1_IO_REQ.
	IO_SPI2_REQ_QUAD_IO_REQ_Pos = 0x14      // Position of QUAD_IO_REQ field.
	IO_SPI2_REQ_QUAD_IO_REQ_Msk = 0x100000  // Bit mask of QUAD_IO_REQ field.
	IO_SPI2_REQ_QUAD_IO_REQ     = 0x100000  // Bit QUAD_IO_REQ.
	IO_SPI2_REQ_FAST_MODE_Pos   = 0x18      // Position of FAST_MODE field.
	IO_SPI2_REQ_FAST_MODE_Msk   = 0x1000000 // Bit mask of FAST_MODE field.
	IO_SPI2_REQ_FAST_MODE       = 0x1000000 // Bit FAST_MODE.

	// SPI2_ACK: SPI Master 2 I/O Mode Acknowledge
	IO_SPI2_ACK_MAPPING_ACK_Pos = 0x0       // Position of MAPPING_ACK field.
	IO_SPI2_ACK_MAPPING_ACK_Msk = 0x1       // Bit mask of MAPPING_ACK field.
	IO_SPI2_ACK_MAPPING_ACK     = 0x1       // Bit MAPPING_ACK.
	IO_SPI2_ACK_CORE_IO_ACK_Pos = 0x4       // Position of CORE_IO_ACK field.
	IO_SPI2_ACK_CORE_IO_ACK_Msk = 0x10      // Bit mask of CORE_IO_ACK field.
	IO_SPI2_ACK_CORE_IO_ACK     = 0x10      // Bit CORE_IO_ACK.
	IO_SPI2_ACK_SS0_IO_ACK_Pos  = 0x8       // Position of SS0_IO_ACK field.
	IO_SPI2_ACK_SS0_IO_ACK_Msk  = 0x100     // Bit mask of SS0_IO_ACK field.
	IO_SPI2_ACK_SS0_IO_ACK      = 0x100     // Bit SS0_IO_ACK.
	IO_SPI2_ACK_SS1_IO_ACK_Pos  = 0x9       // Position of SS1_IO_ACK field.
	IO_SPI2_ACK_SS1_IO_ACK_Msk  = 0x200     // Bit mask of SS1_IO_ACK field.
	IO_SPI2_ACK_SS1_IO_ACK      = 0x200     // Bit SS1_IO_ACK.
	IO_SPI2_ACK_SS2_IO_ACK_Pos  = 0xa       // Position of SS2_IO_ACK field.
	IO_SPI2_ACK_SS2_IO_ACK_Msk  = 0x400     // Bit mask of SS2_IO_ACK field.
	IO_SPI2_ACK_SS2_IO_ACK      = 0x400     // Bit SS2_IO_ACK.
	IO_SPI2_ACK_SR0_IO_REQ_Pos  = 0x10      // Position of SR0_IO_REQ field.
	IO_SPI2_ACK_SR0_IO_REQ_Msk  = 0x10000   // Bit mask of SR0_IO_REQ field.
	IO_SPI2_ACK_SR0_IO_REQ      = 0x10000   // Bit SR0_IO_REQ.
	IO_SPI2_ACK_SR1_IO_REQ_Pos  = 0x11      // Position of SR1_IO_REQ field.
	IO_SPI2_ACK_SR1_IO_REQ_Msk  = 0x20000   // Bit mask of SR1_IO_REQ field.
	IO_SPI2_ACK_SR1_IO_REQ      = 0x20000   // Bit SR1_IO_REQ.
	IO_SPI2_ACK_QUAD_IO_ACK_Pos = 0x14      // Position of QUAD_IO_ACK field.
	IO_SPI2_ACK_QUAD_IO_ACK_Msk = 0x100000  // Bit mask of QUAD_IO_ACK field.
	IO_SPI2_ACK_QUAD_IO_ACK     = 0x100000  // Bit QUAD_IO_ACK.
	IO_SPI2_ACK_FAST_MODE_Pos   = 0x18      // Position of FAST_MODE field.
	IO_SPI2_ACK_FAST_MODE_Msk   = 0x1000000 // Bit mask of FAST_MODE field.
	IO_SPI2_ACK_FAST_MODE       = 0x1000000 // Bit FAST_MODE.

	// SPIB_REQ: SPI Bridge I/O Mode Request
	IO_SPIB_REQ_CORE_IO_REQ_Pos = 0x4    // Position of CORE_IO_REQ field.
	IO_SPIB_REQ_CORE_IO_REQ_Msk = 0x10   // Bit mask of CORE_IO_REQ field.
	IO_SPIB_REQ_CORE_IO_REQ     = 0x10   // Bit CORE_IO_REQ.
	IO_SPIB_REQ_QUAD_IO_REQ_Pos = 0x8    // Position of QUAD_IO_REQ field.
	IO_SPIB_REQ_QUAD_IO_REQ_Msk = 0x100  // Bit mask of QUAD_IO_REQ field.
	IO_SPIB_REQ_QUAD_IO_REQ     = 0x100  // Bit QUAD_IO_REQ.
	IO_SPIB_REQ_FAST_MODE_Pos   = 0xc    // Position of FAST_MODE field.
	IO_SPIB_REQ_FAST_MODE_Msk   = 0x1000 // Bit mask of FAST_MODE field.
	IO_SPIB_REQ_FAST_MODE       = 0x1000 // Bit FAST_MODE.

	// SPIB_ACK: SPI Bridge I/O Mode Acknowledge
	IO_SPIB_ACK_CORE_IO_ACK_Pos = 0x4    // Position of CORE_IO_ACK field.
	IO_SPIB_ACK_CORE_IO_ACK_Msk = 0x10   // Bit mask of CORE_IO_ACK field.
	IO_SPIB_ACK_CORE_IO_ACK     = 0x10   // Bit CORE_IO_ACK.
	IO_SPIB_ACK_QUAD_IO_ACK_Pos = 0x8    // Position of QUAD_IO_ACK field.
	IO_SPIB_ACK_QUAD_IO_ACK_Msk = 0x100  // Bit mask of QUAD_IO_ACK field.
	IO_SPIB_ACK_QUAD_IO_ACK     = 0x100  // Bit QUAD_IO_ACK.
	IO_SPIB_ACK_FAST_MODE_Pos   = 0xc    // Position of FAST_MODE field.
	IO_SPIB_ACK_FAST_MODE_Msk   = 0x1000 // Bit mask of FAST_MODE field.
	IO_SPIB_ACK_FAST_MODE       = 0x1000 // Bit FAST_MODE.

	// OWM_REQ: 1-Wire Master I/O Mode Request
	IO_OWM_REQ_MAPPING_REQ_Pos = 0x4  // Position of MAPPING_REQ field.
	IO_OWM_REQ_MAPPING_REQ_Msk = 0x10 // Bit mask of MAPPING_REQ field.
	IO_OWM_REQ_MAPPING_REQ     = 0x10 // Bit MAPPING_REQ.
	IO_OWM_REQ_EPU_IO_REQ_Pos  = 0x5  // Position of EPU_IO_REQ field.
	IO_OWM_REQ_EPU_IO_REQ_Msk  = 0x20 // Bit mask of EPU_IO_REQ field.
	IO_OWM_REQ_EPU_IO_REQ      = 0x20 // Bit EPU_IO_REQ.

	// OWM_ACK: 1-Wire Master I/O Mode Acknowledge
	IO_OWM_ACK_MAPPING_ACK_Pos = 0x4  // Position of MAPPING_ACK field.
	IO_OWM_ACK_MAPPING_ACK_Msk = 0x10 // Bit mask of MAPPING_ACK field.
	IO_OWM_ACK_MAPPING_ACK     = 0x10 // Bit MAPPING_ACK.
	IO_OWM_ACK_EPU_IO_ACK_Pos  = 0x5  // Position of EPU_IO_ACK field.
	IO_OWM_ACK_EPU_IO_ACK_Msk  = 0x20 // Bit mask of EPU_IO_ACK field.
	IO_OWM_ACK_EPU_IO_ACK      = 0x20 // Bit EPU_IO_ACK.
)

// Bitfields for FLC: Flash Controller
const (
	// FADDR: Flash Operation Address
	FLC_FADDR_FADDR_Pos = 0x0      // Position of FADDR field.
	FLC_FADDR_FADDR_Msk = 0x3fffff // Bit mask of FADDR field.

	// FCKDIV: Flash Clock Pulse Divisor
	FLC_FCKDIV_FCKDIV_Pos             = 0x0        // Position of FCKDIV field.
	FLC_FCKDIV_FCKDIV_Msk             = 0x7f       // Bit mask of FCKDIV field.
	FLC_FCKDIV_AUTO_FCKDIV_RESULT_Pos = 0x10       // Position of AUTO_FCKDIV_RESULT field.
	FLC_FCKDIV_AUTO_FCKDIV_RESULT_Msk = 0xffff0000 // Bit mask of AUTO_FCKDIV_RESULT field.

	// CTRL: Flash Control Register
	FLC_CTRL_WRITE_Pos             = 0x0        // Position of WRITE field.
	FLC_CTRL_WRITE_Msk             = 0x1        // Bit mask of WRITE field.
	FLC_CTRL_WRITE                 = 0x1        // Bit WRITE.
	FLC_CTRL_MASS_ERASE_Pos        = 0x1        // Position of MASS_ERASE field.
	FLC_CTRL_MASS_ERASE_Msk        = 0x2        // Bit mask of MASS_ERASE field.
	FLC_CTRL_MASS_ERASE            = 0x2        // Bit MASS_ERASE.
	FLC_CTRL_PAGE_ERASE_Pos        = 0x2        // Position of PAGE_ERASE field.
	FLC_CTRL_PAGE_ERASE_Msk        = 0x4        // Bit mask of PAGE_ERASE field.
	FLC_CTRL_PAGE_ERASE            = 0x4        // Bit PAGE_ERASE.
	FLC_CTRL_ERASE_CODE_Pos        = 0x8        // Position of ERASE_CODE field.
	FLC_CTRL_ERASE_CODE_Msk        = 0xff00     // Bit mask of ERASE_CODE field.
	FLC_CTRL_INFO_BLOCK_UNLOCK_Pos = 0x10       // Position of INFO_BLOCK_UNLOCK field.
	FLC_CTRL_INFO_BLOCK_UNLOCK_Msk = 0x10000    // Bit mask of INFO_BLOCK_UNLOCK field.
	FLC_CTRL_INFO_BLOCK_UNLOCK     = 0x10000    // Bit INFO_BLOCK_UNLOCK.
	FLC_CTRL_WRITE_ENABLE_Pos      = 0x11       // Position of WRITE_ENABLE field.
	FLC_CTRL_WRITE_ENABLE_Msk      = 0x20000    // Bit mask of WRITE_ENABLE field.
	FLC_CTRL_WRITE_ENABLE          = 0x20000    // Bit WRITE_ENABLE.
	FLC_CTRL_PENDING_Pos           = 0x18       // Position of PENDING field.
	FLC_CTRL_PENDING_Msk           = 0x1000000  // Bit mask of PENDING field.
	FLC_CTRL_PENDING               = 0x1000000  // Bit PENDING.
	FLC_CTRL_INFO_BLOCK_VALID_Pos  = 0x19       // Position of INFO_BLOCK_VALID field.
	FLC_CTRL_INFO_BLOCK_VALID_Msk  = 0x2000000  // Bit mask of INFO_BLOCK_VALID field.
	FLC_CTRL_INFO_BLOCK_VALID      = 0x2000000  // Bit INFO_BLOCK_VALID.
	FLC_CTRL_AUTO_INCRE_MODE_Pos   = 0x1b       // Position of AUTO_INCRE_MODE field.
	FLC_CTRL_AUTO_INCRE_MODE_Msk   = 0x8000000  // Bit mask of AUTO_INCRE_MODE field.
	FLC_CTRL_AUTO_INCRE_MODE       = 0x8000000  // Bit AUTO_INCRE_MODE.
	FLC_CTRL_FLSH_UNLOCK_Pos       = 0x1c       // Position of FLSH_UNLOCK field.
	FLC_CTRL_FLSH_UNLOCK_Msk       = 0xf0000000 // Bit mask of FLSH_UNLOCK field.

	// INTR: Flash Controller Interrupt Flags and Enable/Disable 0
	FLC_INTR_FINISHED_IF_Pos = 0x0        // Position of FINISHED_IF field.
	FLC_INTR_FINISHED_IF_Msk = 0x1        // Bit mask of FINISHED_IF field.
	FLC_INTR_FINISHED_IF     = 0x1        // Bit FINISHED_IF.
	FLC_INTR_FAILED_IF_Pos   = 0x1        // Position of FAILED_IF field.
	FLC_INTR_FAILED_IF_Msk   = 0x2        // Bit mask of FAILED_IF field.
	FLC_INTR_FAILED_IF       = 0x2        // Bit FAILED_IF.
	FLC_INTR_FINISHED_IE_Pos = 0x8        // Position of FINISHED_IE field.
	FLC_INTR_FINISHED_IE_Msk = 0x100      // Bit mask of FINISHED_IE field.
	FLC_INTR_FINISHED_IE     = 0x100      // Bit FINISHED_IE.
	FLC_INTR_FAILED_IE_Pos   = 0x9        // Position of FAILED_IE field.
	FLC_INTR_FAILED_IE_Msk   = 0x200      // Bit mask of FAILED_IE field.
	FLC_INTR_FAILED_IE       = 0x200      // Bit FAILED_IE.
	FLC_INTR_FAIL_FLAGS_Pos  = 0x10       // Position of FAIL_FLAGS field.
	FLC_INTR_FAIL_FLAGS_Msk  = 0xffff0000 // Bit mask of FAIL_FLAGS field.

	// PERFORM: Flash Performance Settings
	FLC_PERFORM_DELAY_SE_EN_Pos       = 0x0        // Position of DELAY_SE_EN field.
	FLC_PERFORM_DELAY_SE_EN_Msk       = 0x1        // Bit mask of DELAY_SE_EN field.
	FLC_PERFORM_DELAY_SE_EN           = 0x1        // Bit DELAY_SE_EN.
	FLC_PERFORM_FAST_READ_MODE_EN_Pos = 0x8        // Position of FAST_READ_MODE_EN field.
	FLC_PERFORM_FAST_READ_MODE_EN_Msk = 0x100      // Bit mask of FAST_READ_MODE_EN field.
	FLC_PERFORM_FAST_READ_MODE_EN     = 0x100      // Bit FAST_READ_MODE_EN.
	FLC_PERFORM_EN_PREVENT_FAIL_Pos   = 0xc        // Position of EN_PREVENT_FAIL field.
	FLC_PERFORM_EN_PREVENT_FAIL_Msk   = 0x1000     // Bit mask of EN_PREVENT_FAIL field.
	FLC_PERFORM_EN_PREVENT_FAIL       = 0x1000     // Bit EN_PREVENT_FAIL.
	FLC_PERFORM_EN_BACK2BACK_RDS_Pos  = 0x10       // Position of EN_BACK2BACK_RDS field.
	FLC_PERFORM_EN_BACK2BACK_RDS_Msk  = 0x10000    // Bit mask of EN_BACK2BACK_RDS field.
	FLC_PERFORM_EN_BACK2BACK_RDS      = 0x10000    // Bit EN_BACK2BACK_RDS.
	FLC_PERFORM_EN_BACK2BACK_WRS_Pos  = 0x14       // Position of EN_BACK2BACK_WRS field.
	FLC_PERFORM_EN_BACK2BACK_WRS_Msk  = 0x100000   // Bit mask of EN_BACK2BACK_WRS field.
	FLC_PERFORM_EN_BACK2BACK_WRS      = 0x100000   // Bit EN_BACK2BACK_WRS.
	FLC_PERFORM_EN_MERGE_GRAB_GNT_Pos = 0x18       // Position of EN_MERGE_GRAB_GNT field.
	FLC_PERFORM_EN_MERGE_GRAB_GNT_Msk = 0x1000000  // Bit mask of EN_MERGE_GRAB_GNT field.
	FLC_PERFORM_EN_MERGE_GRAB_GNT     = 0x1000000  // Bit EN_MERGE_GRAB_GNT.
	FLC_PERFORM_AUTO_TACC_Pos         = 0x1c       // Position of AUTO_TACC field.
	FLC_PERFORM_AUTO_TACC_Msk         = 0x10000000 // Bit mask of AUTO_TACC field.
	FLC_PERFORM_AUTO_TACC             = 0x10000000 // Bit AUTO_TACC.
	FLC_PERFORM_AUTO_CLKDIV_Pos       = 0x1d       // Position of AUTO_CLKDIV field.
	FLC_PERFORM_AUTO_CLKDIV_Msk       = 0x20000000 // Bit mask of AUTO_CLKDIV field.
	FLC_PERFORM_AUTO_CLKDIV           = 0x20000000 // Bit AUTO_CLKDIV.

	// STATUS: Security Status Flags
	FLC_STATUS_JTAG_LOCK_WINDOW_Pos = 0x0        // Position of JTAG_LOCK_WINDOW field.
	FLC_STATUS_JTAG_LOCK_WINDOW_Msk = 0x1        // Bit mask of JTAG_LOCK_WINDOW field.
	FLC_STATUS_JTAG_LOCK_WINDOW     = 0x1        // Bit JTAG_LOCK_WINDOW.
	FLC_STATUS_JTAG_LOCK_STATIC_Pos = 0x1        // Position of JTAG_LOCK_STATIC field.
	FLC_STATUS_JTAG_LOCK_STATIC_Msk = 0x2        // Bit mask of JTAG_LOCK_STATIC field.
	FLC_STATUS_JTAG_LOCK_STATIC     = 0x2        // Bit JTAG_LOCK_STATIC.
	FLC_STATUS_AUTO_LOCK_Pos        = 0x3        // Position of AUTO_LOCK field.
	FLC_STATUS_AUTO_LOCK_Msk        = 0x8        // Bit mask of AUTO_LOCK field.
	FLC_STATUS_AUTO_LOCK            = 0x8        // Bit AUTO_LOCK.
	FLC_STATUS_TRIM_UPDATE_DONE_Pos = 0x1d       // Position of TRIM_UPDATE_DONE field.
	FLC_STATUS_TRIM_UPDATE_DONE_Msk = 0x20000000 // Bit mask of TRIM_UPDATE_DONE field.
	FLC_STATUS_TRIM_UPDATE_DONE     = 0x20000000 // Bit TRIM_UPDATE_DONE.
	FLC_STATUS_INFO_BLOCK_VALID_Pos = 0x1e       // Position of INFO_BLOCK_VALID field.
	FLC_STATUS_INFO_BLOCK_VALID_Msk = 0x40000000 // Bit mask of INFO_BLOCK_VALID field.
	FLC_STATUS_INFO_BLOCK_VALID     = 0x40000000 // Bit INFO_BLOCK_VALID.

	// SECURITY: Flash Controller Security Settings
	FLC_SECURITY_DEBUG_DISABLE_Pos     = 0x0        // Position of DEBUG_DISABLE field.
	FLC_SECURITY_DEBUG_DISABLE_Msk     = 0xff       // Bit mask of DEBUG_DISABLE field.
	FLC_SECURITY_MASS_ERASE_LOCK_Pos   = 0x8        // Position of MASS_ERASE_LOCK field.
	FLC_SECURITY_MASS_ERASE_LOCK_Msk   = 0xf00      // Bit mask of MASS_ERASE_LOCK field.
	FLC_SECURITY_DISABLE_AHB_WR_Pos    = 0x10       // Position of DISABLE_AHB_WR field.
	FLC_SECURITY_DISABLE_AHB_WR_Msk    = 0xf0000    // Bit mask of DISABLE_AHB_WR field.
	FLC_SECURITY_FLC_SETTINGS_LOCK_Pos = 0x18       // Position of FLC_SETTINGS_LOCK field.
	FLC_SECURITY_FLC_SETTINGS_LOCK_Msk = 0xf000000  // Bit mask of FLC_SETTINGS_LOCK field.
	FLC_SECURITY_SECURITY_LOCK_Pos     = 0x1f       // Position of SECURITY_LOCK field.
	FLC_SECURITY_SECURITY_LOCK_Msk     = 0x80000000 // Bit mask of SECURITY_LOCK field.
	FLC_SECURITY_SECURITY_LOCK         = 0x80000000 // Bit SECURITY_LOCK.

	// BYPASS: Status Flags for DSB Operations
	FLC_BYPASS_DESTRUCT_BYPASS_ERASE_Pos    = 0x0 // Position of DESTRUCT_BYPASS_ERASE field.
	FLC_BYPASS_DESTRUCT_BYPASS_ERASE_Msk    = 0x1 // Bit mask of DESTRUCT_BYPASS_ERASE field.
	FLC_BYPASS_DESTRUCT_BYPASS_ERASE        = 0x1 // Bit DESTRUCT_BYPASS_ERASE.
	FLC_BYPASS_SUPERWIPE_ERASE_Pos          = 0x1 // Position of SUPERWIPE_ERASE field.
	FLC_BYPASS_SUPERWIPE_ERASE_Msk          = 0x2 // Bit mask of SUPERWIPE_ERASE field.
	FLC_BYPASS_SUPERWIPE_ERASE              = 0x2 // Bit SUPERWIPE_ERASE.
	FLC_BYPASS_DESTRUCT_BYPASS_COMPLETE_Pos = 0x2 // Position of DESTRUCT_BYPASS_COMPLETE field.
	FLC_BYPASS_DESTRUCT_BYPASS_COMPLETE_Msk = 0x4 // Bit mask of DESTRUCT_BYPASS_COMPLETE field.
	FLC_BYPASS_DESTRUCT_BYPASS_COMPLETE     = 0x4 // Bit DESTRUCT_BYPASS_COMPLETE.
	FLC_BYPASS_SUPERWIPE_COMPLETE_Pos       = 0x3 // Position of SUPERWIPE_COMPLETE field.
	FLC_BYPASS_SUPERWIPE_COMPLETE_Msk       = 0x8 // Bit mask of SUPERWIPE_COMPLETE field.
	FLC_BYPASS_SUPERWIPE_COMPLETE           = 0x8 // Bit SUPERWIPE_COMPLETE.

	// CTRL2: Flash Control Register 2
	FLC_CTRL2_FLASH_LVE_Pos       = 0x0    // Position of FLASH_LVE field.
	FLC_CTRL2_FLASH_LVE_Msk       = 0xff   // Bit mask of FLASH_LVE field.
	FLC_CTRL2_BYPASS_AHB_FAIL_Pos = 0x8    // Position of BYPASS_AHB_FAIL field.
	FLC_CTRL2_BYPASS_AHB_FAIL_Msk = 0xff00 // Bit mask of BYPASS_AHB_FAIL field.

	// INTFL1: Interrupt Flags Register 1
	FLC_INTFL1_SRAM_ADDR_WRAPPED_Pos  = 0x0  // Position of SRAM_ADDR_WRAPPED field.
	FLC_INTFL1_SRAM_ADDR_WRAPPED_Msk  = 0x1  // Bit mask of SRAM_ADDR_WRAPPED field.
	FLC_INTFL1_SRAM_ADDR_WRAPPED      = 0x1  // Bit SRAM_ADDR_WRAPPED.
	FLC_INTFL1_INVALID_FLASH_ADDR_Pos = 0x1  // Position of INVALID_FLASH_ADDR field.
	FLC_INTFL1_INVALID_FLASH_ADDR_Msk = 0x2  // Bit mask of INVALID_FLASH_ADDR field.
	FLC_INTFL1_INVALID_FLASH_ADDR     = 0x2  // Bit INVALID_FLASH_ADDR.
	FLC_INTFL1_FLASH_READ_LOCKED_Pos  = 0x2  // Position of FLASH_READ_LOCKED field.
	FLC_INTFL1_FLASH_READ_LOCKED_Msk  = 0x4  // Bit mask of FLASH_READ_LOCKED field.
	FLC_INTFL1_FLASH_READ_LOCKED      = 0x4  // Bit FLASH_READ_LOCKED.
	FLC_INTFL1_TRIM_UPDATE_DONE_Pos   = 0x3  // Position of TRIM_UPDATE_DONE field.
	FLC_INTFL1_TRIM_UPDATE_DONE_Msk   = 0x8  // Bit mask of TRIM_UPDATE_DONE field.
	FLC_INTFL1_TRIM_UPDATE_DONE       = 0x8  // Bit TRIM_UPDATE_DONE.
	FLC_INTFL1_FLC_STATE_DONE_Pos     = 0x4  // Position of FLC_STATE_DONE field.
	FLC_INTFL1_FLC_STATE_DONE_Msk     = 0x10 // Bit mask of FLC_STATE_DONE field.
	FLC_INTFL1_FLC_STATE_DONE         = 0x10 // Bit FLC_STATE_DONE.
	FLC_INTFL1_FLC_PROG_COMPLETE_Pos  = 0x5  // Position of FLC_PROG_COMPLETE field.
	FLC_INTFL1_FLC_PROG_COMPLETE_Msk  = 0x20 // Bit mask of FLC_PROG_COMPLETE field.
	FLC_INTFL1_FLC_PROG_COMPLETE      = 0x20 // Bit FLC_PROG_COMPLETE.

	// INTEN1: Interrupt Enable/Disable Register 1
	FLC_INTEN1_SRAM_ADDR_WRAPPED_Pos  = 0x0  // Position of SRAM_ADDR_WRAPPED field.
	FLC_INTEN1_SRAM_ADDR_WRAPPED_Msk  = 0x1  // Bit mask of SRAM_ADDR_WRAPPED field.
	FLC_INTEN1_SRAM_ADDR_WRAPPED      = 0x1  // Bit SRAM_ADDR_WRAPPED.
	FLC_INTEN1_INVALID_FLASH_ADDR_Pos = 0x1  // Position of INVALID_FLASH_ADDR field.
	FLC_INTEN1_INVALID_FLASH_ADDR_Msk = 0x2  // Bit mask of INVALID_FLASH_ADDR field.
	FLC_INTEN1_INVALID_FLASH_ADDR     = 0x2  // Bit INVALID_FLASH_ADDR.
	FLC_INTEN1_FLASH_READ_LOCKED_Pos  = 0x2  // Position of FLASH_READ_LOCKED field.
	FLC_INTEN1_FLASH_READ_LOCKED_Msk  = 0x4  // Bit mask of FLASH_READ_LOCKED field.
	FLC_INTEN1_FLASH_READ_LOCKED      = 0x4  // Bit FLASH_READ_LOCKED.
	FLC_INTEN1_TRIM_UPDATE_DONE_Pos   = 0x3  // Position of TRIM_UPDATE_DONE field.
	FLC_INTEN1_TRIM_UPDATE_DONE_Msk   = 0x8  // Bit mask of TRIM_UPDATE_DONE field.
	FLC_INTEN1_TRIM_UPDATE_DONE       = 0x8  // Bit TRIM_UPDATE_DONE.
	FLC_INTEN1_FLC_STATE_DONE_Pos     = 0x4  // Position of FLC_STATE_DONE field.
	FLC_INTEN1_FLC_STATE_DONE_Msk     = 0x10 // Bit mask of FLC_STATE_DONE field.
	FLC_INTEN1_FLC_STATE_DONE         = 0x10 // Bit FLC_STATE_DONE.
	FLC_INTEN1_FLC_PROG_COMPLETE_Pos  = 0x5  // Position of FLC_PROG_COMPLETE field.
	FLC_INTEN1_FLC_PROG_COMPLETE_Msk  = 0x20 // Bit mask of FLC_PROG_COMPLETE field.
	FLC_INTEN1_FLC_PROG_COMPLETE      = 0x20 // Bit FLC_PROG_COMPLETE.
)

// Bitfields for ICC: Instruction Cache Controller
const (
	// ID: Device ID Register
	ICC_ID_RTL_VERSION_Pos = 0x0    // Position of RTL_VERSION field.
	ICC_ID_RTL_VERSION_Msk = 0x3f   // Bit mask of RTL_VERSION field.
	ICC_ID_PART_NUM_Pos    = 0x6    // Position of PART_NUM field.
	ICC_ID_PART_NUM_Msk    = 0x3c0  // Bit mask of PART_NUM field.
	ICC_ID_CACHE_ID_Pos    = 0xa    // Position of CACHE_ID field.
	ICC_ID_CACHE_ID_Msk    = 0xfc00 // Bit mask of CACHE_ID field.

	// MEM_CFG: Memory Configuration Register
	ICC_MEM_CFG_CACHE_SIZE_Pos       = 0x0        // Position of CACHE_SIZE field.
	ICC_MEM_CFG_CACHE_SIZE_Msk       = 0xffff     // Bit mask of CACHE_SIZE field.
	ICC_MEM_CFG_MAIN_MEMORY_SIZE_Pos = 0x10       // Position of MAIN_MEMORY_SIZE field.
	ICC_MEM_CFG_MAIN_MEMORY_SIZE_Msk = 0xffff0000 // Bit mask of MAIN_MEMORY_SIZE field.

	// CTRL_STAT: Control and Status
	ICC_CTRL_STAT_ENABLE_Pos = 0x0     // Position of ENABLE field.
	ICC_CTRL_STAT_ENABLE_Msk = 0x1     // Bit mask of ENABLE field.
	ICC_CTRL_STAT_ENABLE     = 0x1     // Bit ENABLE.
	ICC_CTRL_STAT_READY_Pos  = 0x10    // Position of READY field.
	ICC_CTRL_STAT_READY_Msk  = 0x10000 // Bit mask of READY field.
	ICC_CTRL_STAT_READY      = 0x10000 // Bit READY.
)

// Bitfields for SPIX: SPI XIP Interface
const (
	// MASTER_CFG: SPIX Master Configuration
	SPI_XIP_MASTER_CFG_SPI_MODE_Pos                    = 0x0       // Position of SPI_MODE field.
	SPI_XIP_MASTER_CFG_SPI_MODE_Msk                    = 0x3       // Bit mask of SPI_MODE field.
	SPI_XIP_MASTER_CFG_SPI_MODE_SCK_HI_SAMPLE_RISING   = 0x0       // SCK is active high, data is sampled on clock rising edge.
	SPI_XIP_MASTER_CFG_SPI_MODE_SCK_LO_SAMPLE_FALLING  = 0x3       // SCK is active low, data is sampled on clock rising edge.
	SPI_XIP_MASTER_CFG_SS_ACT_LO_Pos                   = 0x2       // Position of SS_ACT_LO field.
	SPI_XIP_MASTER_CFG_SS_ACT_LO_Msk                   = 0x4       // Bit mask of SS_ACT_LO field.
	SPI_XIP_MASTER_CFG_SS_ACT_LO                       = 0x4       // Bit SS_ACT_LO.
	SPI_XIP_MASTER_CFG_SS_ACT_LO_ACTIVE_HIGH           = 0x0       // Enabled slave select (SS) is active high.
	SPI_XIP_MASTER_CFG_SS_ACT_LO_ACTIVE_LOW            = 0x1       // Enabled slave select (SS) is active low.
	SPI_XIP_MASTER_CFG_ALT_TIMING_EN_Pos               = 0x3       // Position of ALT_TIMING_EN field.
	SPI_XIP_MASTER_CFG_ALT_TIMING_EN_Msk               = 0x8       // Bit mask of ALT_TIMING_EN field.
	SPI_XIP_MASTER_CFG_ALT_TIMING_EN                   = 0x8       // Bit ALT_TIMING_EN.
	SPI_XIP_MASTER_CFG_ALT_TIMING_EN_DISABLED          = 0x0       // Alternate timing is disabled.
	SPI_XIP_MASTER_CFG_ALT_TIMING_EN_ENABLED_AS_NEEDED = 0x1       // Alternate timing will be enabled automatically when needed.
	SPI_XIP_MASTER_CFG_SLAVE_SEL_Pos                   = 0x4       // Position of SLAVE_SEL field.
	SPI_XIP_MASTER_CFG_SLAVE_SEL_Msk                   = 0x70      // Bit mask of SLAVE_SEL field.
	SPI_XIP_MASTER_CFG_SCK_HI_CLK_Pos                  = 0x8       // Position of SCK_HI_CLK field.
	SPI_XIP_MASTER_CFG_SCK_HI_CLK_Msk                  = 0xf00     // Bit mask of SCK_HI_CLK field.
	SPI_XIP_MASTER_CFG_SCK_LO_CLK_Pos                  = 0xc       // Position of SCK_LO_CLK field.
	SPI_XIP_MASTER_CFG_SCK_LO_CLK_Msk                  = 0xf000    // Bit mask of SCK_LO_CLK field.
	SPI_XIP_MASTER_CFG_ACT_DELAY_Pos                   = 0x10      // Position of ACT_DELAY field.
	SPI_XIP_MASTER_CFG_ACT_DELAY_Msk                   = 0x30000   // Bit mask of ACT_DELAY field.
	SPI_XIP_MASTER_CFG_ACT_DELAY_OFF                   = 0x0       // No SS Active timing delay enabled.
	SPI_XIP_MASTER_CFG_ACT_DELAY_FOR_2_MOD_CLK         = 0x1       // SS Active timing delay of 2 SPIX module clock cycles.
	SPI_XIP_MASTER_CFG_ACT_DELAY_FOR_4_MOD_CLK         = 0x2       // SS Active timing delay of 4 SPIX module clock cycles.
	SPI_XIP_MASTER_CFG_ACT_DELAY_FOR_8_MOD_CLK         = 0x3       // SS Active timing delay of 8 SPIX module clock cycles.
	SPI_XIP_MASTER_CFG_INACT_DELAY_Pos                 = 0x12      // Position of INACT_DELAY field.
	SPI_XIP_MASTER_CFG_INACT_DELAY_Msk                 = 0xc0000   // Bit mask of INACT_DELAY field.
	SPI_XIP_MASTER_CFG_INACT_DELAY_OFF                 = 0x0       // No SS Active timing delay enabled.
	SPI_XIP_MASTER_CFG_INACT_DELAY_FOR_2_MOD_CLK       = 0x1       // SS Active timing delay of 2 SPIX module clock cycles.
	SPI_XIP_MASTER_CFG_INACT_DELAY_FOR_4_MOD_CLK       = 0x2       // SS Active timing delay of 4 SPIX module clock cycles.
	SPI_XIP_MASTER_CFG_INACT_DELAY_FOR_8_MOD_CLK       = 0x3       // SS Active timing delay of 8 SPIX module clock cycles.
	SPI_XIP_MASTER_CFG_ALT_SCK_HI_CLK_Pos              = 0x14      // Position of ALT_SCK_HI_CLK field.
	SPI_XIP_MASTER_CFG_ALT_SCK_HI_CLK_Msk              = 0xf00000  // Bit mask of ALT_SCK_HI_CLK field.
	SPI_XIP_MASTER_CFG_ALT_SCK_LO_CLK_Pos              = 0x18      // Position of ALT_SCK_LO_CLK field.
	SPI_XIP_MASTER_CFG_ALT_SCK_LO_CLK_Msk              = 0xf000000 // Bit mask of ALT_SCK_LO_CLK field.

	// FETCH_CTRL: SPIX Fetch Control
	SPI_XIP_FETCH_CTRL_CMD_VALUE_Pos      = 0x0    // Position of CMD_VALUE field.
	SPI_XIP_FETCH_CTRL_CMD_VALUE_Msk      = 0xff   // Bit mask of CMD_VALUE field.
	SPI_XIP_FETCH_CTRL_CMD_WIDTH_Pos      = 0x8    // Position of CMD_WIDTH field.
	SPI_XIP_FETCH_CTRL_CMD_WIDTH_Msk      = 0x300  // Bit mask of CMD_WIDTH field.
	SPI_XIP_FETCH_CTRL_CMD_WIDTH_SINGLE   = 0x0    // Single I/O used for Tx/Rx.
	SPI_XIP_FETCH_CTRL_CMD_WIDTH_DUAL_IO  = 0x1    // Dual I/O lines used for Tx/Rx.
	SPI_XIP_FETCH_CTRL_CMD_WIDTH_QUAD_IO  = 0x2    // Quad I/O lines used for Tx/Rx.
	SPI_XIP_FETCH_CTRL_ADDR_WIDTH_Pos     = 0xa    // Position of ADDR_WIDTH field.
	SPI_XIP_FETCH_CTRL_ADDR_WIDTH_Msk     = 0xc00  // Bit mask of ADDR_WIDTH field.
	SPI_XIP_FETCH_CTRL_ADDR_WIDTH_SINGLE  = 0x0    // Single I/O used for Tx/Rx.
	SPI_XIP_FETCH_CTRL_ADDR_WIDTH_DUAL_IO = 0x1    // Dual I/O lines used for Tx/Rx.
	SPI_XIP_FETCH_CTRL_ADDR_WIDTH_QUAD_IO = 0x2    // Quad I/O lines used for Tx/Rx.
	SPI_XIP_FETCH_CTRL_DATA_WIDTH_Pos     = 0xc    // Position of DATA_WIDTH field.
	SPI_XIP_FETCH_CTRL_DATA_WIDTH_Msk     = 0x3000 // Bit mask of DATA_WIDTH field.
	SPI_XIP_FETCH_CTRL_DATA_WIDTH_SINGLE  = 0x0    // Single I/O used for Tx/Rx.
	SPI_XIP_FETCH_CTRL_DATA_WIDTH_DUAL_IO = 0x1    // Dual I/O lines used for Tx/Rx.
	SPI_XIP_FETCH_CTRL_DATA_WIDTH_QUAD_IO = 0x2    // Quad I/O lines used for Tx/Rx.

	// MODE_CTRL: SPIX Mode Control
	SPI_XIP_MODE_CTRL_MODE_CLOCKS_Pos = 0x0   // Position of MODE_CLOCKS field.
	SPI_XIP_MODE_CTRL_MODE_CLOCKS_Msk = 0xf   // Bit mask of MODE_CLOCKS field.
	SPI_XIP_MODE_CTRL_NO_CMD_MODE_Pos = 0x8   // Position of NO_CMD_MODE field.
	SPI_XIP_MODE_CTRL_NO_CMD_MODE_Msk = 0x100 // Bit mask of NO_CMD_MODE field.
	SPI_XIP_MODE_CTRL_NO_CMD_MODE     = 0x100 // Bit NO_CMD_MODE.

	// MODE_DATA: SPIX Mode Data
	SPI_XIP_MODE_DATA_MODE_DATA_BITS_Pos = 0x0        // Position of MODE_DATA_BITS field.
	SPI_XIP_MODE_DATA_MODE_DATA_BITS_Msk = 0xffff     // Bit mask of MODE_DATA_BITS field.
	SPI_XIP_MODE_DATA_MODE_DATA_OE_Pos   = 0x10       // Position of MODE_DATA_OE field.
	SPI_XIP_MODE_DATA_MODE_DATA_OE_Msk   = 0xffff0000 // Bit mask of MODE_DATA_OE field.
)

// Bitfields for PMU0: Peripheral Management Unit
const (
	// CFG: Channel Configuration
	PMU_CFG_ENABLE_Pos     = 0x0        // Position of ENABLE field.
	PMU_CFG_ENABLE_Msk     = 0x1        // Bit mask of ENABLE field.
	PMU_CFG_ENABLE         = 0x1        // Bit ENABLE.
	PMU_CFG_LL_STOPPED_Pos = 0x2        // Position of LL_STOPPED field.
	PMU_CFG_LL_STOPPED_Msk = 0x4        // Bit mask of LL_STOPPED field.
	PMU_CFG_LL_STOPPED     = 0x4        // Bit LL_STOPPED.
	PMU_CFG_MANUAL_Pos     = 0x3        // Position of MANUAL field.
	PMU_CFG_MANUAL_Msk     = 0x8        // Bit mask of MANUAL field.
	PMU_CFG_MANUAL         = 0x8        // Bit MANUAL.
	PMU_CFG_BUS_ERROR_Pos  = 0x4        // Position of BUS_ERROR field.
	PMU_CFG_BUS_ERROR_Msk  = 0x10       // Bit mask of BUS_ERROR field.
	PMU_CFG_BUS_ERROR      = 0x10       // Bit BUS_ERROR.
	PMU_CFG_TO_STAT_Pos    = 0x6        // Position of TO_STAT field.
	PMU_CFG_TO_STAT_Msk    = 0x40       // Bit mask of TO_STAT field.
	PMU_CFG_TO_STAT        = 0x40       // Bit TO_STAT.
	PMU_CFG_TO_SEL_Pos     = 0xb        // Position of TO_SEL field.
	PMU_CFG_TO_SEL_Msk     = 0x3800     // Bit mask of TO_SEL field.
	PMU_CFG_PS_SEL_Pos     = 0xe        // Position of PS_SEL field.
	PMU_CFG_PS_SEL_Msk     = 0xc000     // Bit mask of PS_SEL field.
	PMU_CFG_INTERRUPT_Pos  = 0x10       // Position of INTERRUPT field.
	PMU_CFG_INTERRUPT_Msk  = 0x10000    // Bit mask of INTERRUPT field.
	PMU_CFG_INTERRUPT      = 0x10000    // Bit INTERRUPT.
	PMU_CFG_INT_EN_Pos     = 0x11       // Position of INT_EN field.
	PMU_CFG_INT_EN_Msk     = 0x20000    // Bit mask of INT_EN field.
	PMU_CFG_INT_EN         = 0x20000    // Bit INT_EN.
	PMU_CFG_BURST_SIZE_Pos = 0x18       // Position of BURST_SIZE field.
	PMU_CFG_BURST_SIZE_Msk = 0x1f000000 // Bit mask of BURST_SIZE field.

	// LOOP: Channel Loop Counters
	PMU_LOOP_COUNTER_0_Pos = 0x0        // Position of COUNTER_0 field.
	PMU_LOOP_COUNTER_0_Msk = 0xffff     // Bit mask of COUNTER_0 field.
	PMU_LOOP_COUNTER_1_Pos = 0x10       // Position of COUNTER_1 field.
	PMU_LOOP_COUNTER_1_Msk = 0xffff0000 // Bit mask of COUNTER_1 field.
)

// Bitfields for USB: USB Device Controller
const (
	// CN: USB Control Register
	USB_CN_USB_EN_Pos = 0x0 // Position of USB_EN field.
	USB_CN_USB_EN_Msk = 0x1 // Bit mask of USB_EN field.
	USB_CN_USB_EN     = 0x1 // Bit USB_EN.

	// DEV_ADDR: USB Device Address Register
	USB_DEV_ADDR_DEV_ADDR_Pos = 0x0  // Position of DEV_ADDR field.
	USB_DEV_ADDR_DEV_ADDR_Msk = 0x7f // Bit mask of DEV_ADDR field.

	// DEV_CN: USB Device Control Register
	USB_DEV_CN_SIGRWU_Pos    = 0x2   // Position of SIGRWU field.
	USB_DEV_CN_SIGRWU_Msk    = 0x4   // Bit mask of SIGRWU field.
	USB_DEV_CN_SIGRWU        = 0x4   // Bit SIGRWU.
	USB_DEV_CN_CONNECT_Pos   = 0x3   // Position of CONNECT field.
	USB_DEV_CN_CONNECT_Msk   = 0x8   // Bit mask of CONNECT field.
	USB_DEV_CN_CONNECT       = 0x8   // Bit CONNECT.
	USB_DEV_CN_ULPM_Pos      = 0x4   // Position of ULPM field.
	USB_DEV_CN_ULPM_Msk      = 0x10  // Bit mask of ULPM field.
	USB_DEV_CN_ULPM          = 0x10  // Bit ULPM.
	USB_DEV_CN_URST_Pos      = 0x5   // Position of URST field.
	USB_DEV_CN_URST_Msk      = 0x20  // Bit mask of URST field.
	USB_DEV_CN_URST          = 0x20  // Bit URST.
	USB_DEV_CN_VBGATE_Pos    = 0x6   // Position of VBGATE field.
	USB_DEV_CN_VBGATE_Msk    = 0x40  // Bit mask of VBGATE field.
	USB_DEV_CN_VBGATE        = 0x40  // Bit VBGATE.
	USB_DEV_CN_FIFO_MODE_Pos = 0x9   // Position of FIFO_MODE field.
	USB_DEV_CN_FIFO_MODE_Msk = 0x200 // Bit mask of FIFO_MODE field.
	USB_DEV_CN_FIFO_MODE     = 0x200 // Bit FIFO_MODE.

	// DEV_INTFL: USB Device Interrupt
	USB_DEV_INTFL_DPACT_Pos   = 0x0     // Position of DPACT field.
	USB_DEV_INTFL_DPACT_Msk   = 0x1     // Bit mask of DPACT field.
	USB_DEV_INTFL_DPACT       = 0x1     // Bit DPACT.
	USB_DEV_INTFL_RWU_DN_Pos  = 0x1     // Position of RWU_DN field.
	USB_DEV_INTFL_RWU_DN_Msk  = 0x2     // Bit mask of RWU_DN field.
	USB_DEV_INTFL_RWU_DN      = 0x2     // Bit RWU_DN.
	USB_DEV_INTFL_BACT_Pos    = 0x2     // Position of BACT field.
	USB_DEV_INTFL_BACT_Msk    = 0x4     // Bit mask of BACT field.
	USB_DEV_INTFL_BACT        = 0x4     // Bit BACT.
	USB_DEV_INTFL_BRST_Pos    = 0x3     // Position of BRST field.
	USB_DEV_INTFL_BRST_Msk    = 0x8     // Bit mask of BRST field.
	USB_DEV_INTFL_BRST        = 0x8     // Bit BRST.
	USB_DEV_INTFL_SUSP_Pos    = 0x4     // Position of SUSP field.
	USB_DEV_INTFL_SUSP_Msk    = 0x10    // Bit mask of SUSP field.
	USB_DEV_INTFL_SUSP        = 0x10    // Bit SUSP.
	USB_DEV_INTFL_NO_VBUS_Pos = 0x5     // Position of NO_VBUS field.
	USB_DEV_INTFL_NO_VBUS_Msk = 0x20    // Bit mask of NO_VBUS field.
	USB_DEV_INTFL_NO_VBUS     = 0x20    // Bit NO_VBUS.
	USB_DEV_INTFL_VBUS_Pos    = 0x6     // Position of VBUS field.
	USB_DEV_INTFL_VBUS_Msk    = 0x40    // Bit mask of VBUS field.
	USB_DEV_INTFL_VBUS        = 0x40    // Bit VBUS.
	USB_DEV_INTFL_BRST_DN_Pos = 0x7     // Position of BRST_DN field.
	USB_DEV_INTFL_BRST_DN_Msk = 0x80    // Bit mask of BRST_DN field.
	USB_DEV_INTFL_BRST_DN     = 0x80    // Bit BRST_DN.
	USB_DEV_INTFL_SETUP_Pos   = 0x8     // Position of SETUP field.
	USB_DEV_INTFL_SETUP_Msk   = 0x100   // Bit mask of SETUP field.
	USB_DEV_INTFL_SETUP       = 0x100   // Bit SETUP.
	USB_DEV_INTFL_EP_IN_Pos   = 0x9     // Position of EP_IN field.
	USB_DEV_INTFL_EP_IN_Msk   = 0x200   // Bit mask of EP_IN field.
	USB_DEV_INTFL_EP_IN       = 0x200   // Bit EP_IN.
	USB_DEV_INTFL_EP_OUT_Pos  = 0xa     // Position of EP_OUT field.
	USB_DEV_INTFL_EP_OUT_Msk  = 0x400   // Bit mask of EP_OUT field.
	USB_DEV_INTFL_EP_OUT      = 0x400   // Bit EP_OUT.
	USB_DEV_INTFL_EP_NAK_Pos  = 0xb     // Position of EP_NAK field.
	USB_DEV_INTFL_EP_NAK_Msk  = 0x800   // Bit mask of EP_NAK field.
	USB_DEV_INTFL_EP_NAK      = 0x800   // Bit EP_NAK.
	USB_DEV_INTFL_DMA_ERR_Pos = 0xc     // Position of DMA_ERR field.
	USB_DEV_INTFL_DMA_ERR_Msk = 0x1000  // Bit mask of DMA_ERR field.
	USB_DEV_INTFL_DMA_ERR     = 0x1000  // Bit DMA_ERR.
	USB_DEV_INTFL_BUF_OVR_Pos = 0xd     // Position of BUF_OVR field.
	USB_DEV_INTFL_BUF_OVR_Msk = 0x2000  // Bit mask of BUF_OVR field.
	USB_DEV_INTFL_BUF_OVR     = 0x2000  // Bit BUF_OVR.
	USB_DEV_INTFL_VBUS_ST_Pos = 0x10    // Position of VBUS_ST field.
	USB_DEV_INTFL_VBUS_ST_Msk = 0x10000 // Bit mask of VBUS_ST field.
	USB_DEV_INTFL_VBUS_ST     = 0x10000 // Bit VBUS_ST.

	// DEV_INTEN: USB Device Interrupt Enable
	USB_DEV_INTEN_DPACT_Pos   = 0x0    // Position of DPACT field.
	USB_DEV_INTEN_DPACT_Msk   = 0x1    // Bit mask of DPACT field.
	USB_DEV_INTEN_DPACT       = 0x1    // Bit DPACT.
	USB_DEV_INTEN_RWU_DN_Pos  = 0x1    // Position of RWU_DN field.
	USB_DEV_INTEN_RWU_DN_Msk  = 0x2    // Bit mask of RWU_DN field.
	USB_DEV_INTEN_RWU_DN      = 0x2    // Bit RWU_DN.
	USB_DEV_INTEN_BACT_Pos    = 0x2    // Position of BACT field.
	USB_DEV_INTEN_BACT_Msk    = 0x4    // Bit mask of BACT field.
	USB_DEV_INTEN_BACT        = 0x4    // Bit BACT.
	USB_DEV_INTEN_BRST_Pos    = 0x3    // Position of BRST field.
	USB_DEV_INTEN_BRST_Msk    = 0x8    // Bit mask of BRST field.
	USB_DEV_INTEN_BRST        = 0x8    // Bit BRST.
	USB_DEV_INTEN_SUSP_Pos    = 0x4    // Position of SUSP field.
	USB_DEV_INTEN_SUSP_Msk    = 0x10   // Bit mask of SUSP field.
	USB_DEV_INTEN_SUSP        = 0x10   // Bit SUSP.
	USB_DEV_INTEN_NO_VBUS_Pos = 0x5    // Position of NO_VBUS field.
	USB_DEV_INTEN_NO_VBUS_Msk = 0x20   // Bit mask of NO_VBUS field.
	USB_DEV_INTEN_NO_VBUS     = 0x20   // Bit NO_VBUS.
	USB_DEV_INTEN_VBUS_Pos    = 0x6    // Position of VBUS field.
	USB_DEV_INTEN_VBUS_Msk    = 0x40   // Bit mask of VBUS field.
	USB_DEV_INTEN_VBUS        = 0x40   // Bit VBUS.
	USB_DEV_INTEN_BRST_DN_Pos = 0x7    // Position of BRST_DN field.
	USB_DEV_INTEN_BRST_DN_Msk = 0x80   // Bit mask of BRST_DN field.
	USB_DEV_INTEN_BRST_DN     = 0x80   // Bit BRST_DN.
	USB_DEV_INTEN_SETUP_Pos   = 0x8    // Position of SETUP field.
	USB_DEV_INTEN_SETUP_Msk   = 0x100  // Bit mask of SETUP field.
	USB_DEV_INTEN_SETUP       = 0x100  // Bit SETUP.
	USB_DEV_INTEN_EP_IN_Pos   = 0x9    // Position of EP_IN field.
	USB_DEV_INTEN_EP_IN_Msk   = 0x200  // Bit mask of EP_IN field.
	USB_DEV_INTEN_EP_IN       = 0x200  // Bit EP_IN.
	USB_DEV_INTEN_EP_OUT_Pos  = 0xa    // Position of EP_OUT field.
	USB_DEV_INTEN_EP_OUT_Msk  = 0x400  // Bit mask of EP_OUT field.
	USB_DEV_INTEN_EP_OUT      = 0x400  // Bit EP_OUT.
	USB_DEV_INTEN_EP_NAK_Pos  = 0xb    // Position of EP_NAK field.
	USB_DEV_INTEN_EP_NAK_Msk  = 0x800  // Bit mask of EP_NAK field.
	USB_DEV_INTEN_EP_NAK      = 0x800  // Bit EP_NAK.
	USB_DEV_INTEN_DMA_ERR_Pos = 0xc    // Position of DMA_ERR field.
	USB_DEV_INTEN_DMA_ERR_Msk = 0x1000 // Bit mask of DMA_ERR field.
	USB_DEV_INTEN_DMA_ERR     = 0x1000 // Bit DMA_ERR.
	USB_DEV_INTEN_BUF_OVR_Pos = 0xd    // Position of BUF_OVR field.
	USB_DEV_INTEN_BUF_OVR_Msk = 0x2000 // Bit mask of BUF_OVR field.
	USB_DEV_INTEN_BUF_OVR     = 0x2000 // Bit BUF_OVR.

	// EP_BASE: USB Endpoint Descriptor Table Base Address
	USB_EP_BASE_EP_BASE_Pos = 0x9        // Position of EP_BASE field.
	USB_EP_BASE_EP_BASE_Msk = 0xfffffe00 // Bit mask of EP_BASE field.

	// CUR_BUF: USB Current Endpoint Buffer Register
	USB_CUR_BUF_OUT_BUF_Pos = 0x0      // Position of OUT_BUF field.
	USB_CUR_BUF_OUT_BUF_Msk = 0xff     // Bit mask of OUT_BUF field.
	USB_CUR_BUF_IN_BUF_Pos  = 0x10     // Position of IN_BUF field.
	USB_CUR_BUF_IN_BUF_Msk  = 0xff0000 // Bit mask of IN_BUF field.

	// IN_OWNER: USB IN Endpoint Buffer Owner Register
	USB_IN_OWNER_BUF0_OWNER_Pos = 0x0      // Position of BUF0_OWNER field.
	USB_IN_OWNER_BUF0_OWNER_Msk = 0xff     // Bit mask of BUF0_OWNER field.
	USB_IN_OWNER_BUF1_OWNER_Pos = 0x10     // Position of BUF1_OWNER field.
	USB_IN_OWNER_BUF1_OWNER_Msk = 0xff0000 // Bit mask of BUF1_OWNER field.

	// OUT_OWNER: USB OUT Endpoint Buffer Owner Register
	USB_OUT_OWNER_BUF0_OWNER_Pos = 0x0      // Position of BUF0_OWNER field.
	USB_OUT_OWNER_BUF0_OWNER_Msk = 0xff     // Bit mask of BUF0_OWNER field.
	USB_OUT_OWNER_BUF1_OWNER_Pos = 0x10     // Position of BUF1_OWNER field.
	USB_OUT_OWNER_BUF1_OWNER_Msk = 0xff0000 // Bit mask of BUF1_OWNER field.

	// IN_INT: USB IN Endpoint Buffer Available Interrupt
	USB_IN_INT_INBAV0_Pos = 0x0  // Position of INBAV0 field.
	USB_IN_INT_INBAV0_Msk = 0x1  // Bit mask of INBAV0 field.
	USB_IN_INT_INBAV0     = 0x1  // Bit INBAV0.
	USB_IN_INT_INBAV1_Pos = 0x1  // Position of INBAV1 field.
	USB_IN_INT_INBAV1_Msk = 0x2  // Bit mask of INBAV1 field.
	USB_IN_INT_INBAV1     = 0x2  // Bit INBAV1.
	USB_IN_INT_INBAV2_Pos = 0x2  // Position of INBAV2 field.
	USB_IN_INT_INBAV2_Msk = 0x4  // Bit mask of INBAV2 field.
	USB_IN_INT_INBAV2     = 0x4  // Bit INBAV2.
	USB_IN_INT_INBAV3_Pos = 0x3  // Position of INBAV3 field.
	USB_IN_INT_INBAV3_Msk = 0x8  // Bit mask of INBAV3 field.
	USB_IN_INT_INBAV3     = 0x8  // Bit INBAV3.
	USB_IN_INT_INBAV4_Pos = 0x4  // Position of INBAV4 field.
	USB_IN_INT_INBAV4_Msk = 0x10 // Bit mask of INBAV4 field.
	USB_IN_INT_INBAV4     = 0x10 // Bit INBAV4.
	USB_IN_INT_INBAV5_Pos = 0x5  // Position of INBAV5 field.
	USB_IN_INT_INBAV5_Msk = 0x20 // Bit mask of INBAV5 field.
	USB_IN_INT_INBAV5     = 0x20 // Bit INBAV5.
	USB_IN_INT_INBAV6_Pos = 0x6  // Position of INBAV6 field.
	USB_IN_INT_INBAV6_Msk = 0x40 // Bit mask of INBAV6 field.
	USB_IN_INT_INBAV6     = 0x40 // Bit INBAV6.
	USB_IN_INT_INBAV7_Pos = 0x7  // Position of INBAV7 field.
	USB_IN_INT_INBAV7_Msk = 0x80 // Bit mask of INBAV7 field.
	USB_IN_INT_INBAV7     = 0x80 // Bit INBAV7.

	// OUT_INT: USB OUT Endpoint Data Available Interrupt
	USB_OUT_INT_OUTDAV0_Pos = 0x0  // Position of OUTDAV0 field.
	USB_OUT_INT_OUTDAV0_Msk = 0x1  // Bit mask of OUTDAV0 field.
	USB_OUT_INT_OUTDAV0     = 0x1  // Bit OUTDAV0.
	USB_OUT_INT_OUTDAV1_Pos = 0x1  // Position of OUTDAV1 field.
	USB_OUT_INT_OUTDAV1_Msk = 0x2  // Bit mask of OUTDAV1 field.
	USB_OUT_INT_OUTDAV1     = 0x2  // Bit OUTDAV1.
	USB_OUT_INT_OUTDAV2_Pos = 0x2  // Position of OUTDAV2 field.
	USB_OUT_INT_OUTDAV2_Msk = 0x4  // Bit mask of OUTDAV2 field.
	USB_OUT_INT_OUTDAV2     = 0x4  // Bit OUTDAV2.
	USB_OUT_INT_OUTDAV3_Pos = 0x3  // Position of OUTDAV3 field.
	USB_OUT_INT_OUTDAV3_Msk = 0x8  // Bit mask of OUTDAV3 field.
	USB_OUT_INT_OUTDAV3     = 0x8  // Bit OUTDAV3.
	USB_OUT_INT_OUTDAV4_Pos = 0x4  // Position of OUTDAV4 field.
	USB_OUT_INT_OUTDAV4_Msk = 0x10 // Bit mask of OUTDAV4 field.
	USB_OUT_INT_OUTDAV4     = 0x10 // Bit OUTDAV4.
	USB_OUT_INT_OUTDAV5_Pos = 0x5  // Position of OUTDAV5 field.
	USB_OUT_INT_OUTDAV5_Msk = 0x20 // Bit mask of OUTDAV5 field.
	USB_OUT_INT_OUTDAV5     = 0x20 // Bit OUTDAV5.
	USB_OUT_INT_OUTDAV6_Pos = 0x6  // Position of OUTDAV6 field.
	USB_OUT_INT_OUTDAV6_Msk = 0x40 // Bit mask of OUTDAV6 field.
	USB_OUT_INT_OUTDAV6     = 0x40 // Bit OUTDAV6.
	USB_OUT_INT_OUTDAV7_Pos = 0x7  // Position of OUTDAV7 field.
	USB_OUT_INT_OUTDAV7_Msk = 0x80 // Bit mask of OUTDAV7 field.
	USB_OUT_INT_OUTDAV7     = 0x80 // Bit OUTDAV7.

	// NAK_INT: USB IN Endpoint NAK Interrupt
	USB_NAK_INT_NAK0_Pos = 0x0  // Position of NAK0 field.
	USB_NAK_INT_NAK0_Msk = 0x1  // Bit mask of NAK0 field.
	USB_NAK_INT_NAK0     = 0x1  // Bit NAK0.
	USB_NAK_INT_NAK1_Pos = 0x1  // Position of NAK1 field.
	USB_NAK_INT_NAK1_Msk = 0x2  // Bit mask of NAK1 field.
	USB_NAK_INT_NAK1     = 0x2  // Bit NAK1.
	USB_NAK_INT_NAK2_Pos = 0x2  // Position of NAK2 field.
	USB_NAK_INT_NAK2_Msk = 0x4  // Bit mask of NAK2 field.
	USB_NAK_INT_NAK2     = 0x4  // Bit NAK2.
	USB_NAK_INT_NAK3_Pos = 0x3  // Position of NAK3 field.
	USB_NAK_INT_NAK3_Msk = 0x8  // Bit mask of NAK3 field.
	USB_NAK_INT_NAK3     = 0x8  // Bit NAK3.
	USB_NAK_INT_NAK4_Pos = 0x4  // Position of NAK4 field.
	USB_NAK_INT_NAK4_Msk = 0x10 // Bit mask of NAK4 field.
	USB_NAK_INT_NAK4     = 0x10 // Bit NAK4.
	USB_NAK_INT_NAK5_Pos = 0x5  // Position of NAK5 field.
	USB_NAK_INT_NAK5_Msk = 0x20 // Bit mask of NAK5 field.
	USB_NAK_INT_NAK5     = 0x20 // Bit NAK5.
	USB_NAK_INT_NAK6_Pos = 0x6  // Position of NAK6 field.
	USB_NAK_INT_NAK6_Msk = 0x40 // Bit mask of NAK6 field.
	USB_NAK_INT_NAK6     = 0x40 // Bit NAK6.
	USB_NAK_INT_NAK7_Pos = 0x7  // Position of NAK7 field.
	USB_NAK_INT_NAK7_Msk = 0x80 // Bit mask of NAK7 field.
	USB_NAK_INT_NAK7     = 0x80 // Bit NAK7.

	// DMA_ERR_INT: USB DMA Error Interrupt
	USB_DMA_ERR_INT_DMA_ERR0_Pos = 0x0  // Position of DMA_ERR0 field.
	USB_DMA_ERR_INT_DMA_ERR0_Msk = 0x1  // Bit mask of DMA_ERR0 field.
	USB_DMA_ERR_INT_DMA_ERR0     = 0x1  // Bit DMA_ERR0.
	USB_DMA_ERR_INT_DMA_ERR1_Pos = 0x1  // Position of DMA_ERR1 field.
	USB_DMA_ERR_INT_DMA_ERR1_Msk = 0x2  // Bit mask of DMA_ERR1 field.
	USB_DMA_ERR_INT_DMA_ERR1     = 0x2  // Bit DMA_ERR1.
	USB_DMA_ERR_INT_DMA_ERR2_Pos = 0x2  // Position of DMA_ERR2 field.
	USB_DMA_ERR_INT_DMA_ERR2_Msk = 0x4  // Bit mask of DMA_ERR2 field.
	USB_DMA_ERR_INT_DMA_ERR2     = 0x4  // Bit DMA_ERR2.
	USB_DMA_ERR_INT_DMA_ERR3_Pos = 0x3  // Position of DMA_ERR3 field.
	USB_DMA_ERR_INT_DMA_ERR3_Msk = 0x8  // Bit mask of DMA_ERR3 field.
	USB_DMA_ERR_INT_DMA_ERR3     = 0x8  // Bit DMA_ERR3.
	USB_DMA_ERR_INT_DMA_ERR4_Pos = 0x4  // Position of DMA_ERR4 field.
	USB_DMA_ERR_INT_DMA_ERR4_Msk = 0x10 // Bit mask of DMA_ERR4 field.
	USB_DMA_ERR_INT_DMA_ERR4     = 0x10 // Bit DMA_ERR4.
	USB_DMA_ERR_INT_DMA_ERR5_Pos = 0x5  // Position of DMA_ERR5 field.
	USB_DMA_ERR_INT_DMA_ERR5_Msk = 0x20 // Bit mask of DMA_ERR5 field.
	USB_DMA_ERR_INT_DMA_ERR5     = 0x20 // Bit DMA_ERR5.
	USB_DMA_ERR_INT_DMA_ERR6_Pos = 0x6  // Position of DMA_ERR6 field.
	USB_DMA_ERR_INT_DMA_ERR6_Msk = 0x40 // Bit mask of DMA_ERR6 field.
	USB_DMA_ERR_INT_DMA_ERR6     = 0x40 // Bit DMA_ERR6.
	USB_DMA_ERR_INT_DMA_ERR7_Pos = 0x7  // Position of DMA_ERR7 field.
	USB_DMA_ERR_INT_DMA_ERR7_Msk = 0x80 // Bit mask of DMA_ERR7 field.
	USB_DMA_ERR_INT_DMA_ERR7     = 0x80 // Bit DMA_ERR7.

	// BUF_OVR_INT: USB Buffer Overflow Interrupt
	USB_BUF_OVR_INT_BUF_OVR0_Pos = 0x0  // Position of BUF_OVR0 field.
	USB_BUF_OVR_INT_BUF_OVR0_Msk = 0x1  // Bit mask of BUF_OVR0 field.
	USB_BUF_OVR_INT_BUF_OVR0     = 0x1  // Bit BUF_OVR0.
	USB_BUF_OVR_INT_BUF_OVR1_Pos = 0x1  // Position of BUF_OVR1 field.
	USB_BUF_OVR_INT_BUF_OVR1_Msk = 0x2  // Bit mask of BUF_OVR1 field.
	USB_BUF_OVR_INT_BUF_OVR1     = 0x2  // Bit BUF_OVR1.
	USB_BUF_OVR_INT_BUF_OVR2_Pos = 0x2  // Position of BUF_OVR2 field.
	USB_BUF_OVR_INT_BUF_OVR2_Msk = 0x4  // Bit mask of BUF_OVR2 field.
	USB_BUF_OVR_INT_BUF_OVR2     = 0x4  // Bit BUF_OVR2.
	USB_BUF_OVR_INT_BUF_OVR3_Pos = 0x3  // Position of BUF_OVR3 field.
	USB_BUF_OVR_INT_BUF_OVR3_Msk = 0x8  // Bit mask of BUF_OVR3 field.
	USB_BUF_OVR_INT_BUF_OVR3     = 0x8  // Bit BUF_OVR3.
	USB_BUF_OVR_INT_BUF_OVR4_Pos = 0x4  // Position of BUF_OVR4 field.
	USB_BUF_OVR_INT_BUF_OVR4_Msk = 0x10 // Bit mask of BUF_OVR4 field.
	USB_BUF_OVR_INT_BUF_OVR4     = 0x10 // Bit BUF_OVR4.
	USB_BUF_OVR_INT_BUF_OVR5_Pos = 0x5  // Position of BUF_OVR5 field.
	USB_BUF_OVR_INT_BUF_OVR5_Msk = 0x20 // Bit mask of BUF_OVR5 field.
	USB_BUF_OVR_INT_BUF_OVR5     = 0x20 // Bit BUF_OVR5.
	USB_BUF_OVR_INT_BUF_OVR6_Pos = 0x6  // Position of BUF_OVR6 field.
	USB_BUF_OVR_INT_BUF_OVR6_Msk = 0x40 // Bit mask of BUF_OVR6 field.
	USB_BUF_OVR_INT_BUF_OVR6     = 0x40 // Bit BUF_OVR6.
	USB_BUF_OVR_INT_BUF_OVR7_Pos = 0x7  // Position of BUF_OVR7 field.
	USB_BUF_OVR_INT_BUF_OVR7_Msk = 0x80 // Bit mask of BUF_OVR7 field.
	USB_BUF_OVR_INT_BUF_OVR7     = 0x80 // Bit BUF_OVR7.

	// SETUP0: USB SETUP Packet Bytes 0 to 3
	USB_SETUP0_BYTE0_Pos = 0x0        // Position of BYTE0 field.
	USB_SETUP0_BYTE0_Msk = 0xff       // Bit mask of BYTE0 field.
	USB_SETUP0_BYTE1_Pos = 0x8        // Position of BYTE1 field.
	USB_SETUP0_BYTE1_Msk = 0xff00     // Bit mask of BYTE1 field.
	USB_SETUP0_BYTE2_Pos = 0x10       // Position of BYTE2 field.
	USB_SETUP0_BYTE2_Msk = 0xff0000   // Bit mask of BYTE2 field.
	USB_SETUP0_BYTE3_Pos = 0x18       // Position of BYTE3 field.
	USB_SETUP0_BYTE3_Msk = 0xff000000 // Bit mask of BYTE3 field.

	// SETUP1: USB SETUP Packet Bytes 4 to 7
	USB_SETUP1_BYTE4_Pos = 0x0        // Position of BYTE4 field.
	USB_SETUP1_BYTE4_Msk = 0xff       // Bit mask of BYTE4 field.
	USB_SETUP1_BYTE5_Pos = 0x8        // Position of BYTE5 field.
	USB_SETUP1_BYTE5_Msk = 0xff00     // Bit mask of BYTE5 field.
	USB_SETUP1_BYTE6_Pos = 0x10       // Position of BYTE6 field.
	USB_SETUP1_BYTE6_Msk = 0xff0000   // Bit mask of BYTE6 field.
	USB_SETUP1_BYTE7_Pos = 0x18       // Position of BYTE7 field.
	USB_SETUP1_BYTE7_Msk = 0xff000000 // Bit mask of BYTE7 field.

	// EP0: USB Endpoint 0 Control Register
	USB_EP0_EP_DIR_Pos      = 0x0   // Position of EP_DIR field.
	USB_EP0_EP_DIR_Msk      = 0x3   // Bit mask of EP_DIR field.
	USB_EP0_EP_BUF2_Pos     = 0x3   // Position of EP_BUF2 field.
	USB_EP0_EP_BUF2_Msk     = 0x8   // Bit mask of EP_BUF2 field.
	USB_EP0_EP_BUF2         = 0x8   // Bit EP_BUF2.
	USB_EP0_EP_INT_EN_Pos   = 0x4   // Position of EP_INT_EN field.
	USB_EP0_EP_INT_EN_Msk   = 0x10  // Bit mask of EP_INT_EN field.
	USB_EP0_EP_INT_EN       = 0x10  // Bit EP_INT_EN.
	USB_EP0_EP_NAK_EN_Pos   = 0x5   // Position of EP_NAK_EN field.
	USB_EP0_EP_NAK_EN_Msk   = 0x20  // Bit mask of EP_NAK_EN field.
	USB_EP0_EP_NAK_EN       = 0x20  // Bit EP_NAK_EN.
	USB_EP0_EP_DT_Pos       = 0x6   // Position of EP_DT field.
	USB_EP0_EP_DT_Msk       = 0x40  // Bit mask of EP_DT field.
	USB_EP0_EP_DT           = 0x40  // Bit EP_DT.
	USB_EP0_EP_STALL_Pos    = 0x8   // Position of EP_STALL field.
	USB_EP0_EP_STALL_Msk    = 0x100 // Bit mask of EP_STALL field.
	USB_EP0_EP_STALL        = 0x100 // Bit EP_STALL.
	USB_EP0_EP_ST_STALL_Pos = 0x9   // Position of EP_ST_STALL field.
	USB_EP0_EP_ST_STALL_Msk = 0x200 // Bit mask of EP_ST_STALL field.
	USB_EP0_EP_ST_STALL     = 0x200 // Bit EP_ST_STALL.
	USB_EP0_EP_ST_ACK_Pos   = 0xa   // Position of EP_ST_ACK field.
	USB_EP0_EP_ST_ACK_Msk   = 0x400 // Bit mask of EP_ST_ACK field.
	USB_EP0_EP_ST_ACK       = 0x400 // Bit EP_ST_ACK.

	// EP1: USB Endpoint 1 Control Register
	USB_EP1_EP_DIR_Pos      = 0x0   // Position of EP_DIR field.
	USB_EP1_EP_DIR_Msk      = 0x3   // Bit mask of EP_DIR field.
	USB_EP1_EP_BUF2_Pos     = 0x3   // Position of EP_BUF2 field.
	USB_EP1_EP_BUF2_Msk     = 0x8   // Bit mask of EP_BUF2 field.
	USB_EP1_EP_BUF2         = 0x8   // Bit EP_BUF2.
	USB_EP1_EP_INT_EN_Pos   = 0x4   // Position of EP_INT_EN field.
	USB_EP1_EP_INT_EN_Msk   = 0x10  // Bit mask of EP_INT_EN field.
	USB_EP1_EP_INT_EN       = 0x10  // Bit EP_INT_EN.
	USB_EP1_EP_NAK_EN_Pos   = 0x5   // Position of EP_NAK_EN field.
	USB_EP1_EP_NAK_EN_Msk   = 0x20  // Bit mask of EP_NAK_EN field.
	USB_EP1_EP_NAK_EN       = 0x20  // Bit EP_NAK_EN.
	USB_EP1_EP_DT_Pos       = 0x6   // Position of EP_DT field.
	USB_EP1_EP_DT_Msk       = 0x40  // Bit mask of EP_DT field.
	USB_EP1_EP_DT           = 0x40  // Bit EP_DT.
	USB_EP1_EP_STALL_Pos    = 0x8   // Position of EP_STALL field.
	USB_EP1_EP_STALL_Msk    = 0x100 // Bit mask of EP_STALL field.
	USB_EP1_EP_STALL        = 0x100 // Bit EP_STALL.
	USB_EP1_EP_ST_STALL_Pos = 0x9   // Position of EP_ST_STALL field.
	USB_EP1_EP_ST_STALL_Msk = 0x200 // Bit mask of EP_ST_STALL field.
	USB_EP1_EP_ST_STALL     = 0x200 // Bit EP_ST_STALL.
	USB_EP1_EP_ST_ACK_Pos   = 0xa   // Position of EP_ST_ACK field.
	USB_EP1_EP_ST_ACK_Msk   = 0x400 // Bit mask of EP_ST_ACK field.
	USB_EP1_EP_ST_ACK       = 0x400 // Bit EP_ST_ACK.

	// EP2: USB Endpoint 2 Control Register
	USB_EP2_EP_DIR_Pos      = 0x0   // Position of EP_DIR field.
	USB_EP2_EP_DIR_Msk      = 0x3   // Bit mask of EP_DIR field.
	USB_EP2_EP_BUF2_Pos     = 0x3   // Position of EP_BUF2 field.
	USB_EP2_EP_BUF2_Msk     = 0x8   // Bit mask of EP_BUF2 field.
	USB_EP2_EP_BUF2         = 0x8   // Bit EP_BUF2.
	USB_EP2_EP_INT_EN_Pos   = 0x4   // Position of EP_INT_EN field.
	USB_EP2_EP_INT_EN_Msk   = 0x10  // Bit mask of EP_INT_EN field.
	USB_EP2_EP_INT_EN       = 0x10  // Bit EP_INT_EN.
	USB_EP2_EP_NAK_EN_Pos   = 0x5   // Position of EP_NAK_EN field.
	USB_EP2_EP_NAK_EN_Msk   = 0x20  // Bit mask of EP_NAK_EN field.
	USB_EP2_EP_NAK_EN       = 0x20  // Bit EP_NAK_EN.
	USB_EP2_EP_DT_Pos       = 0x6   // Position of EP_DT field.
	USB_EP2_EP_DT_Msk       = 0x40  // Bit mask of EP_DT field.
	USB_EP2_EP_DT           = 0x40  // Bit EP_DT.
	USB_EP2_EP_STALL_Pos    = 0x8   // Position of EP_STALL field.
	USB_EP2_EP_STALL_Msk    = 0x100 // Bit mask of EP_STALL field.
	USB_EP2_EP_STALL        = 0x100 // Bit EP_STALL.
	USB_EP2_EP_ST_STALL_Pos = 0x9   // Position of EP_ST_STALL field.
	USB_EP2_EP_ST_STALL_Msk = 0x200 // Bit mask of EP_ST_STALL field.
	USB_EP2_EP_ST_STALL     = 0x200 // Bit EP_ST_STALL.
	USB_EP2_EP_ST_ACK_Pos   = 0xa   // Position of EP_ST_ACK field.
	USB_EP2_EP_ST_ACK_Msk   = 0x400 // Bit mask of EP_ST_ACK field.
	USB_EP2_EP_ST_ACK       = 0x400 // Bit EP_ST_ACK.

	// EP3: USB Endpoint 3 Control Register
	USB_EP3_EP_DIR_Pos      = 0x0   // Position of EP_DIR field.
	USB_EP3_EP_DIR_Msk      = 0x3   // Bit mask of EP_DIR field.
	USB_EP3_EP_BUF2_Pos     = 0x3   // Position of EP_BUF2 field.
	USB_EP3_EP_BUF2_Msk     = 0x8   // Bit mask of EP_BUF2 field.
	USB_EP3_EP_BUF2         = 0x8   // Bit EP_BUF2.
	USB_EP3_EP_INT_EN_Pos   = 0x4   // Position of EP_INT_EN field.
	USB_EP3_EP_INT_EN_Msk   = 0x10  // Bit mask of EP_INT_EN field.
	USB_EP3_EP_INT_EN       = 0x10  // Bit EP_INT_EN.
	USB_EP3_EP_NAK_EN_Pos   = 0x5   // Position of EP_NAK_EN field.
	USB_EP3_EP_NAK_EN_Msk   = 0x20  // Bit mask of EP_NAK_EN field.
	USB_EP3_EP_NAK_EN       = 0x20  // Bit EP_NAK_EN.
	USB_EP3_EP_DT_Pos       = 0x6   // Position of EP_DT field.
	USB_EP3_EP_DT_Msk       = 0x40  // Bit mask of EP_DT field.
	USB_EP3_EP_DT           = 0x40  // Bit EP_DT.
	USB_EP3_EP_STALL_Pos    = 0x8   // Position of EP_STALL field.
	USB_EP3_EP_STALL_Msk    = 0x100 // Bit mask of EP_STALL field.
	USB_EP3_EP_STALL        = 0x100 // Bit EP_STALL.
	USB_EP3_EP_ST_STALL_Pos = 0x9   // Position of EP_ST_STALL field.
	USB_EP3_EP_ST_STALL_Msk = 0x200 // Bit mask of EP_ST_STALL field.
	USB_EP3_EP_ST_STALL     = 0x200 // Bit EP_ST_STALL.
	USB_EP3_EP_ST_ACK_Pos   = 0xa   // Position of EP_ST_ACK field.
	USB_EP3_EP_ST_ACK_Msk   = 0x400 // Bit mask of EP_ST_ACK field.
	USB_EP3_EP_ST_ACK       = 0x400 // Bit EP_ST_ACK.

	// EP4: USB Endpoint 4 Control Register
	USB_EP4_EP_DIR_Pos      = 0x0   // Position of EP_DIR field.
	USB_EP4_EP_DIR_Msk      = 0x3   // Bit mask of EP_DIR field.
	USB_EP4_EP_BUF2_Pos     = 0x3   // Position of EP_BUF2 field.
	USB_EP4_EP_BUF2_Msk     = 0x8   // Bit mask of EP_BUF2 field.
	USB_EP4_EP_BUF2         = 0x8   // Bit EP_BUF2.
	USB_EP4_EP_INT_EN_Pos   = 0x4   // Position of EP_INT_EN field.
	USB_EP4_EP_INT_EN_Msk   = 0x10  // Bit mask of EP_INT_EN field.
	USB_EP4_EP_INT_EN       = 0x10  // Bit EP_INT_EN.
	USB_EP4_EP_NAK_EN_Pos   = 0x5   // Position of EP_NAK_EN field.
	USB_EP4_EP_NAK_EN_Msk   = 0x20  // Bit mask of EP_NAK_EN field.
	USB_EP4_EP_NAK_EN       = 0x20  // Bit EP_NAK_EN.
	USB_EP4_EP_DT_Pos       = 0x6   // Position of EP_DT field.
	USB_EP4_EP_DT_Msk       = 0x40  // Bit mask of EP_DT field.
	USB_EP4_EP_DT           = 0x40  // Bit EP_DT.
	USB_EP4_EP_STALL_Pos    = 0x8   // Position of EP_STALL field.
	USB_EP4_EP_STALL_Msk    = 0x100 // Bit mask of EP_STALL field.
	USB_EP4_EP_STALL        = 0x100 // Bit EP_STALL.
	USB_EP4_EP_ST_STALL_Pos = 0x9   // Position of EP_ST_STALL field.
	USB_EP4_EP_ST_STALL_Msk = 0x200 // Bit mask of EP_ST_STALL field.
	USB_EP4_EP_ST_STALL     = 0x200 // Bit EP_ST_STALL.
	USB_EP4_EP_ST_ACK_Pos   = 0xa   // Position of EP_ST_ACK field.
	USB_EP4_EP_ST_ACK_Msk   = 0x400 // Bit mask of EP_ST_ACK field.
	USB_EP4_EP_ST_ACK       = 0x400 // Bit EP_ST_ACK.

	// EP5: USB Endpoint 5 Control Register
	USB_EP5_EP_DIR_Pos      = 0x0   // Position of EP_DIR field.
	USB_EP5_EP_DIR_Msk      = 0x3   // Bit mask of EP_DIR field.
	USB_EP5_EP_BUF2_Pos     = 0x3   // Position of EP_BUF2 field.
	USB_EP5_EP_BUF2_Msk     = 0x8   // Bit mask of EP_BUF2 field.
	USB_EP5_EP_BUF2         = 0x8   // Bit EP_BUF2.
	USB_EP5_EP_INT_EN_Pos   = 0x4   // Position of EP_INT_EN field.
	USB_EP5_EP_INT_EN_Msk   = 0x10  // Bit mask of EP_INT_EN field.
	USB_EP5_EP_INT_EN       = 0x10  // Bit EP_INT_EN.
	USB_EP5_EP_NAK_EN_Pos   = 0x5   // Position of EP_NAK_EN field.
	USB_EP5_EP_NAK_EN_Msk   = 0x20  // Bit mask of EP_NAK_EN field.
	USB_EP5_EP_NAK_EN       = 0x20  // Bit EP_NAK_EN.
	USB_EP5_EP_DT_Pos       = 0x6   // Position of EP_DT field.
	USB_EP5_EP_DT_Msk       = 0x40  // Bit mask of EP_DT field.
	USB_EP5_EP_DT           = 0x40  // Bit EP_DT.
	USB_EP5_EP_STALL_Pos    = 0x8   // Position of EP_STALL field.
	USB_EP5_EP_STALL_Msk    = 0x100 // Bit mask of EP_STALL field.
	USB_EP5_EP_STALL        = 0x100 // Bit EP_STALL.
	USB_EP5_EP_ST_STALL_Pos = 0x9   // Position of EP_ST_STALL field.
	USB_EP5_EP_ST_STALL_Msk = 0x200 // Bit mask of EP_ST_STALL field.
	USB_EP5_EP_ST_STALL     = 0x200 // Bit EP_ST_STALL.
	USB_EP5_EP_ST_ACK_Pos   = 0xa   // Position of EP_ST_ACK field.
	USB_EP5_EP_ST_ACK_Msk   = 0x400 // Bit mask of EP_ST_ACK field.
	USB_EP5_EP_ST_ACK       = 0x400 // Bit EP_ST_ACK.

	// EP6: USB Endpoint 6 Control Register
	USB_EP6_EP_DIR_Pos      = 0x0   // Position of EP_DIR field.
	USB_EP6_EP_DIR_Msk      = 0x3   // Bit mask of EP_DIR field.
	USB_EP6_EP_BUF2_Pos     = 0x3   // Position of EP_BUF2 field.
	USB_EP6_EP_BUF2_Msk     = 0x8   // Bit mask of EP_BUF2 field.
	USB_EP6_EP_BUF2         = 0x8   // Bit EP_BUF2.
	USB_EP6_EP_INT_EN_Pos   = 0x4   // Position of EP_INT_EN field.
	USB_EP6_EP_INT_EN_Msk   = 0x10  // Bit mask of EP_INT_EN field.
	USB_EP6_EP_INT_EN       = 0x10  // Bit EP_INT_EN.
	USB_EP6_EP_NAK_EN_Pos   = 0x5   // Position of EP_NAK_EN field.
	USB_EP6_EP_NAK_EN_Msk   = 0x20  // Bit mask of EP_NAK_EN field.
	USB_EP6_EP_NAK_EN       = 0x20  // Bit EP_NAK_EN.
	USB_EP6_EP_DT_Pos       = 0x6   // Position of EP_DT field.
	USB_EP6_EP_DT_Msk       = 0x40  // Bit mask of EP_DT field.
	USB_EP6_EP_DT           = 0x40  // Bit EP_DT.
	USB_EP6_EP_STALL_Pos    = 0x8   // Position of EP_STALL field.
	USB_EP6_EP_STALL_Msk    = 0x100 // Bit mask of EP_STALL field.
	USB_EP6_EP_STALL        = 0x100 // Bit EP_STALL.
	USB_EP6_EP_ST_STALL_Pos = 0x9   // Position of EP_ST_STALL field.
	USB_EP6_EP_ST_STALL_Msk = 0x200 // Bit mask of EP_ST_STALL field.
	USB_EP6_EP_ST_STALL     = 0x200 // Bit EP_ST_STALL.
	USB_EP6_EP_ST_ACK_Pos   = 0xa   // Position of EP_ST_ACK field.
	USB_EP6_EP_ST_ACK_Msk   = 0x400 // Bit mask of EP_ST_ACK field.
	USB_EP6_EP_ST_ACK       = 0x400 // Bit EP_ST_ACK.

	// EP7: USB Endpoint 7 Control Register
	USB_EP7_EP_DIR_Pos      = 0x0   // Position of EP_DIR field.
	USB_EP7_EP_DIR_Msk      = 0x3   // Bit mask of EP_DIR field.
	USB_EP7_EP_BUF2_Pos     = 0x3   // Position of EP_BUF2 field.
	USB_EP7_EP_BUF2_Msk     = 0x8   // Bit mask of EP_BUF2 field.
	USB_EP7_EP_BUF2         = 0x8   // Bit EP_BUF2.
	USB_EP7_EP_INT_EN_Pos   = 0x4   // Position of EP_INT_EN field.
	USB_EP7_EP_INT_EN_Msk   = 0x10  // Bit mask of EP_INT_EN field.
	USB_EP7_EP_INT_EN       = 0x10  // Bit EP_INT_EN.
	USB_EP7_EP_NAK_EN_Pos   = 0x5   // Position of EP_NAK_EN field.
	USB_EP7_EP_NAK_EN_Msk   = 0x20  // Bit mask of EP_NAK_EN field.
	USB_EP7_EP_NAK_EN       = 0x20  // Bit EP_NAK_EN.
	USB_EP7_EP_DT_Pos       = 0x6   // Position of EP_DT field.
	USB_EP7_EP_DT_Msk       = 0x40  // Bit mask of EP_DT field.
	USB_EP7_EP_DT           = 0x40  // Bit EP_DT.
	USB_EP7_EP_STALL_Pos    = 0x8   // Position of EP_STALL field.
	USB_EP7_EP_STALL_Msk    = 0x100 // Bit mask of EP_STALL field.
	USB_EP7_EP_STALL        = 0x100 // Bit EP_STALL.
	USB_EP7_EP_ST_STALL_Pos = 0x9   // Position of EP_ST_STALL field.
	USB_EP7_EP_ST_STALL_Msk = 0x200 // Bit mask of EP_ST_STALL field.
	USB_EP7_EP_ST_STALL     = 0x200 // Bit EP_ST_STALL.
	USB_EP7_EP_ST_ACK_Pos   = 0xa   // Position of EP_ST_ACK field.
	USB_EP7_EP_ST_ACK_Msk   = 0x400 // Bit mask of EP_ST_ACK field.
	USB_EP7_EP_ST_ACK       = 0x400 // Bit EP_ST_ACK.
)

// Bitfields for CRC: CRC-16/CRC-32 Engine
const (
	// RESEED: CRC-16/CRC-32 Reseed Controls
	CRC_RESEED_CRC16_Pos = 0x0 // Position of CRC16 field.
	CRC_RESEED_CRC16_Msk = 0x1 // Bit mask of CRC16 field.
	CRC_RESEED_CRC16     = 0x1 // Bit CRC16.
	CRC_RESEED_CRC32_Pos = 0x1 // Position of CRC32 field.
	CRC_RESEED_CRC32_Msk = 0x2 // Bit mask of CRC32 field.
	CRC_RESEED_CRC32     = 0x2 // Bit CRC32.
)

// Bitfields for TPU: Trust Protection Unit (TPU)
const ()

// Bitfields for TPU_TSR: Trust Protection Unit (TPU)
const ()

// Bitfields for AES: AES Cryptographic Engine
const (
	// CTRL: AES Control and Status
	AES_CTRL_START_Pos                     = 0x0  // Position of START field.
	AES_CTRL_START_Msk                     = 0x1  // Bit mask of START field.
	AES_CTRL_START                         = 0x1  // Bit START.
	AES_CTRL_CRYPT_MODE_Pos                = 0x1  // Position of CRYPT_MODE field.
	AES_CTRL_CRYPT_MODE_Msk                = 0x2  // Bit mask of CRYPT_MODE field.
	AES_CTRL_CRYPT_MODE                    = 0x2  // Bit CRYPT_MODE.
	AES_CTRL_CRYPT_MODE_ENCRYPT_MODE       = 0x0  // Perform AES encryption operation.
	AES_CTRL_CRYPT_MODE_DECRYPT_MODE       = 0x1  // Perform AES decryption operation.
	AES_CTRL_EXP_KEY_MODE_Pos              = 0x2  // Position of EXP_KEY_MODE field.
	AES_CTRL_EXP_KEY_MODE_Msk              = 0x4  // Bit mask of EXP_KEY_MODE field.
	AES_CTRL_EXP_KEY_MODE                  = 0x4  // Bit EXP_KEY_MODE.
	AES_CTRL_EXP_KEY_MODE_CALC_NEW_EXP_KEY = 0x0  // Calculate new expanded key for this operation.
	AES_CTRL_EXP_KEY_MODE_USE_LAST_EXP_KEY = 0x1  // Use expanded key calculated by the last operation.
	AES_CTRL_KEY_SIZE_Pos                  = 0x3  // Position of KEY_SIZE field.
	AES_CTRL_KEY_SIZE_Msk                  = 0x18 // Bit mask of KEY_SIZE field.
	AES_CTRL_KEY_SIZE_KEY_SIZE_128         = 0x0  // Use 128-bit AES key size.
	AES_CTRL_KEY_SIZE_KEY_SIZE_192         = 0x1  // Use 192-bit AES key size.
	AES_CTRL_KEY_SIZE_KEY_SIZE_256         = 0x2  // Use 256-bit AES key size.
	AES_CTRL_INTEN_Pos                     = 0x5  // Position of INTEN field.
	AES_CTRL_INTEN_Msk                     = 0x20 // Bit mask of INTEN field.
	AES_CTRL_INTEN                         = 0x20 // Bit INTEN.
	AES_CTRL_INTFL_Pos                     = 0x6  // Position of INTFL field.
	AES_CTRL_INTFL_Msk                     = 0x40 // Bit mask of INTFL field.
	AES_CTRL_INTFL                         = 0x40 // Bit INTFL.
)

// Bitfields for MAA: MAA Cryptographic Engine
const (
	// CTRL: MAA Control, Configuration and Status
	MAA_CTRL_START_Pos    = 0x0        // Position of START field.
	MAA_CTRL_START_Msk    = 0x1        // Bit mask of START field.
	MAA_CTRL_START        = 0x1        // Bit START.
	MAA_CTRL_OPSEL_Pos    = 0x1        // Position of OPSEL field.
	MAA_CTRL_OPSEL_Msk    = 0xe        // Bit mask of OPSEL field.
	MAA_CTRL_OPSEL_EXP    = 0x0        // Exponentiation.
	MAA_CTRL_OPSEL_SQR    = 0x1        // Square operation.
	MAA_CTRL_OPSEL_MUL    = 0x2        // Multiply.
	MAA_CTRL_OPSEL_SQRMUL = 0x3        // Square operation followed by multiply.
	MAA_CTRL_OPSEL_ADD    = 0x4        // Addition.
	MAA_CTRL_OPSEL_SUB    = 0x5        // Subtraction.
	MAA_CTRL_OCALC_Pos    = 0x4        // Position of OCALC field.
	MAA_CTRL_OCALC_Msk    = 0x10       // Bit mask of OCALC field.
	MAA_CTRL_OCALC        = 0x10       // Bit OCALC.
	MAA_CTRL_IF_DONE_Pos  = 0x5        // Position of IF_DONE field.
	MAA_CTRL_IF_DONE_Msk  = 0x20       // Bit mask of IF_DONE field.
	MAA_CTRL_IF_DONE      = 0x20       // Bit IF_DONE.
	MAA_CTRL_INTEN_Pos    = 0x6        // Position of INTEN field.
	MAA_CTRL_INTEN_Msk    = 0x40       // Bit mask of INTEN field.
	MAA_CTRL_INTEN        = 0x40       // Bit INTEN.
	MAA_CTRL_IF_ERROR_Pos = 0x7        // Position of IF_ERROR field.
	MAA_CTRL_IF_ERROR_Msk = 0x80       // Bit mask of IF_ERROR field.
	MAA_CTRL_IF_ERROR     = 0x80       // Bit IF_ERROR.
	MAA_CTRL_OFS_A_Pos    = 0x8        // Position of OFS_A field.
	MAA_CTRL_OFS_A_Msk    = 0x300      // Bit mask of OFS_A field.
	MAA_CTRL_OFS_B_Pos    = 0xa        // Position of OFS_B field.
	MAA_CTRL_OFS_B_Msk    = 0xc00      // Bit mask of OFS_B field.
	MAA_CTRL_OFS_EXP_Pos  = 0xc        // Position of OFS_EXP field.
	MAA_CTRL_OFS_EXP_Msk  = 0x3000     // Bit mask of OFS_EXP field.
	MAA_CTRL_OFS_MOD_Pos  = 0xe        // Position of OFS_MOD field.
	MAA_CTRL_OFS_MOD_Msk  = 0xc000     // Bit mask of OFS_MOD field.
	MAA_CTRL_SEG_A_Pos    = 0x10       // Position of SEG_A field.
	MAA_CTRL_SEG_A_Msk    = 0xf0000    // Bit mask of SEG_A field.
	MAA_CTRL_SEG_B_Pos    = 0x14       // Position of SEG_B field.
	MAA_CTRL_SEG_B_Msk    = 0xf00000   // Bit mask of SEG_B field.
	MAA_CTRL_SEG_RES_Pos  = 0x18       // Position of SEG_RES field.
	MAA_CTRL_SEG_RES_Msk  = 0xf000000  // Bit mask of SEG_RES field.
	MAA_CTRL_SEG_TMP_Pos  = 0x1c       // Position of SEG_TMP field.
	MAA_CTRL_SEG_TMP_Msk  = 0xf0000000 // Bit mask of SEG_TMP field.

	// MAWS: MAA Word (Operand) Size, Big/Little Endian Mode Select
	MAA_MAWS_MODLEN_Pos   = 0x0    // Position of MODLEN field.
	MAA_MAWS_MODLEN_Msk   = 0x3ff  // Bit mask of MODLEN field.
	MAA_MAWS_BYTESWAP_Pos = 0xf    // Position of BYTESWAP field.
	MAA_MAWS_BYTESWAP_Msk = 0x8000 // Bit mask of BYTESWAP field.
	MAA_MAWS_BYTESWAP     = 0x8000 // Bit BYTESWAP.
)

// Bitfields for WDT0: Watchdog Timers
const (
	// CTRL: WDT0 - Watchdog Timer Control Register
	Watch_Dog_Timers_CTRL_INT_PERIOD_Pos        = 0x0    // Position of INT_PERIOD field.
	Watch_Dog_Timers_CTRL_INT_PERIOD_Msk        = 0xf    // Bit mask of INT_PERIOD field.
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_31_CLKS  = 0x0    // 2^31 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_30_CLKS  = 0x1    // 2^30 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_29_CLKS  = 0x2    // 2^29 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_28_CLKS  = 0x3    // 2^28 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_27_CLKS  = 0x4    // 2^27 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_26_CLKS  = 0x5    // 2^26 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_25_CLKS  = 0x6    // 2^25 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_24_CLKS  = 0x7    // 2^24 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_23_CLKS  = 0x8    // 2^23 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_22_CLKS  = 0x9    // 2^22 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_21_CLKS  = 0xa    // 2^21 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_20_CLKS  = 0xb    // 2^20 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_19_CLKS  = 0xc    // 2^19 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_18_CLKS  = 0xd    // 2^18 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_17_CLKS  = 0xe    // 2^17 WDT clocks
	Watch_Dog_Timers_CTRL_INT_PERIOD_2_16_CLKS  = 0xf    // 2^16 WDT clocks
	Watch_Dog_Timers_CTRL_RST_PERIOD_Pos        = 0x4    // Position of RST_PERIOD field.
	Watch_Dog_Timers_CTRL_RST_PERIOD_Msk        = 0xf0   // Bit mask of RST_PERIOD field.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_31_CLKS  = 0x0    // 2^31 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_30_CLKS  = 0x1    // 2^30 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_29_CLKS  = 0x2    // 2^29 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_28_CLKS  = 0x3    // 2^28 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_27_CLKS  = 0x4    // 2^27 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_26_CLKS  = 0x5    // 2^26 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_25_CLKS  = 0x6    // 2^25 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_24_CLKS  = 0x7    // 2^24 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_23_CLKS  = 0x8    // 2^23 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_22_CLKS  = 0x9    // 2^22 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_21_CLKS  = 0xa    // 2^21 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_20_CLKS  = 0xb    // 2^20 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_19_CLKS  = 0xc    // 2^19 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_18_CLKS  = 0xd    // 2^18 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_17_CLKS  = 0xe    // 2^17 WDT clocks.
	Watch_Dog_Timers_CTRL_RST_PERIOD_2_16_CLKS  = 0xf    // 2^16 WDT clocks.
	Watch_Dog_Timers_CTRL_EN_TIMER_Pos          = 0x8    // Position of EN_TIMER field.
	Watch_Dog_Timers_CTRL_EN_TIMER_Msk          = 0x100  // Bit mask of EN_TIMER field.
	Watch_Dog_Timers_CTRL_EN_TIMER              = 0x100  // Bit EN_TIMER.
	Watch_Dog_Timers_CTRL_EN_CLOCK_Pos          = 0x9    // Position of EN_CLOCK field.
	Watch_Dog_Timers_CTRL_EN_CLOCK_Msk          = 0x200  // Bit mask of EN_CLOCK field.
	Watch_Dog_Timers_CTRL_EN_CLOCK              = 0x200  // Bit EN_CLOCK.
	Watch_Dog_Timers_CTRL_EN_CLOCK_DISABLE      = 0x0    // WDT Clock Gate Control Disable
	Watch_Dog_Timers_CTRL_EN_CLOCK_ENABLE       = 0x1    // WDT Clock Gate Control Enable
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_Pos       = 0xc    // Position of WAIT_PERIOD field.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_Msk       = 0xf000 // Bit mask of WAIT_PERIOD field.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_31_CLKS = 0x0    // 2^31 WDT clocks.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_30_CLKS = 0x1    // 2^30 WDT clocks.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_29_CLKS = 0x2    // 2^29 WDT clocks.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_28_CLKS = 0x3    // 2^28 WDT clocks.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_27_CLKS = 0x4    // 2^27 WDT clocks
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_26_CLKS = 0x5    // 2^26 WDT clocks
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_25_CLKS = 0x6    // 2^25 WDT clocks
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_24_CLKS = 0x7    // 2^24 WDT clocks
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_23_CLKS = 0x8    // 2^23 WDT clocks
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_22_CLKS = 0x9    // 2^22 WDT clocks.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_21_CLKS = 0xa    // 2^21 WDT clocks.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_20_CLKS = 0xb    // 2^20 WDT clocks.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_19_CLKS = 0xc    // 2^19 WDT clocks.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_18_CLKS = 0xd    // 2^18 WDT clocks.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_17_CLKS = 0xe    // 2^17 WDT clocks.
	Watch_Dog_Timers_CTRL_WAIT_PERIOD_2_16_CLKS = 0xf    // 2^16 WDT clocks.

	// FLAGS: WDT0 - Watchdog Interrupt and Reset Flags
	Watch_Dog_Timers_FLAGS_TIMEOUT_Pos   = 0x0 // Position of TIMEOUT field.
	Watch_Dog_Timers_FLAGS_TIMEOUT_Msk   = 0x1 // Bit mask of TIMEOUT field.
	Watch_Dog_Timers_FLAGS_TIMEOUT       = 0x1 // Bit TIMEOUT.
	Watch_Dog_Timers_FLAGS_PRE_WIN_Pos   = 0x1 // Position of PRE_WIN field.
	Watch_Dog_Timers_FLAGS_PRE_WIN_Msk   = 0x2 // Bit mask of PRE_WIN field.
	Watch_Dog_Timers_FLAGS_PRE_WIN       = 0x2 // Bit PRE_WIN.
	Watch_Dog_Timers_FLAGS_RESET_OUT_Pos = 0x2 // Position of RESET_OUT field.
	Watch_Dog_Timers_FLAGS_RESET_OUT_Msk = 0x4 // Bit mask of RESET_OUT field.
	Watch_Dog_Timers_FLAGS_RESET_OUT     = 0x4 // Bit RESET_OUT.

	// ENABLE: WDT0 - Interrupt/Reset Enable/Disable Controls
	Watch_Dog_Timers_ENABLE_TIMEOUT_Pos   = 0x0 // Position of TIMEOUT field.
	Watch_Dog_Timers_ENABLE_TIMEOUT_Msk   = 0x1 // Bit mask of TIMEOUT field.
	Watch_Dog_Timers_ENABLE_TIMEOUT       = 0x1 // Bit TIMEOUT.
	Watch_Dog_Timers_ENABLE_PRE_WIN_Pos   = 0x1 // Position of PRE_WIN field.
	Watch_Dog_Timers_ENABLE_PRE_WIN_Msk   = 0x2 // Bit mask of PRE_WIN field.
	Watch_Dog_Timers_ENABLE_PRE_WIN       = 0x2 // Bit PRE_WIN.
	Watch_Dog_Timers_ENABLE_RESET_OUT_Pos = 0x2 // Position of RESET_OUT field.
	Watch_Dog_Timers_ENABLE_RESET_OUT_Msk = 0x4 // Bit mask of RESET_OUT field.
	Watch_Dog_Timers_ENABLE_RESET_OUT     = 0x4 // Bit RESET_OUT.

	// LOCK_CTRL: WDT0 - Register Setting Lock for WDT0_CTRL
	Watch_Dog_Timers_LOCK_CTRL_WDLOCK_Pos = 0x0  // Position of WDLOCK field.
	Watch_Dog_Timers_LOCK_CTRL_WDLOCK_Msk = 0xff // Bit mask of WDLOCK field.
)

// Bitfields for TMR0: 16/32 bit Timer/Counters
const (
	// CTRL: Timer Control Register
	Timers_CTRL_MODE_Pos     = 0x0    // Position of MODE field.
	Timers_CTRL_MODE_Msk     = 0x7    // Bit mask of MODE field.
	Timers_CTRL_TMR2X16_Pos  = 0x3    // Position of TMR2X16 field.
	Timers_CTRL_TMR2X16_Msk  = 0x8    // Bit mask of TMR2X16 field.
	Timers_CTRL_TMR2X16      = 0x8    // Bit TMR2X16.
	Timers_CTRL_PRESCALE_Pos = 0x4    // Position of PRESCALE field.
	Timers_CTRL_PRESCALE_Msk = 0xf0   // Bit mask of PRESCALE field.
	Timers_CTRL_POLARITY_Pos = 0x8    // Position of POLARITY field.
	Timers_CTRL_POLARITY_Msk = 0x100  // Bit mask of POLARITY field.
	Timers_CTRL_POLARITY     = 0x100  // Bit POLARITY.
	Timers_CTRL_ENABLE0_Pos  = 0xc    // Position of ENABLE0 field.
	Timers_CTRL_ENABLE0_Msk  = 0x1000 // Bit mask of ENABLE0 field.
	Timers_CTRL_ENABLE0      = 0x1000 // Bit ENABLE0.
	Timers_CTRL_ENABLE1_Pos  = 0xd    // Position of ENABLE1 field.
	Timers_CTRL_ENABLE1_Msk  = 0x2000 // Bit mask of ENABLE1 field.
	Timers_CTRL_ENABLE1      = 0x2000 // Bit ENABLE1.

	// COUNT16_0: [16 bit] Current Count Value, 16-bit Timer 0
	Timers_COUNT16_0_VALUE_Pos = 0x0    // Position of VALUE field.
	Timers_COUNT16_0_VALUE_Msk = 0xffff // Bit mask of VALUE field.

	// TERM_CNT16_0: [16 bit] Terminal Count Setting, 16-bit Timer 0
	Timers_TERM_CNT16_0_TERM_COUNT_Pos = 0x0    // Position of TERM_COUNT field.
	Timers_TERM_CNT16_0_TERM_COUNT_Msk = 0xffff // Bit mask of TERM_COUNT field.

	// COUNT16_1: [16 bit] Current Count Value, 16-bit Timer 1
	Timers_COUNT16_1_VALUE_Pos = 0x0    // Position of VALUE field.
	Timers_COUNT16_1_VALUE_Msk = 0xffff // Bit mask of VALUE field.

	// TERM_CNT16_1: [16 bit] Terminal Count Setting, 16-bit Timer 1
	Timers_TERM_CNT16_1_TERM_COUNT_Pos = 0x0    // Position of TERM_COUNT field.
	Timers_TERM_CNT16_1_TERM_COUNT_Msk = 0xffff // Bit mask of TERM_COUNT field.

	// INTFL: Timer Module Interrupt Flags
	Timers_INTFL_TIMER0_Pos = 0x0 // Position of TIMER0 field.
	Timers_INTFL_TIMER0_Msk = 0x1 // Bit mask of TIMER0 field.
	Timers_INTFL_TIMER0     = 0x1 // Bit TIMER0.
	Timers_INTFL_TIMER1_Pos = 0x1 // Position of TIMER1 field.
	Timers_INTFL_TIMER1_Msk = 0x2 // Bit mask of TIMER1 field.
	Timers_INTFL_TIMER1     = 0x2 // Bit TIMER1.

	// INTEN: Timer Module Interrupt Enable/Disable Settings
	Timers_INTEN_TIMER0_Pos = 0x0 // Position of TIMER0 field.
	Timers_INTEN_TIMER0_Msk = 0x1 // Bit mask of TIMER0 field.
	Timers_INTEN_TIMER0     = 0x1 // Bit TIMER0.
	Timers_INTEN_TIMER1_Pos = 0x1 // Position of TIMER1 field.
	Timers_INTEN_TIMER1_Msk = 0x2 // Bit mask of TIMER1 field.
	Timers_INTEN_TIMER1     = 0x2 // Bit TIMER1.
)

// Bitfields for PTG: Pulse Train Generation
const (
	// ENABLE: Global Enable/Disable Controls for All Pulse Trains
	Pulse_Train_ENABLE_PT0_Pos  = 0x0    // Position of PT0 field.
	Pulse_Train_ENABLE_PT0_Msk  = 0x1    // Bit mask of PT0 field.
	Pulse_Train_ENABLE_PT0      = 0x1    // Bit PT0.
	Pulse_Train_ENABLE_PT1_Pos  = 0x1    // Position of PT1 field.
	Pulse_Train_ENABLE_PT1_Msk  = 0x2    // Bit mask of PT1 field.
	Pulse_Train_ENABLE_PT1      = 0x2    // Bit PT1.
	Pulse_Train_ENABLE_PT2_Pos  = 0x2    // Position of PT2 field.
	Pulse_Train_ENABLE_PT2_Msk  = 0x4    // Bit mask of PT2 field.
	Pulse_Train_ENABLE_PT2      = 0x4    // Bit PT2.
	Pulse_Train_ENABLE_PT3_Pos  = 0x3    // Position of PT3 field.
	Pulse_Train_ENABLE_PT3_Msk  = 0x8    // Bit mask of PT3 field.
	Pulse_Train_ENABLE_PT3      = 0x8    // Bit PT3.
	Pulse_Train_ENABLE_PT4_Pos  = 0x4    // Position of PT4 field.
	Pulse_Train_ENABLE_PT4_Msk  = 0x10   // Bit mask of PT4 field.
	Pulse_Train_ENABLE_PT4      = 0x10   // Bit PT4.
	Pulse_Train_ENABLE_PT5_Pos  = 0x5    // Position of PT5 field.
	Pulse_Train_ENABLE_PT5_Msk  = 0x20   // Bit mask of PT5 field.
	Pulse_Train_ENABLE_PT5      = 0x20   // Bit PT5.
	Pulse_Train_ENABLE_PT6_Pos  = 0x6    // Position of PT6 field.
	Pulse_Train_ENABLE_PT6_Msk  = 0x40   // Bit mask of PT6 field.
	Pulse_Train_ENABLE_PT6      = 0x40   // Bit PT6.
	Pulse_Train_ENABLE_PT7_Pos  = 0x7    // Position of PT7 field.
	Pulse_Train_ENABLE_PT7_Msk  = 0x80   // Bit mask of PT7 field.
	Pulse_Train_ENABLE_PT7      = 0x80   // Bit PT7.
	Pulse_Train_ENABLE_PT8_Pos  = 0x8    // Position of PT8 field.
	Pulse_Train_ENABLE_PT8_Msk  = 0x100  // Bit mask of PT8 field.
	Pulse_Train_ENABLE_PT8      = 0x100  // Bit PT8.
	Pulse_Train_ENABLE_PT9_Pos  = 0x9    // Position of PT9 field.
	Pulse_Train_ENABLE_PT9_Msk  = 0x200  // Bit mask of PT9 field.
	Pulse_Train_ENABLE_PT9      = 0x200  // Bit PT9.
	Pulse_Train_ENABLE_PT10_Pos = 0xa    // Position of PT10 field.
	Pulse_Train_ENABLE_PT10_Msk = 0x400  // Bit mask of PT10 field.
	Pulse_Train_ENABLE_PT10     = 0x400  // Bit PT10.
	Pulse_Train_ENABLE_PT11_Pos = 0xb    // Position of PT11 field.
	Pulse_Train_ENABLE_PT11_Msk = 0x800  // Bit mask of PT11 field.
	Pulse_Train_ENABLE_PT11     = 0x800  // Bit PT11.
	Pulse_Train_ENABLE_PT12_Pos = 0xc    // Position of PT12 field.
	Pulse_Train_ENABLE_PT12_Msk = 0x1000 // Bit mask of PT12 field.
	Pulse_Train_ENABLE_PT12     = 0x1000 // Bit PT12.
	Pulse_Train_ENABLE_PT13_Pos = 0xd    // Position of PT13 field.
	Pulse_Train_ENABLE_PT13_Msk = 0x2000 // Bit mask of PT13 field.
	Pulse_Train_ENABLE_PT13     = 0x2000 // Bit PT13.
	Pulse_Train_ENABLE_PT14_Pos = 0xe    // Position of PT14 field.
	Pulse_Train_ENABLE_PT14_Msk = 0x4000 // Bit mask of PT14 field.
	Pulse_Train_ENABLE_PT14     = 0x4000 // Bit PT14.
	Pulse_Train_ENABLE_PT15_Pos = 0xf    // Position of PT15 field.
	Pulse_Train_ENABLE_PT15_Msk = 0x8000 // Bit mask of PT15 field.
	Pulse_Train_ENABLE_PT15     = 0x8000 // Bit PT15.

	// RESYNC: Global Resync (All Pulse Trains) Control
	Pulse_Train_RESYNC_PT0_Pos  = 0x0    // Position of PT0 field.
	Pulse_Train_RESYNC_PT0_Msk  = 0x1    // Bit mask of PT0 field.
	Pulse_Train_RESYNC_PT0      = 0x1    // Bit PT0.
	Pulse_Train_RESYNC_PT1_Pos  = 0x1    // Position of PT1 field.
	Pulse_Train_RESYNC_PT1_Msk  = 0x2    // Bit mask of PT1 field.
	Pulse_Train_RESYNC_PT1      = 0x2    // Bit PT1.
	Pulse_Train_RESYNC_PT2_Pos  = 0x2    // Position of PT2 field.
	Pulse_Train_RESYNC_PT2_Msk  = 0x4    // Bit mask of PT2 field.
	Pulse_Train_RESYNC_PT2      = 0x4    // Bit PT2.
	Pulse_Train_RESYNC_PT3_Pos  = 0x3    // Position of PT3 field.
	Pulse_Train_RESYNC_PT3_Msk  = 0x8    // Bit mask of PT3 field.
	Pulse_Train_RESYNC_PT3      = 0x8    // Bit PT3.
	Pulse_Train_RESYNC_PT4_Pos  = 0x4    // Position of PT4 field.
	Pulse_Train_RESYNC_PT4_Msk  = 0x10   // Bit mask of PT4 field.
	Pulse_Train_RESYNC_PT4      = 0x10   // Bit PT4.
	Pulse_Train_RESYNC_PT5_Pos  = 0x5    // Position of PT5 field.
	Pulse_Train_RESYNC_PT5_Msk  = 0x20   // Bit mask of PT5 field.
	Pulse_Train_RESYNC_PT5      = 0x20   // Bit PT5.
	Pulse_Train_RESYNC_PT6_Pos  = 0x6    // Position of PT6 field.
	Pulse_Train_RESYNC_PT6_Msk  = 0x40   // Bit mask of PT6 field.
	Pulse_Train_RESYNC_PT6      = 0x40   // Bit PT6.
	Pulse_Train_RESYNC_PT7_Pos  = 0x7    // Position of PT7 field.
	Pulse_Train_RESYNC_PT7_Msk  = 0x80   // Bit mask of PT7 field.
	Pulse_Train_RESYNC_PT7      = 0x80   // Bit PT7.
	Pulse_Train_RESYNC_PT8_Pos  = 0x8    // Position of PT8 field.
	Pulse_Train_RESYNC_PT8_Msk  = 0x100  // Bit mask of PT8 field.
	Pulse_Train_RESYNC_PT8      = 0x100  // Bit PT8.
	Pulse_Train_RESYNC_PT9_Pos  = 0x9    // Position of PT9 field.
	Pulse_Train_RESYNC_PT9_Msk  = 0x200  // Bit mask of PT9 field.
	Pulse_Train_RESYNC_PT9      = 0x200  // Bit PT9.
	Pulse_Train_RESYNC_PT10_Pos = 0xa    // Position of PT10 field.
	Pulse_Train_RESYNC_PT10_Msk = 0x400  // Bit mask of PT10 field.
	Pulse_Train_RESYNC_PT10     = 0x400  // Bit PT10.
	Pulse_Train_RESYNC_PT11_Pos = 0xb    // Position of PT11 field.
	Pulse_Train_RESYNC_PT11_Msk = 0x800  // Bit mask of PT11 field.
	Pulse_Train_RESYNC_PT11     = 0x800  // Bit PT11.
	Pulse_Train_RESYNC_PT12_Pos = 0xc    // Position of PT12 field.
	Pulse_Train_RESYNC_PT12_Msk = 0x1000 // Bit mask of PT12 field.
	Pulse_Train_RESYNC_PT12     = 0x1000 // Bit PT12.
	Pulse_Train_RESYNC_PT13_Pos = 0xd    // Position of PT13 field.
	Pulse_Train_RESYNC_PT13_Msk = 0x2000 // Bit mask of PT13 field.
	Pulse_Train_RESYNC_PT13     = 0x2000 // Bit PT13.
	Pulse_Train_RESYNC_PT14_Pos = 0xe    // Position of PT14 field.
	Pulse_Train_RESYNC_PT14_Msk = 0x4000 // Bit mask of PT14 field.
	Pulse_Train_RESYNC_PT14     = 0x4000 // Bit PT14.
	Pulse_Train_RESYNC_PT15_Pos = 0xf    // Position of PT15 field.
	Pulse_Train_RESYNC_PT15_Msk = 0x8000 // Bit mask of PT15 field.
	Pulse_Train_RESYNC_PT15     = 0x8000 // Bit PT15.

	// INTFL: Pulse Train Interrupt Flags
	Pulse_Train_INTFL_PT0_Pos  = 0x0    // Position of PT0 field.
	Pulse_Train_INTFL_PT0_Msk  = 0x1    // Bit mask of PT0 field.
	Pulse_Train_INTFL_PT0      = 0x1    // Bit PT0.
	Pulse_Train_INTFL_PT1_Pos  = 0x1    // Position of PT1 field.
	Pulse_Train_INTFL_PT1_Msk  = 0x2    // Bit mask of PT1 field.
	Pulse_Train_INTFL_PT1      = 0x2    // Bit PT1.
	Pulse_Train_INTFL_PT2_Pos  = 0x2    // Position of PT2 field.
	Pulse_Train_INTFL_PT2_Msk  = 0x4    // Bit mask of PT2 field.
	Pulse_Train_INTFL_PT2      = 0x4    // Bit PT2.
	Pulse_Train_INTFL_PT3_Pos  = 0x3    // Position of PT3 field.
	Pulse_Train_INTFL_PT3_Msk  = 0x8    // Bit mask of PT3 field.
	Pulse_Train_INTFL_PT3      = 0x8    // Bit PT3.
	Pulse_Train_INTFL_PT4_Pos  = 0x4    // Position of PT4 field.
	Pulse_Train_INTFL_PT4_Msk  = 0x10   // Bit mask of PT4 field.
	Pulse_Train_INTFL_PT4      = 0x10   // Bit PT4.
	Pulse_Train_INTFL_PT5_Pos  = 0x5    // Position of PT5 field.
	Pulse_Train_INTFL_PT5_Msk  = 0x20   // Bit mask of PT5 field.
	Pulse_Train_INTFL_PT5      = 0x20   // Bit PT5.
	Pulse_Train_INTFL_PT6_Pos  = 0x6    // Position of PT6 field.
	Pulse_Train_INTFL_PT6_Msk  = 0x40   // Bit mask of PT6 field.
	Pulse_Train_INTFL_PT6      = 0x40   // Bit PT6.
	Pulse_Train_INTFL_PT7_Pos  = 0x7    // Position of PT7 field.
	Pulse_Train_INTFL_PT7_Msk  = 0x80   // Bit mask of PT7 field.
	Pulse_Train_INTFL_PT7      = 0x80   // Bit PT7.
	Pulse_Train_INTFL_PT8_Pos  = 0x8    // Position of PT8 field.
	Pulse_Train_INTFL_PT8_Msk  = 0x100  // Bit mask of PT8 field.
	Pulse_Train_INTFL_PT8      = 0x100  // Bit PT8.
	Pulse_Train_INTFL_PT9_Pos  = 0x9    // Position of PT9 field.
	Pulse_Train_INTFL_PT9_Msk  = 0x200  // Bit mask of PT9 field.
	Pulse_Train_INTFL_PT9      = 0x200  // Bit PT9.
	Pulse_Train_INTFL_PT10_Pos = 0xa    // Position of PT10 field.
	Pulse_Train_INTFL_PT10_Msk = 0x400  // Bit mask of PT10 field.
	Pulse_Train_INTFL_PT10     = 0x400  // Bit PT10.
	Pulse_Train_INTFL_PT11_Pos = 0xb    // Position of PT11 field.
	Pulse_Train_INTFL_PT11_Msk = 0x800  // Bit mask of PT11 field.
	Pulse_Train_INTFL_PT11     = 0x800  // Bit PT11.
	Pulse_Train_INTFL_PT12_Pos = 0xc    // Position of PT12 field.
	Pulse_Train_INTFL_PT12_Msk = 0x1000 // Bit mask of PT12 field.
	Pulse_Train_INTFL_PT12     = 0x1000 // Bit PT12.
	Pulse_Train_INTFL_PT13_Pos = 0xd    // Position of PT13 field.
	Pulse_Train_INTFL_PT13_Msk = 0x2000 // Bit mask of PT13 field.
	Pulse_Train_INTFL_PT13     = 0x2000 // Bit PT13.
	Pulse_Train_INTFL_PT14_Pos = 0xe    // Position of PT14 field.
	Pulse_Train_INTFL_PT14_Msk = 0x4000 // Bit mask of PT14 field.
	Pulse_Train_INTFL_PT14     = 0x4000 // Bit PT14.
	Pulse_Train_INTFL_PT15_Pos = 0xf    // Position of PT15 field.
	Pulse_Train_INTFL_PT15_Msk = 0x8000 // Bit mask of PT15 field.
	Pulse_Train_INTFL_PT15     = 0x8000 // Bit PT15.

	// INTEN: Pulse Train Interrupt Enable/Disable
	Pulse_Train_INTEN_PT0_Pos  = 0x0    // Position of PT0 field.
	Pulse_Train_INTEN_PT0_Msk  = 0x1    // Bit mask of PT0 field.
	Pulse_Train_INTEN_PT0      = 0x1    // Bit PT0.
	Pulse_Train_INTEN_PT1_Pos  = 0x1    // Position of PT1 field.
	Pulse_Train_INTEN_PT1_Msk  = 0x2    // Bit mask of PT1 field.
	Pulse_Train_INTEN_PT1      = 0x2    // Bit PT1.
	Pulse_Train_INTEN_PT2_Pos  = 0x2    // Position of PT2 field.
	Pulse_Train_INTEN_PT2_Msk  = 0x4    // Bit mask of PT2 field.
	Pulse_Train_INTEN_PT2      = 0x4    // Bit PT2.
	Pulse_Train_INTEN_PT3_Pos  = 0x3    // Position of PT3 field.
	Pulse_Train_INTEN_PT3_Msk  = 0x8    // Bit mask of PT3 field.
	Pulse_Train_INTEN_PT3      = 0x8    // Bit PT3.
	Pulse_Train_INTEN_PT4_Pos  = 0x4    // Position of PT4 field.
	Pulse_Train_INTEN_PT4_Msk  = 0x10   // Bit mask of PT4 field.
	Pulse_Train_INTEN_PT4      = 0x10   // Bit PT4.
	Pulse_Train_INTEN_PT5_Pos  = 0x5    // Position of PT5 field.
	Pulse_Train_INTEN_PT5_Msk  = 0x20   // Bit mask of PT5 field.
	Pulse_Train_INTEN_PT5      = 0x20   // Bit PT5.
	Pulse_Train_INTEN_PT6_Pos  = 0x6    // Position of PT6 field.
	Pulse_Train_INTEN_PT6_Msk  = 0x40   // Bit mask of PT6 field.
	Pulse_Train_INTEN_PT6      = 0x40   // Bit PT6.
	Pulse_Train_INTEN_PT7_Pos  = 0x7    // Position of PT7 field.
	Pulse_Train_INTEN_PT7_Msk  = 0x80   // Bit mask of PT7 field.
	Pulse_Train_INTEN_PT7      = 0x80   // Bit PT7.
	Pulse_Train_INTEN_PT8_Pos  = 0x8    // Position of PT8 field.
	Pulse_Train_INTEN_PT8_Msk  = 0x100  // Bit mask of PT8 field.
	Pulse_Train_INTEN_PT8      = 0x100  // Bit PT8.
	Pulse_Train_INTEN_PT9_Pos  = 0x9    // Position of PT9 field.
	Pulse_Train_INTEN_PT9_Msk  = 0x200  // Bit mask of PT9 field.
	Pulse_Train_INTEN_PT9      = 0x200  // Bit PT9.
	Pulse_Train_INTEN_PT10_Pos = 0xa    // Position of PT10 field.
	Pulse_Train_INTEN_PT10_Msk = 0x400  // Bit mask of PT10 field.
	Pulse_Train_INTEN_PT10     = 0x400  // Bit PT10.
	Pulse_Train_INTEN_PT11_Pos = 0xb    // Position of PT11 field.
	Pulse_Train_INTEN_PT11_Msk = 0x800  // Bit mask of PT11 field.
	Pulse_Train_INTEN_PT11     = 0x800  // Bit PT11.
	Pulse_Train_INTEN_PT12_Pos = 0xc    // Position of PT12 field.
	Pulse_Train_INTEN_PT12_Msk = 0x1000 // Bit mask of PT12 field.
	Pulse_Train_INTEN_PT12     = 0x1000 // Bit PT12.
	Pulse_Train_INTEN_PT13_Pos = 0xd    // Position of PT13 field.
	Pulse_Train_INTEN_PT13_Msk = 0x2000 // Bit mask of PT13 field.
	Pulse_Train_INTEN_PT13     = 0x2000 // Bit PT13.
	Pulse_Train_INTEN_PT14_Pos = 0xe    // Position of PT14 field.
	Pulse_Train_INTEN_PT14_Msk = 0x4000 // Bit mask of PT14 field.
	Pulse_Train_INTEN_PT14     = 0x4000 // Bit PT14.
	Pulse_Train_INTEN_PT15_Pos = 0xf    // Position of PT15 field.
	Pulse_Train_INTEN_PT15_Msk = 0x8000 // Bit mask of PT15 field.
	Pulse_Train_INTEN_PT15     = 0x8000 // Bit PT15.
)

// Bitfields for UART0: UART / Serial Port Interface
const (
	// CTRL: UART Control Register
	UARTs_CTRL_UART_EN_Pos      = 0x0       // Position of UART_EN field.
	UARTs_CTRL_UART_EN_Msk      = 0x1       // Bit mask of UART_EN field.
	UARTs_CTRL_UART_EN          = 0x1       // Bit UART_EN.
	UARTs_CTRL_RX_FIFO_EN_Pos   = 0x1       // Position of RX_FIFO_EN field.
	UARTs_CTRL_RX_FIFO_EN_Msk   = 0x2       // Bit mask of RX_FIFO_EN field.
	UARTs_CTRL_RX_FIFO_EN       = 0x2       // Bit RX_FIFO_EN.
	UARTs_CTRL_TX_FIFO_EN_Pos   = 0x2       // Position of TX_FIFO_EN field.
	UARTs_CTRL_TX_FIFO_EN_Msk   = 0x4       // Bit mask of TX_FIFO_EN field.
	UARTs_CTRL_TX_FIFO_EN       = 0x4       // Bit TX_FIFO_EN.
	UARTs_CTRL_DATA_SIZE_Pos    = 0x4       // Position of DATA_SIZE field.
	UARTs_CTRL_DATA_SIZE_Msk    = 0x30      // Bit mask of DATA_SIZE field.
	UARTs_CTRL_EXTRA_STOP_Pos   = 0x8       // Position of EXTRA_STOP field.
	UARTs_CTRL_EXTRA_STOP_Msk   = 0x100     // Bit mask of EXTRA_STOP field.
	UARTs_CTRL_EXTRA_STOP       = 0x100     // Bit EXTRA_STOP.
	UARTs_CTRL_PARITY_Pos       = 0xc       // Position of PARITY field.
	UARTs_CTRL_PARITY_Msk       = 0x3000    // Bit mask of PARITY field.
	UARTs_CTRL_CTS_EN_Pos       = 0x10      // Position of CTS_EN field.
	UARTs_CTRL_CTS_EN_Msk       = 0x10000   // Bit mask of CTS_EN field.
	UARTs_CTRL_CTS_EN           = 0x10000   // Bit CTS_EN.
	UARTs_CTRL_CTS_POLARITY_Pos = 0x11      // Position of CTS_POLARITY field.
	UARTs_CTRL_CTS_POLARITY_Msk = 0x20000   // Bit mask of CTS_POLARITY field.
	UARTs_CTRL_CTS_POLARITY     = 0x20000   // Bit CTS_POLARITY.
	UARTs_CTRL_RTS_EN_Pos       = 0x12      // Position of RTS_EN field.
	UARTs_CTRL_RTS_EN_Msk       = 0x40000   // Bit mask of RTS_EN field.
	UARTs_CTRL_RTS_EN           = 0x40000   // Bit RTS_EN.
	UARTs_CTRL_RTS_POLARITY_Pos = 0x13      // Position of RTS_POLARITY field.
	UARTs_CTRL_RTS_POLARITY_Msk = 0x80000   // Bit mask of RTS_POLARITY field.
	UARTs_CTRL_RTS_POLARITY     = 0x80000   // Bit RTS_POLARITY.
	UARTs_CTRL_RTS_LEVEL_Pos    = 0x14      // Position of RTS_LEVEL field.
	UARTs_CTRL_RTS_LEVEL_Msk    = 0x3f00000 // Bit mask of RTS_LEVEL field.

	// BAUD: UART Baud Control Register
	UARTs_BAUD_BAUD_DIVISOR_Pos = 0x0  // Position of BAUD_DIVISOR field.
	UARTs_BAUD_BAUD_DIVISOR_Msk = 0xff // Bit mask of BAUD_DIVISOR field.

	// TX_FIFO_CTRL: UART TX Fifo Control Register
	UARTs_TX_FIFO_CTRL_FIFO_ENTRY_Pos  = 0x0      // Position of FIFO_ENTRY field.
	UARTs_TX_FIFO_CTRL_FIFO_ENTRY_Msk  = 0x1f     // Bit mask of FIFO_ENTRY field.
	UARTs_TX_FIFO_CTRL_FIFO_AE_LVL_Pos = 0x10     // Position of FIFO_AE_LVL field.
	UARTs_TX_FIFO_CTRL_FIFO_AE_LVL_Msk = 0x3f0000 // Bit mask of FIFO_AE_LVL field.

	// RX_FIFO_CTRL: UART RX Fifo Control Register
	UARTs_RX_FIFO_CTRL_FIFO_ENTRY_Pos  = 0x0      // Position of FIFO_ENTRY field.
	UARTs_RX_FIFO_CTRL_FIFO_ENTRY_Msk  = 0x1f     // Bit mask of FIFO_ENTRY field.
	UARTs_RX_FIFO_CTRL_FIFO_AF_LVL_Pos = 0x10     // Position of FIFO_AF_LVL field.
	UARTs_RX_FIFO_CTRL_FIFO_AF_LVL_Msk = 0x3f0000 // Bit mask of FIFO_AF_LVL field.

	// MD_CTRL: UART Multidrop Control Register
	UARTs_MD_CTRL_SLAVE_ADDR_Pos     = 0x0     // Position of SLAVE_ADDR field.
	UARTs_MD_CTRL_SLAVE_ADDR_Msk     = 0xff    // Bit mask of SLAVE_ADDR field.
	UARTs_MD_CTRL_SLAVE_ADDR_MSK_Pos = 0x8     // Position of SLAVE_ADDR_MSK field.
	UARTs_MD_CTRL_SLAVE_ADDR_MSK_Msk = 0xff00  // Bit mask of SLAVE_ADDR_MSK field.
	UARTs_MD_CTRL_MD_MSTR_Pos        = 0x10    // Position of MD_MSTR field.
	UARTs_MD_CTRL_MD_MSTR_Msk        = 0x10000 // Bit mask of MD_MSTR field.
	UARTs_MD_CTRL_MD_MSTR            = 0x10000 // Bit MD_MSTR.
	UARTs_MD_CTRL_TX_ADDR_MARK_Pos   = 0x11    // Position of TX_ADDR_MARK field.
	UARTs_MD_CTRL_TX_ADDR_MARK_Msk   = 0x20000 // Bit mask of TX_ADDR_MARK field.
	UARTs_MD_CTRL_TX_ADDR_MARK       = 0x20000 // Bit TX_ADDR_MARK.

	// INTFL: UART Interrupt Flags
	UARTs_INTFL_TX_DONE_Pos           = 0x0   // Position of TX_DONE field.
	UARTs_INTFL_TX_DONE_Msk           = 0x1   // Bit mask of TX_DONE field.
	UARTs_INTFL_TX_DONE               = 0x1   // Bit TX_DONE.
	UARTs_INTFL_TX_UNSTALLED_Pos      = 0x1   // Position of TX_UNSTALLED field.
	UARTs_INTFL_TX_UNSTALLED_Msk      = 0x2   // Bit mask of TX_UNSTALLED field.
	UARTs_INTFL_TX_UNSTALLED          = 0x2   // Bit TX_UNSTALLED.
	UARTs_INTFL_TX_FIFO_AE_Pos        = 0x2   // Position of TX_FIFO_AE field.
	UARTs_INTFL_TX_FIFO_AE_Msk        = 0x4   // Bit mask of TX_FIFO_AE field.
	UARTs_INTFL_TX_FIFO_AE            = 0x4   // Bit TX_FIFO_AE.
	UARTs_INTFL_RX_FIFO_NOT_EMPTY_Pos = 0x3   // Position of RX_FIFO_NOT_EMPTY field.
	UARTs_INTFL_RX_FIFO_NOT_EMPTY_Msk = 0x8   // Bit mask of RX_FIFO_NOT_EMPTY field.
	UARTs_INTFL_RX_FIFO_NOT_EMPTY     = 0x8   // Bit RX_FIFO_NOT_EMPTY.
	UARTs_INTFL_RX_STALLED_Pos        = 0x4   // Position of RX_STALLED field.
	UARTs_INTFL_RX_STALLED_Msk        = 0x10  // Bit mask of RX_STALLED field.
	UARTs_INTFL_RX_STALLED            = 0x10  // Bit RX_STALLED.
	UARTs_INTFL_RX_FIFO_AF_Pos        = 0x5   // Position of RX_FIFO_AF field.
	UARTs_INTFL_RX_FIFO_AF_Msk        = 0x20  // Bit mask of RX_FIFO_AF field.
	UARTs_INTFL_RX_FIFO_AF            = 0x20  // Bit RX_FIFO_AF.
	UARTs_INTFL_RX_FIFO_OVERFLOW_Pos  = 0x6   // Position of RX_FIFO_OVERFLOW field.
	UARTs_INTFL_RX_FIFO_OVERFLOW_Msk  = 0x40  // Bit mask of RX_FIFO_OVERFLOW field.
	UARTs_INTFL_RX_FIFO_OVERFLOW      = 0x40  // Bit RX_FIFO_OVERFLOW.
	UARTs_INTFL_RX_FRAMING_ERR_Pos    = 0x7   // Position of RX_FRAMING_ERR field.
	UARTs_INTFL_RX_FRAMING_ERR_Msk    = 0x80  // Bit mask of RX_FRAMING_ERR field.
	UARTs_INTFL_RX_FRAMING_ERR        = 0x80  // Bit RX_FRAMING_ERR.
	UARTs_INTFL_RX_PARITY_ERR_Pos     = 0x8   // Position of RX_PARITY_ERR field.
	UARTs_INTFL_RX_PARITY_ERR_Msk     = 0x100 // Bit mask of RX_PARITY_ERR field.
	UARTs_INTFL_RX_PARITY_ERR         = 0x100 // Bit RX_PARITY_ERR.

	// INTEN: UART Interrupt Enable/Disable Controls
	UARTs_INTEN_TX_DONE_Pos           = 0x0   // Position of TX_DONE field.
	UARTs_INTEN_TX_DONE_Msk           = 0x1   // Bit mask of TX_DONE field.
	UARTs_INTEN_TX_DONE               = 0x1   // Bit TX_DONE.
	UARTs_INTEN_TX_UNSTALLED_Pos      = 0x1   // Position of TX_UNSTALLED field.
	UARTs_INTEN_TX_UNSTALLED_Msk      = 0x2   // Bit mask of TX_UNSTALLED field.
	UARTs_INTEN_TX_UNSTALLED          = 0x2   // Bit TX_UNSTALLED.
	UARTs_INTEN_TX_FIFO_AE_Pos        = 0x2   // Position of TX_FIFO_AE field.
	UARTs_INTEN_TX_FIFO_AE_Msk        = 0x4   // Bit mask of TX_FIFO_AE field.
	UARTs_INTEN_TX_FIFO_AE            = 0x4   // Bit TX_FIFO_AE.
	UARTs_INTEN_RX_FIFO_NOT_EMPTY_Pos = 0x3   // Position of RX_FIFO_NOT_EMPTY field.
	UARTs_INTEN_RX_FIFO_NOT_EMPTY_Msk = 0x8   // Bit mask of RX_FIFO_NOT_EMPTY field.
	UARTs_INTEN_RX_FIFO_NOT_EMPTY     = 0x8   // Bit RX_FIFO_NOT_EMPTY.
	UARTs_INTEN_RX_STALLED_Pos        = 0x4   // Position of RX_STALLED field.
	UARTs_INTEN_RX_STALLED_Msk        = 0x10  // Bit mask of RX_STALLED field.
	UARTs_INTEN_RX_STALLED            = 0x10  // Bit RX_STALLED.
	UARTs_INTEN_RX_FIFO_AF_Pos        = 0x5   // Position of RX_FIFO_AF field.
	UARTs_INTEN_RX_FIFO_AF_Msk        = 0x20  // Bit mask of RX_FIFO_AF field.
	UARTs_INTEN_RX_FIFO_AF            = 0x20  // Bit RX_FIFO_AF.
	UARTs_INTEN_RX_FIFO_OVERFLOW_Pos  = 0x6   // Position of RX_FIFO_OVERFLOW field.
	UARTs_INTEN_RX_FIFO_OVERFLOW_Msk  = 0x40  // Bit mask of RX_FIFO_OVERFLOW field.
	UARTs_INTEN_RX_FIFO_OVERFLOW      = 0x40  // Bit RX_FIFO_OVERFLOW.
	UARTs_INTEN_RX_FRAMING_ERR_Pos    = 0x7   // Position of RX_FRAMING_ERR field.
	UARTs_INTEN_RX_FRAMING_ERR_Msk    = 0x80  // Bit mask of RX_FRAMING_ERR field.
	UARTs_INTEN_RX_FRAMING_ERR        = 0x80  // Bit RX_FRAMING_ERR.
	UARTs_INTEN_RX_PARITY_ERR_Pos     = 0x8   // Position of RX_PARITY_ERR field.
	UARTs_INTEN_RX_PARITY_ERR_Msk     = 0x100 // Bit mask of RX_PARITY_ERR field.
	UARTs_INTEN_RX_PARITY_ERR         = 0x100 // Bit RX_PARITY_ERR.
)

// Bitfields for I2CM0: I2C Master 0 Interface
const (
	// FS_CLK_DIV: Full Speed SCL Clock Settings
	I2C_Master_FS_CLK_DIV_FS_FILTER_CLK_DIV_Pos = 0x0        // Position of FS_FILTER_CLK_DIV field.
	I2C_Master_FS_CLK_DIV_FS_FILTER_CLK_DIV_Msk = 0xff       // Bit mask of FS_FILTER_CLK_DIV field.
	I2C_Master_FS_CLK_DIV_FS_SCL_LO_CNT_Pos     = 0x8        // Position of FS_SCL_LO_CNT field.
	I2C_Master_FS_CLK_DIV_FS_SCL_LO_CNT_Msk     = 0xfff00    // Bit mask of FS_SCL_LO_CNT field.
	I2C_Master_FS_CLK_DIV_FS_SCL_HI_CNT_Pos     = 0x14       // Position of FS_SCL_HI_CNT field.
	I2C_Master_FS_CLK_DIV_FS_SCL_HI_CNT_Msk     = 0xfff00000 // Bit mask of FS_SCL_HI_CNT field.

	// TIMEOUT: Timeout and Auto-Stop Settings
	I2C_Master_TIMEOUT_TX_TIMEOUT_Pos   = 0x10      // Position of TX_TIMEOUT field.
	I2C_Master_TIMEOUT_TX_TIMEOUT_Msk   = 0xff0000  // Bit mask of TX_TIMEOUT field.
	I2C_Master_TIMEOUT_AUTO_STOP_EN_Pos = 0x18      // Position of AUTO_STOP_EN field.
	I2C_Master_TIMEOUT_AUTO_STOP_EN_Msk = 0x1000000 // Bit mask of AUTO_STOP_EN field.
	I2C_Master_TIMEOUT_AUTO_STOP_EN     = 0x1000000 // Bit AUTO_STOP_EN.

	// CTRL: I2C Master Control Register
	I2C_Master_CTRL_TX_FIFO_EN_Pos    = 0x2  // Position of TX_FIFO_EN field.
	I2C_Master_CTRL_TX_FIFO_EN_Msk    = 0x4  // Bit mask of TX_FIFO_EN field.
	I2C_Master_CTRL_TX_FIFO_EN        = 0x4  // Bit TX_FIFO_EN.
	I2C_Master_CTRL_RX_FIFO_EN_Pos    = 0x3  // Position of RX_FIFO_EN field.
	I2C_Master_CTRL_RX_FIFO_EN_Msk    = 0x8  // Bit mask of RX_FIFO_EN field.
	I2C_Master_CTRL_RX_FIFO_EN        = 0x8  // Bit RX_FIFO_EN.
	I2C_Master_CTRL_MSTR_RESET_EN_Pos = 0x7  // Position of MSTR_RESET_EN field.
	I2C_Master_CTRL_MSTR_RESET_EN_Msk = 0x80 // Bit mask of MSTR_RESET_EN field.
	I2C_Master_CTRL_MSTR_RESET_EN     = 0x80 // Bit MSTR_RESET_EN.

	// TRANS: I2C Master Transaction Start and Status Flags
	I2C_Master_TRANS_TX_START_Pos       = 0x0  // Position of TX_START field.
	I2C_Master_TRANS_TX_START_Msk       = 0x1  // Bit mask of TX_START field.
	I2C_Master_TRANS_TX_START           = 0x1  // Bit TX_START.
	I2C_Master_TRANS_TX_IN_PROGRESS_Pos = 0x1  // Position of TX_IN_PROGRESS field.
	I2C_Master_TRANS_TX_IN_PROGRESS_Msk = 0x2  // Bit mask of TX_IN_PROGRESS field.
	I2C_Master_TRANS_TX_IN_PROGRESS     = 0x2  // Bit TX_IN_PROGRESS.
	I2C_Master_TRANS_TX_DONE_Pos        = 0x2  // Position of TX_DONE field.
	I2C_Master_TRANS_TX_DONE_Msk        = 0x4  // Bit mask of TX_DONE field.
	I2C_Master_TRANS_TX_DONE            = 0x4  // Bit TX_DONE.
	I2C_Master_TRANS_TX_NACKED_Pos      = 0x3  // Position of TX_NACKED field.
	I2C_Master_TRANS_TX_NACKED_Msk      = 0x8  // Bit mask of TX_NACKED field.
	I2C_Master_TRANS_TX_NACKED          = 0x8  // Bit TX_NACKED.
	I2C_Master_TRANS_TX_LOST_ARBITR_Pos = 0x4  // Position of TX_LOST_ARBITR field.
	I2C_Master_TRANS_TX_LOST_ARBITR_Msk = 0x10 // Bit mask of TX_LOST_ARBITR field.
	I2C_Master_TRANS_TX_LOST_ARBITR     = 0x10 // Bit TX_LOST_ARBITR.
	I2C_Master_TRANS_TX_TIMEOUT_Pos     = 0x5  // Position of TX_TIMEOUT field.
	I2C_Master_TRANS_TX_TIMEOUT_Msk     = 0x20 // Bit mask of TX_TIMEOUT field.
	I2C_Master_TRANS_TX_TIMEOUT         = 0x20 // Bit TX_TIMEOUT.

	// INTFL: Interrupt Flags
	I2C_Master_INTFL_TX_DONE_Pos          = 0x0   // Position of TX_DONE field.
	I2C_Master_INTFL_TX_DONE_Msk          = 0x1   // Bit mask of TX_DONE field.
	I2C_Master_INTFL_TX_DONE              = 0x1   // Bit TX_DONE.
	I2C_Master_INTFL_TX_NACKED_Pos        = 0x1   // Position of TX_NACKED field.
	I2C_Master_INTFL_TX_NACKED_Msk        = 0x2   // Bit mask of TX_NACKED field.
	I2C_Master_INTFL_TX_NACKED            = 0x2   // Bit TX_NACKED.
	I2C_Master_INTFL_TX_LOST_ARBITR_Pos   = 0x2   // Position of TX_LOST_ARBITR field.
	I2C_Master_INTFL_TX_LOST_ARBITR_Msk   = 0x4   // Bit mask of TX_LOST_ARBITR field.
	I2C_Master_INTFL_TX_LOST_ARBITR       = 0x4   // Bit TX_LOST_ARBITR.
	I2C_Master_INTFL_TX_TIMEOUT_Pos       = 0x3   // Position of TX_TIMEOUT field.
	I2C_Master_INTFL_TX_TIMEOUT_Msk       = 0x8   // Bit mask of TX_TIMEOUT field.
	I2C_Master_INTFL_TX_TIMEOUT           = 0x8   // Bit TX_TIMEOUT.
	I2C_Master_INTFL_TX_FIFO_EMPTY_Pos    = 0x4   // Position of TX_FIFO_EMPTY field.
	I2C_Master_INTFL_TX_FIFO_EMPTY_Msk    = 0x10  // Bit mask of TX_FIFO_EMPTY field.
	I2C_Master_INTFL_TX_FIFO_EMPTY        = 0x10  // Bit TX_FIFO_EMPTY.
	I2C_Master_INTFL_TX_FIFO_3Q_EMPTY_Pos = 0x5   // Position of TX_FIFO_3Q_EMPTY field.
	I2C_Master_INTFL_TX_FIFO_3Q_EMPTY_Msk = 0x20  // Bit mask of TX_FIFO_3Q_EMPTY field.
	I2C_Master_INTFL_TX_FIFO_3Q_EMPTY     = 0x20  // Bit TX_FIFO_3Q_EMPTY.
	I2C_Master_INTFL_RX_FIFO_EMPTY_Pos    = 0x6   // Position of RX_FIFO_EMPTY field.
	I2C_Master_INTFL_RX_FIFO_EMPTY_Msk    = 0x40  // Bit mask of RX_FIFO_EMPTY field.
	I2C_Master_INTFL_RX_FIFO_EMPTY        = 0x40  // Bit RX_FIFO_EMPTY.
	I2C_Master_INTFL_RX_FIFO_2Q_FULL_Pos  = 0x7   // Position of RX_FIFO_2Q_FULL field.
	I2C_Master_INTFL_RX_FIFO_2Q_FULL_Msk  = 0x80  // Bit mask of RX_FIFO_2Q_FULL field.
	I2C_Master_INTFL_RX_FIFO_2Q_FULL      = 0x80  // Bit RX_FIFO_2Q_FULL.
	I2C_Master_INTFL_RX_FIFO_3Q_FULL_Pos  = 0x8   // Position of RX_FIFO_3Q_FULL field.
	I2C_Master_INTFL_RX_FIFO_3Q_FULL_Msk  = 0x100 // Bit mask of RX_FIFO_3Q_FULL field.
	I2C_Master_INTFL_RX_FIFO_3Q_FULL      = 0x100 // Bit RX_FIFO_3Q_FULL.
	I2C_Master_INTFL_RX_FIFO_FULL_Pos     = 0x9   // Position of RX_FIFO_FULL field.
	I2C_Master_INTFL_RX_FIFO_FULL_Msk     = 0x200 // Bit mask of RX_FIFO_FULL field.
	I2C_Master_INTFL_RX_FIFO_FULL         = 0x200 // Bit RX_FIFO_FULL.

	// INTEN: Interrupt Enable/Disable Controls
	I2C_Master_INTEN_TX_DONE_Pos          = 0x0   // Position of TX_DONE field.
	I2C_Master_INTEN_TX_DONE_Msk          = 0x1   // Bit mask of TX_DONE field.
	I2C_Master_INTEN_TX_DONE              = 0x1   // Bit TX_DONE.
	I2C_Master_INTEN_TX_NACKED_Pos        = 0x1   // Position of TX_NACKED field.
	I2C_Master_INTEN_TX_NACKED_Msk        = 0x2   // Bit mask of TX_NACKED field.
	I2C_Master_INTEN_TX_NACKED            = 0x2   // Bit TX_NACKED.
	I2C_Master_INTEN_TX_LOST_ARBITR_Pos   = 0x2   // Position of TX_LOST_ARBITR field.
	I2C_Master_INTEN_TX_LOST_ARBITR_Msk   = 0x4   // Bit mask of TX_LOST_ARBITR field.
	I2C_Master_INTEN_TX_LOST_ARBITR       = 0x4   // Bit TX_LOST_ARBITR.
	I2C_Master_INTEN_TX_TIMEOUT_Pos       = 0x3   // Position of TX_TIMEOUT field.
	I2C_Master_INTEN_TX_TIMEOUT_Msk       = 0x8   // Bit mask of TX_TIMEOUT field.
	I2C_Master_INTEN_TX_TIMEOUT           = 0x8   // Bit TX_TIMEOUT.
	I2C_Master_INTEN_TX_FIFO_EMPTY_Pos    = 0x4   // Position of TX_FIFO_EMPTY field.
	I2C_Master_INTEN_TX_FIFO_EMPTY_Msk    = 0x10  // Bit mask of TX_FIFO_EMPTY field.
	I2C_Master_INTEN_TX_FIFO_EMPTY        = 0x10  // Bit TX_FIFO_EMPTY.
	I2C_Master_INTEN_TX_FIFO_3Q_EMPTY_Pos = 0x5   // Position of TX_FIFO_3Q_EMPTY field.
	I2C_Master_INTEN_TX_FIFO_3Q_EMPTY_Msk = 0x20  // Bit mask of TX_FIFO_3Q_EMPTY field.
	I2C_Master_INTEN_TX_FIFO_3Q_EMPTY     = 0x20  // Bit TX_FIFO_3Q_EMPTY.
	I2C_Master_INTEN_RX_FIFO_EMPTY_Pos    = 0x6   // Position of RX_FIFO_EMPTY field.
	I2C_Master_INTEN_RX_FIFO_EMPTY_Msk    = 0x40  // Bit mask of RX_FIFO_EMPTY field.
	I2C_Master_INTEN_RX_FIFO_EMPTY        = 0x40  // Bit RX_FIFO_EMPTY.
	I2C_Master_INTEN_RX_FIFO_2Q_FULL_Pos  = 0x7   // Position of RX_FIFO_2Q_FULL field.
	I2C_Master_INTEN_RX_FIFO_2Q_FULL_Msk  = 0x80  // Bit mask of RX_FIFO_2Q_FULL field.
	I2C_Master_INTEN_RX_FIFO_2Q_FULL      = 0x80  // Bit RX_FIFO_2Q_FULL.
	I2C_Master_INTEN_RX_FIFO_3Q_FULL_Pos  = 0x8   // Position of RX_FIFO_3Q_FULL field.
	I2C_Master_INTEN_RX_FIFO_3Q_FULL_Msk  = 0x100 // Bit mask of RX_FIFO_3Q_FULL field.
	I2C_Master_INTEN_RX_FIFO_3Q_FULL      = 0x100 // Bit RX_FIFO_3Q_FULL.
	I2C_Master_INTEN_RX_FIFO_FULL_Pos     = 0x9   // Position of RX_FIFO_FULL field.
	I2C_Master_INTEN_RX_FIFO_FULL_Msk     = 0x200 // Bit mask of RX_FIFO_FULL field.
	I2C_Master_INTEN_RX_FIFO_FULL         = 0x200 // Bit RX_FIFO_FULL.

	// BB: Bit-Bang Control Register
	I2C_Master_BB_BB_SCL_OUT_Pos    = 0x0      // Position of BB_SCL_OUT field.
	I2C_Master_BB_BB_SCL_OUT_Msk    = 0x1      // Bit mask of BB_SCL_OUT field.
	I2C_Master_BB_BB_SCL_OUT        = 0x1      // Bit BB_SCL_OUT.
	I2C_Master_BB_BB_SDA_OUT_Pos    = 0x1      // Position of BB_SDA_OUT field.
	I2C_Master_BB_BB_SDA_OUT_Msk    = 0x2      // Bit mask of BB_SDA_OUT field.
	I2C_Master_BB_BB_SDA_OUT        = 0x2      // Bit BB_SDA_OUT.
	I2C_Master_BB_BB_SCL_IN_VAL_Pos = 0x2      // Position of BB_SCL_IN_VAL field.
	I2C_Master_BB_BB_SCL_IN_VAL_Msk = 0x4      // Bit mask of BB_SCL_IN_VAL field.
	I2C_Master_BB_BB_SCL_IN_VAL     = 0x4      // Bit BB_SCL_IN_VAL.
	I2C_Master_BB_BB_SDA_IN_VAL_Pos = 0x3      // Position of BB_SDA_IN_VAL field.
	I2C_Master_BB_BB_SDA_IN_VAL_Msk = 0x8      // Bit mask of BB_SDA_IN_VAL field.
	I2C_Master_BB_BB_SDA_IN_VAL     = 0x8      // Bit BB_SDA_IN_VAL.
	I2C_Master_BB_RX_FIFO_CNT_Pos   = 0x10     // Position of RX_FIFO_CNT field.
	I2C_Master_BB_RX_FIFO_CNT_Msk   = 0x1f0000 // Bit mask of RX_FIFO_CNT field.
)

// Bitfields for I2CS: I2C Slave Interface
const (
	// CLK_DIV: I2C Slave Clock Divisor Control
	I2C_Slave_CLK_DIV_FS_FILTER_CLOCK_DIV_Pos = 0x0  // Position of FS_FILTER_CLOCK_DIV field.
	I2C_Slave_CLK_DIV_FS_FILTER_CLOCK_DIV_Msk = 0xff // Bit mask of FS_FILTER_CLOCK_DIV field.

	// DEV_ID: I2C Slave Device ID Register
	I2C_Slave_DEV_ID_SLAVE_DEV_ID_Pos    = 0x0    // Position of SLAVE_DEV_ID field.
	I2C_Slave_DEV_ID_SLAVE_DEV_ID_Msk    = 0x3ff  // Bit mask of SLAVE_DEV_ID field.
	I2C_Slave_DEV_ID_TEN_BIT_ID_MODE_Pos = 0xc    // Position of TEN_BIT_ID_MODE field.
	I2C_Slave_DEV_ID_TEN_BIT_ID_MODE_Msk = 0x1000 // Bit mask of TEN_BIT_ID_MODE field.
	I2C_Slave_DEV_ID_TEN_BIT_ID_MODE     = 0x1000 // Bit TEN_BIT_ID_MODE.
	I2C_Slave_DEV_ID_SLAVE_RESET_Pos     = 0xe    // Position of SLAVE_RESET field.
	I2C_Slave_DEV_ID_SLAVE_RESET_Msk     = 0x4000 // Bit mask of SLAVE_RESET field.
	I2C_Slave_DEV_ID_SLAVE_RESET         = 0x4000 // Bit SLAVE_RESET.

	// INTFL: I2CS Interrupt Flags
	I2C_Slave_INTFL_BYTE0_Pos  = 0x0        // Position of BYTE0 field.
	I2C_Slave_INTFL_BYTE0_Msk  = 0x1        // Bit mask of BYTE0 field.
	I2C_Slave_INTFL_BYTE0      = 0x1        // Bit BYTE0.
	I2C_Slave_INTFL_BYTE1_Pos  = 0x1        // Position of BYTE1 field.
	I2C_Slave_INTFL_BYTE1_Msk  = 0x2        // Bit mask of BYTE1 field.
	I2C_Slave_INTFL_BYTE1      = 0x2        // Bit BYTE1.
	I2C_Slave_INTFL_BYTE2_Pos  = 0x2        // Position of BYTE2 field.
	I2C_Slave_INTFL_BYTE2_Msk  = 0x4        // Bit mask of BYTE2 field.
	I2C_Slave_INTFL_BYTE2      = 0x4        // Bit BYTE2.
	I2C_Slave_INTFL_BYTE3_Pos  = 0x3        // Position of BYTE3 field.
	I2C_Slave_INTFL_BYTE3_Msk  = 0x8        // Bit mask of BYTE3 field.
	I2C_Slave_INTFL_BYTE3      = 0x8        // Bit BYTE3.
	I2C_Slave_INTFL_BYTE4_Pos  = 0x4        // Position of BYTE4 field.
	I2C_Slave_INTFL_BYTE4_Msk  = 0x10       // Bit mask of BYTE4 field.
	I2C_Slave_INTFL_BYTE4      = 0x10       // Bit BYTE4.
	I2C_Slave_INTFL_BYTE5_Pos  = 0x5        // Position of BYTE5 field.
	I2C_Slave_INTFL_BYTE5_Msk  = 0x20       // Bit mask of BYTE5 field.
	I2C_Slave_INTFL_BYTE5      = 0x20       // Bit BYTE5.
	I2C_Slave_INTFL_BYTE6_Pos  = 0x6        // Position of BYTE6 field.
	I2C_Slave_INTFL_BYTE6_Msk  = 0x40       // Bit mask of BYTE6 field.
	I2C_Slave_INTFL_BYTE6      = 0x40       // Bit BYTE6.
	I2C_Slave_INTFL_BYTE7_Pos  = 0x7        // Position of BYTE7 field.
	I2C_Slave_INTFL_BYTE7_Msk  = 0x80       // Bit mask of BYTE7 field.
	I2C_Slave_INTFL_BYTE7      = 0x80       // Bit BYTE7.
	I2C_Slave_INTFL_BYTE8_Pos  = 0x8        // Position of BYTE8 field.
	I2C_Slave_INTFL_BYTE8_Msk  = 0x100      // Bit mask of BYTE8 field.
	I2C_Slave_INTFL_BYTE8      = 0x100      // Bit BYTE8.
	I2C_Slave_INTFL_BYTE9_Pos  = 0x9        // Position of BYTE9 field.
	I2C_Slave_INTFL_BYTE9_Msk  = 0x200      // Bit mask of BYTE9 field.
	I2C_Slave_INTFL_BYTE9      = 0x200      // Bit BYTE9.
	I2C_Slave_INTFL_BYTE10_Pos = 0xa        // Position of BYTE10 field.
	I2C_Slave_INTFL_BYTE10_Msk = 0x400      // Bit mask of BYTE10 field.
	I2C_Slave_INTFL_BYTE10     = 0x400      // Bit BYTE10.
	I2C_Slave_INTFL_BYTE11_Pos = 0xb        // Position of BYTE11 field.
	I2C_Slave_INTFL_BYTE11_Msk = 0x800      // Bit mask of BYTE11 field.
	I2C_Slave_INTFL_BYTE11     = 0x800      // Bit BYTE11.
	I2C_Slave_INTFL_BYTE12_Pos = 0xc        // Position of BYTE12 field.
	I2C_Slave_INTFL_BYTE12_Msk = 0x1000     // Bit mask of BYTE12 field.
	I2C_Slave_INTFL_BYTE12     = 0x1000     // Bit BYTE12.
	I2C_Slave_INTFL_BYTE13_Pos = 0xd        // Position of BYTE13 field.
	I2C_Slave_INTFL_BYTE13_Msk = 0x2000     // Bit mask of BYTE13 field.
	I2C_Slave_INTFL_BYTE13     = 0x2000     // Bit BYTE13.
	I2C_Slave_INTFL_BYTE14_Pos = 0xe        // Position of BYTE14 field.
	I2C_Slave_INTFL_BYTE14_Msk = 0x4000     // Bit mask of BYTE14 field.
	I2C_Slave_INTFL_BYTE14     = 0x4000     // Bit BYTE14.
	I2C_Slave_INTFL_BYTE15_Pos = 0xf        // Position of BYTE15 field.
	I2C_Slave_INTFL_BYTE15_Msk = 0x8000     // Bit mask of BYTE15 field.
	I2C_Slave_INTFL_BYTE15     = 0x8000     // Bit BYTE15.
	I2C_Slave_INTFL_BYTE16_Pos = 0x10       // Position of BYTE16 field.
	I2C_Slave_INTFL_BYTE16_Msk = 0x10000    // Bit mask of BYTE16 field.
	I2C_Slave_INTFL_BYTE16     = 0x10000    // Bit BYTE16.
	I2C_Slave_INTFL_BYTE17_Pos = 0x11       // Position of BYTE17 field.
	I2C_Slave_INTFL_BYTE17_Msk = 0x20000    // Bit mask of BYTE17 field.
	I2C_Slave_INTFL_BYTE17     = 0x20000    // Bit BYTE17.
	I2C_Slave_INTFL_BYTE18_Pos = 0x12       // Position of BYTE18 field.
	I2C_Slave_INTFL_BYTE18_Msk = 0x40000    // Bit mask of BYTE18 field.
	I2C_Slave_INTFL_BYTE18     = 0x40000    // Bit BYTE18.
	I2C_Slave_INTFL_BYTE19_Pos = 0x13       // Position of BYTE19 field.
	I2C_Slave_INTFL_BYTE19_Msk = 0x80000    // Bit mask of BYTE19 field.
	I2C_Slave_INTFL_BYTE19     = 0x80000    // Bit BYTE19.
	I2C_Slave_INTFL_BYTE20_Pos = 0x14       // Position of BYTE20 field.
	I2C_Slave_INTFL_BYTE20_Msk = 0x100000   // Bit mask of BYTE20 field.
	I2C_Slave_INTFL_BYTE20     = 0x100000   // Bit BYTE20.
	I2C_Slave_INTFL_BYTE21_Pos = 0x15       // Position of BYTE21 field.
	I2C_Slave_INTFL_BYTE21_Msk = 0x200000   // Bit mask of BYTE21 field.
	I2C_Slave_INTFL_BYTE21     = 0x200000   // Bit BYTE21.
	I2C_Slave_INTFL_BYTE22_Pos = 0x16       // Position of BYTE22 field.
	I2C_Slave_INTFL_BYTE22_Msk = 0x400000   // Bit mask of BYTE22 field.
	I2C_Slave_INTFL_BYTE22     = 0x400000   // Bit BYTE22.
	I2C_Slave_INTFL_BYTE23_Pos = 0x17       // Position of BYTE23 field.
	I2C_Slave_INTFL_BYTE23_Msk = 0x800000   // Bit mask of BYTE23 field.
	I2C_Slave_INTFL_BYTE23     = 0x800000   // Bit BYTE23.
	I2C_Slave_INTFL_BYTE24_Pos = 0x18       // Position of BYTE24 field.
	I2C_Slave_INTFL_BYTE24_Msk = 0x1000000  // Bit mask of BYTE24 field.
	I2C_Slave_INTFL_BYTE24     = 0x1000000  // Bit BYTE24.
	I2C_Slave_INTFL_BYTE25_Pos = 0x19       // Position of BYTE25 field.
	I2C_Slave_INTFL_BYTE25_Msk = 0x2000000  // Bit mask of BYTE25 field.
	I2C_Slave_INTFL_BYTE25     = 0x2000000  // Bit BYTE25.
	I2C_Slave_INTFL_BYTE26_Pos = 0x1a       // Position of BYTE26 field.
	I2C_Slave_INTFL_BYTE26_Msk = 0x4000000  // Bit mask of BYTE26 field.
	I2C_Slave_INTFL_BYTE26     = 0x4000000  // Bit BYTE26.
	I2C_Slave_INTFL_BYTE27_Pos = 0x1b       // Position of BYTE27 field.
	I2C_Slave_INTFL_BYTE27_Msk = 0x8000000  // Bit mask of BYTE27 field.
	I2C_Slave_INTFL_BYTE27     = 0x8000000  // Bit BYTE27.
	I2C_Slave_INTFL_BYTE28_Pos = 0x1c       // Position of BYTE28 field.
	I2C_Slave_INTFL_BYTE28_Msk = 0x10000000 // Bit mask of BYTE28 field.
	I2C_Slave_INTFL_BYTE28     = 0x10000000 // Bit BYTE28.
	I2C_Slave_INTFL_BYTE29_Pos = 0x1d       // Position of BYTE29 field.
	I2C_Slave_INTFL_BYTE29_Msk = 0x20000000 // Bit mask of BYTE29 field.
	I2C_Slave_INTFL_BYTE29     = 0x20000000 // Bit BYTE29.
	I2C_Slave_INTFL_BYTE30_Pos = 0x1e       // Position of BYTE30 field.
	I2C_Slave_INTFL_BYTE30_Msk = 0x40000000 // Bit mask of BYTE30 field.
	I2C_Slave_INTFL_BYTE30     = 0x40000000 // Bit BYTE30.
	I2C_Slave_INTFL_BYTE31_Pos = 0x1f       // Position of BYTE31 field.
	I2C_Slave_INTFL_BYTE31_Msk = 0x80000000 // Bit mask of BYTE31 field.
	I2C_Slave_INTFL_BYTE31     = 0x80000000 // Bit BYTE31.

	// INTEN: I2CS Interrupt Enable/Disable Controls
	I2C_Slave_INTEN_BYTE0_Pos  = 0x0        // Position of BYTE0 field.
	I2C_Slave_INTEN_BYTE0_Msk  = 0x1        // Bit mask of BYTE0 field.
	I2C_Slave_INTEN_BYTE0      = 0x1        // Bit BYTE0.
	I2C_Slave_INTEN_BYTE1_Pos  = 0x1        // Position of BYTE1 field.
	I2C_Slave_INTEN_BYTE1_Msk  = 0x2        // Bit mask of BYTE1 field.
	I2C_Slave_INTEN_BYTE1      = 0x2        // Bit BYTE1.
	I2C_Slave_INTEN_BYTE2_Pos  = 0x2        // Position of BYTE2 field.
	I2C_Slave_INTEN_BYTE2_Msk  = 0x4        // Bit mask of BYTE2 field.
	I2C_Slave_INTEN_BYTE2      = 0x4        // Bit BYTE2.
	I2C_Slave_INTEN_BYTE3_Pos  = 0x3        // Position of BYTE3 field.
	I2C_Slave_INTEN_BYTE3_Msk  = 0x8        // Bit mask of BYTE3 field.
	I2C_Slave_INTEN_BYTE3      = 0x8        // Bit BYTE3.
	I2C_Slave_INTEN_BYTE4_Pos  = 0x4        // Position of BYTE4 field.
	I2C_Slave_INTEN_BYTE4_Msk  = 0x10       // Bit mask of BYTE4 field.
	I2C_Slave_INTEN_BYTE4      = 0x10       // Bit BYTE4.
	I2C_Slave_INTEN_BYTE5_Pos  = 0x5        // Position of BYTE5 field.
	I2C_Slave_INTEN_BYTE5_Msk  = 0x20       // Bit mask of BYTE5 field.
	I2C_Slave_INTEN_BYTE5      = 0x20       // Bit BYTE5.
	I2C_Slave_INTEN_BYTE6_Pos  = 0x6        // Position of BYTE6 field.
	I2C_Slave_INTEN_BYTE6_Msk  = 0x40       // Bit mask of BYTE6 field.
	I2C_Slave_INTEN_BYTE6      = 0x40       // Bit BYTE6.
	I2C_Slave_INTEN_BYTE7_Pos  = 0x7        // Position of BYTE7 field.
	I2C_Slave_INTEN_BYTE7_Msk  = 0x80       // Bit mask of BYTE7 field.
	I2C_Slave_INTEN_BYTE7      = 0x80       // Bit BYTE7.
	I2C_Slave_INTEN_BYTE8_Pos  = 0x8        // Position of BYTE8 field.
	I2C_Slave_INTEN_BYTE8_Msk  = 0x100      // Bit mask of BYTE8 field.
	I2C_Slave_INTEN_BYTE8      = 0x100      // Bit BYTE8.
	I2C_Slave_INTEN_BYTE9_Pos  = 0x9        // Position of BYTE9 field.
	I2C_Slave_INTEN_BYTE9_Msk  = 0x200      // Bit mask of BYTE9 field.
	I2C_Slave_INTEN_BYTE9      = 0x200      // Bit BYTE9.
	I2C_Slave_INTEN_BYTE10_Pos = 0xa        // Position of BYTE10 field.
	I2C_Slave_INTEN_BYTE10_Msk = 0x400      // Bit mask of BYTE10 field.
	I2C_Slave_INTEN_BYTE10     = 0x400      // Bit BYTE10.
	I2C_Slave_INTEN_BYTE11_Pos = 0xb        // Position of BYTE11 field.
	I2C_Slave_INTEN_BYTE11_Msk = 0x800      // Bit mask of BYTE11 field.
	I2C_Slave_INTEN_BYTE11     = 0x800      // Bit BYTE11.
	I2C_Slave_INTEN_BYTE12_Pos = 0xc        // Position of BYTE12 field.
	I2C_Slave_INTEN_BYTE12_Msk = 0x1000     // Bit mask of BYTE12 field.
	I2C_Slave_INTEN_BYTE12     = 0x1000     // Bit BYTE12.
	I2C_Slave_INTEN_BYTE13_Pos = 0xd        // Position of BYTE13 field.
	I2C_Slave_INTEN_BYTE13_Msk = 0x2000     // Bit mask of BYTE13 field.
	I2C_Slave_INTEN_BYTE13     = 0x2000     // Bit BYTE13.
	I2C_Slave_INTEN_BYTE14_Pos = 0xe        // Position of BYTE14 field.
	I2C_Slave_INTEN_BYTE14_Msk = 0x4000     // Bit mask of BYTE14 field.
	I2C_Slave_INTEN_BYTE14     = 0x4000     // Bit BYTE14.
	I2C_Slave_INTEN_BYTE15_Pos = 0xf        // Position of BYTE15 field.
	I2C_Slave_INTEN_BYTE15_Msk = 0x8000     // Bit mask of BYTE15 field.
	I2C_Slave_INTEN_BYTE15     = 0x8000     // Bit BYTE15.
	I2C_Slave_INTEN_BYTE16_Pos = 0x10       // Position of BYTE16 field.
	I2C_Slave_INTEN_BYTE16_Msk = 0x10000    // Bit mask of BYTE16 field.
	I2C_Slave_INTEN_BYTE16     = 0x10000    // Bit BYTE16.
	I2C_Slave_INTEN_BYTE17_Pos = 0x11       // Position of BYTE17 field.
	I2C_Slave_INTEN_BYTE17_Msk = 0x20000    // Bit mask of BYTE17 field.
	I2C_Slave_INTEN_BYTE17     = 0x20000    // Bit BYTE17.
	I2C_Slave_INTEN_BYTE18_Pos = 0x12       // Position of BYTE18 field.
	I2C_Slave_INTEN_BYTE18_Msk = 0x40000    // Bit mask of BYTE18 field.
	I2C_Slave_INTEN_BYTE18     = 0x40000    // Bit BYTE18.
	I2C_Slave_INTEN_BYTE19_Pos = 0x13       // Position of BYTE19 field.
	I2C_Slave_INTEN_BYTE19_Msk = 0x80000    // Bit mask of BYTE19 field.
	I2C_Slave_INTEN_BYTE19     = 0x80000    // Bit BYTE19.
	I2C_Slave_INTEN_BYTE20_Pos = 0x14       // Position of BYTE20 field.
	I2C_Slave_INTEN_BYTE20_Msk = 0x100000   // Bit mask of BYTE20 field.
	I2C_Slave_INTEN_BYTE20     = 0x100000   // Bit BYTE20.
	I2C_Slave_INTEN_BYTE21_Pos = 0x15       // Position of BYTE21 field.
	I2C_Slave_INTEN_BYTE21_Msk = 0x200000   // Bit mask of BYTE21 field.
	I2C_Slave_INTEN_BYTE21     = 0x200000   // Bit BYTE21.
	I2C_Slave_INTEN_BYTE22_Pos = 0x16       // Position of BYTE22 field.
	I2C_Slave_INTEN_BYTE22_Msk = 0x400000   // Bit mask of BYTE22 field.
	I2C_Slave_INTEN_BYTE22     = 0x400000   // Bit BYTE22.
	I2C_Slave_INTEN_BYTE23_Pos = 0x17       // Position of BYTE23 field.
	I2C_Slave_INTEN_BYTE23_Msk = 0x800000   // Bit mask of BYTE23 field.
	I2C_Slave_INTEN_BYTE23     = 0x800000   // Bit BYTE23.
	I2C_Slave_INTEN_BYTE24_Pos = 0x18       // Position of BYTE24 field.
	I2C_Slave_INTEN_BYTE24_Msk = 0x1000000  // Bit mask of BYTE24 field.
	I2C_Slave_INTEN_BYTE24     = 0x1000000  // Bit BYTE24.
	I2C_Slave_INTEN_BYTE25_Pos = 0x19       // Position of BYTE25 field.
	I2C_Slave_INTEN_BYTE25_Msk = 0x2000000  // Bit mask of BYTE25 field.
	I2C_Slave_INTEN_BYTE25     = 0x2000000  // Bit BYTE25.
	I2C_Slave_INTEN_BYTE26_Pos = 0x1a       // Position of BYTE26 field.
	I2C_Slave_INTEN_BYTE26_Msk = 0x4000000  // Bit mask of BYTE26 field.
	I2C_Slave_INTEN_BYTE26     = 0x4000000  // Bit BYTE26.
	I2C_Slave_INTEN_BYTE27_Pos = 0x1b       // Position of BYTE27 field.
	I2C_Slave_INTEN_BYTE27_Msk = 0x8000000  // Bit mask of BYTE27 field.
	I2C_Slave_INTEN_BYTE27     = 0x8000000  // Bit BYTE27.
	I2C_Slave_INTEN_BYTE28_Pos = 0x1c       // Position of BYTE28 field.
	I2C_Slave_INTEN_BYTE28_Msk = 0x10000000 // Bit mask of BYTE28 field.
	I2C_Slave_INTEN_BYTE28     = 0x10000000 // Bit BYTE28.
	I2C_Slave_INTEN_BYTE29_Pos = 0x1d       // Position of BYTE29 field.
	I2C_Slave_INTEN_BYTE29_Msk = 0x20000000 // Bit mask of BYTE29 field.
	I2C_Slave_INTEN_BYTE29     = 0x20000000 // Bit BYTE29.
	I2C_Slave_INTEN_BYTE30_Pos = 0x1e       // Position of BYTE30 field.
	I2C_Slave_INTEN_BYTE30_Msk = 0x40000000 // Bit mask of BYTE30 field.
	I2C_Slave_INTEN_BYTE30     = 0x40000000 // Bit BYTE30.
	I2C_Slave_INTEN_BYTE31_Pos = 0x1f       // Position of BYTE31 field.
	I2C_Slave_INTEN_BYTE31_Msk = 0x80000000 // Bit mask of BYTE31 field.
	I2C_Slave_INTEN_BYTE31     = 0x80000000 // Bit BYTE31.

	// DATA_BYTE: I2CS Data Byte
	I2C_Slave_DATA_BYTE_DATA_FIELD_Pos      = 0x0   // Position of DATA_FIELD field.
	I2C_Slave_DATA_BYTE_DATA_FIELD_Msk      = 0xff  // Bit mask of DATA_FIELD field.
	I2C_Slave_DATA_BYTE_READ_ONLY_FL_Pos    = 0x8   // Position of READ_ONLY_FL field.
	I2C_Slave_DATA_BYTE_READ_ONLY_FL_Msk    = 0x100 // Bit mask of READ_ONLY_FL field.
	I2C_Slave_DATA_BYTE_READ_ONLY_FL        = 0x100 // Bit READ_ONLY_FL.
	I2C_Slave_DATA_BYTE_DATA_UPDATED_FL_Pos = 0x9   // Position of DATA_UPDATED_FL field.
	I2C_Slave_DATA_BYTE_DATA_UPDATED_FL_Msk = 0x200 // Bit mask of DATA_UPDATED_FL field.
	I2C_Slave_DATA_BYTE_DATA_UPDATED_FL     = 0x200 // Bit DATA_UPDATED_FL.
)

// Bitfields for SPIM0: SPI Master Interface
const (
	// MSTR_CFG: SPI Master Configuration Register
	SPI_Master_MSTR_CFG_SLAVE_SEL_Pos       = 0x0       // Position of SLAVE_SEL field.
	SPI_Master_MSTR_CFG_SLAVE_SEL_Msk       = 0x7       // Bit mask of SLAVE_SEL field.
	SPI_Master_MSTR_CFG_THREE_WIRE_MODE_Pos = 0x3       // Position of THREE_WIRE_MODE field.
	SPI_Master_MSTR_CFG_THREE_WIRE_MODE_Msk = 0x8       // Bit mask of THREE_WIRE_MODE field.
	SPI_Master_MSTR_CFG_THREE_WIRE_MODE     = 0x8       // Bit THREE_WIRE_MODE.
	SPI_Master_MSTR_CFG_SPI_MODE_Pos        = 0x4       // Position of SPI_MODE field.
	SPI_Master_MSTR_CFG_SPI_MODE_Msk        = 0x30      // Bit mask of SPI_MODE field.
	SPI_Master_MSTR_CFG_PAGE_SIZE_Pos       = 0x6       // Position of PAGE_SIZE field.
	SPI_Master_MSTR_CFG_PAGE_SIZE_Msk       = 0xc0      // Bit mask of PAGE_SIZE field.
	SPI_Master_MSTR_CFG_SCK_HI_CLK_Pos      = 0x8       // Position of SCK_HI_CLK field.
	SPI_Master_MSTR_CFG_SCK_HI_CLK_Msk      = 0xf00     // Bit mask of SCK_HI_CLK field.
	SPI_Master_MSTR_CFG_SCK_LO_CLK_Pos      = 0xc       // Position of SCK_LO_CLK field.
	SPI_Master_MSTR_CFG_SCK_LO_CLK_Msk      = 0xf000    // Bit mask of SCK_LO_CLK field.
	SPI_Master_MSTR_CFG_ACT_DELAY_Pos       = 0x10      // Position of ACT_DELAY field.
	SPI_Master_MSTR_CFG_ACT_DELAY_Msk       = 0x30000   // Bit mask of ACT_DELAY field.
	SPI_Master_MSTR_CFG_INACT_DELAY_Pos     = 0x12      // Position of INACT_DELAY field.
	SPI_Master_MSTR_CFG_INACT_DELAY_Msk     = 0xc0000   // Bit mask of INACT_DELAY field.
	SPI_Master_MSTR_CFG_ALT_SCK_HI_CLK_Pos  = 0x14      // Position of ALT_SCK_HI_CLK field.
	SPI_Master_MSTR_CFG_ALT_SCK_HI_CLK_Msk  = 0xf00000  // Bit mask of ALT_SCK_HI_CLK field.
	SPI_Master_MSTR_CFG_ALT_SCK_LO_CLK_Pos  = 0x18      // Position of ALT_SCK_LO_CLK field.
	SPI_Master_MSTR_CFG_ALT_SCK_LO_CLK_Msk  = 0xf000000 // Bit mask of ALT_SCK_LO_CLK field.

	// SS_SR_POLARITY: Polarity Control for SS and SR Signals
	SPI_Master_SS_SR_POLARITY_SS_POLARITY_Pos = 0x0    // Position of SS_POLARITY field.
	SPI_Master_SS_SR_POLARITY_SS_POLARITY_Msk = 0xff   // Bit mask of SS_POLARITY field.
	SPI_Master_SS_SR_POLARITY_FC_POLARITY_Pos = 0x8    // Position of FC_POLARITY field.
	SPI_Master_SS_SR_POLARITY_FC_POLARITY_Msk = 0xff00 // Bit mask of FC_POLARITY field.

	// GEN_CTRL: SPI Master General Control Register
	SPI_Master_GEN_CTRL_SPI_MSTR_EN_Pos   = 0x0     // Position of SPI_MSTR_EN field.
	SPI_Master_GEN_CTRL_SPI_MSTR_EN_Msk   = 0x1     // Bit mask of SPI_MSTR_EN field.
	SPI_Master_GEN_CTRL_SPI_MSTR_EN       = 0x1     // Bit SPI_MSTR_EN.
	SPI_Master_GEN_CTRL_TX_FIFO_EN_Pos    = 0x1     // Position of TX_FIFO_EN field.
	SPI_Master_GEN_CTRL_TX_FIFO_EN_Msk    = 0x2     // Bit mask of TX_FIFO_EN field.
	SPI_Master_GEN_CTRL_TX_FIFO_EN        = 0x2     // Bit TX_FIFO_EN.
	SPI_Master_GEN_CTRL_RX_FIFO_EN_Pos    = 0x2     // Position of RX_FIFO_EN field.
	SPI_Master_GEN_CTRL_RX_FIFO_EN_Msk    = 0x4     // Bit mask of RX_FIFO_EN field.
	SPI_Master_GEN_CTRL_RX_FIFO_EN        = 0x4     // Bit RX_FIFO_EN.
	SPI_Master_GEN_CTRL_BIT_BANG_MODE_Pos = 0x3     // Position of BIT_BANG_MODE field.
	SPI_Master_GEN_CTRL_BIT_BANG_MODE_Msk = 0x8     // Bit mask of BIT_BANG_MODE field.
	SPI_Master_GEN_CTRL_BIT_BANG_MODE     = 0x8     // Bit BIT_BANG_MODE.
	SPI_Master_GEN_CTRL_BB_SS_IN_OUT_Pos  = 0x4     // Position of BB_SS_IN_OUT field.
	SPI_Master_GEN_CTRL_BB_SS_IN_OUT_Msk  = 0x10    // Bit mask of BB_SS_IN_OUT field.
	SPI_Master_GEN_CTRL_BB_SS_IN_OUT      = 0x10    // Bit BB_SS_IN_OUT.
	SPI_Master_GEN_CTRL_BB_SR_IN_Pos      = 0x5     // Position of BB_SR_IN field.
	SPI_Master_GEN_CTRL_BB_SR_IN_Msk      = 0x20    // Bit mask of BB_SR_IN field.
	SPI_Master_GEN_CTRL_BB_SR_IN          = 0x20    // Bit BB_SR_IN.
	SPI_Master_GEN_CTRL_BB_SCK_IN_OUT_Pos = 0x6     // Position of BB_SCK_IN_OUT field.
	SPI_Master_GEN_CTRL_BB_SCK_IN_OUT_Msk = 0x40    // Bit mask of BB_SCK_IN_OUT field.
	SPI_Master_GEN_CTRL_BB_SCK_IN_OUT     = 0x40    // Bit BB_SCK_IN_OUT.
	SPI_Master_GEN_CTRL_BB_SDIO_IN_Pos    = 0x8     // Position of BB_SDIO_IN field.
	SPI_Master_GEN_CTRL_BB_SDIO_IN_Msk    = 0xf00   // Bit mask of BB_SDIO_IN field.
	SPI_Master_GEN_CTRL_BB_SDIO_OUT_Pos   = 0xc     // Position of BB_SDIO_OUT field.
	SPI_Master_GEN_CTRL_BB_SDIO_OUT_Msk   = 0xf000  // Bit mask of BB_SDIO_OUT field.
	SPI_Master_GEN_CTRL_BB_SDIO_DR_EN_Pos = 0x10    // Position of BB_SDIO_DR_EN field.
	SPI_Master_GEN_CTRL_BB_SDIO_DR_EN_Msk = 0xf0000 // Bit mask of BB_SDIO_DR_EN field.

	// FIFO_CTRL: SPI Master FIFO Control Register
	SPI_Master_FIFO_CTRL_TX_FIFO_AE_LVL_Pos = 0x0        // Position of TX_FIFO_AE_LVL field.
	SPI_Master_FIFO_CTRL_TX_FIFO_AE_LVL_Msk = 0xf        // Bit mask of TX_FIFO_AE_LVL field.
	SPI_Master_FIFO_CTRL_TX_FIFO_USED_Pos   = 0x8        // Position of TX_FIFO_USED field.
	SPI_Master_FIFO_CTRL_TX_FIFO_USED_Msk   = 0x1f00     // Bit mask of TX_FIFO_USED field.
	SPI_Master_FIFO_CTRL_RX_FIFO_AF_LVL_Pos = 0x10       // Position of RX_FIFO_AF_LVL field.
	SPI_Master_FIFO_CTRL_RX_FIFO_AF_LVL_Msk = 0x1f0000   // Bit mask of RX_FIFO_AF_LVL field.
	SPI_Master_FIFO_CTRL_RX_FIFO_USED_Pos   = 0x18       // Position of RX_FIFO_USED field.
	SPI_Master_FIFO_CTRL_RX_FIFO_USED_Msk   = 0x3f000000 // Bit mask of RX_FIFO_USED field.

	// SPCL_CTRL: SPI Master Special Mode Controls
	SPI_Master_SPCL_CTRL_SS_SAMPLE_MODE_Pos   = 0x0   // Position of SS_SAMPLE_MODE field.
	SPI_Master_SPCL_CTRL_SS_SAMPLE_MODE_Msk   = 0x1   // Bit mask of SS_SAMPLE_MODE field.
	SPI_Master_SPCL_CTRL_SS_SAMPLE_MODE       = 0x1   // Bit SS_SAMPLE_MODE.
	SPI_Master_SPCL_CTRL_MISO_FC_EN_Pos       = 0x1   // Position of MISO_FC_EN field.
	SPI_Master_SPCL_CTRL_MISO_FC_EN_Msk       = 0x2   // Bit mask of MISO_FC_EN field.
	SPI_Master_SPCL_CTRL_MISO_FC_EN           = 0x2   // Bit MISO_FC_EN.
	SPI_Master_SPCL_CTRL_SS_SA_SDIO_OUT_Pos   = 0x4   // Position of SS_SA_SDIO_OUT field.
	SPI_Master_SPCL_CTRL_SS_SA_SDIO_OUT_Msk   = 0xf0  // Bit mask of SS_SA_SDIO_OUT field.
	SPI_Master_SPCL_CTRL_SS_SA_SDIO_DR_EN_Pos = 0x8   // Position of SS_SA_SDIO_DR_EN field.
	SPI_Master_SPCL_CTRL_SS_SA_SDIO_DR_EN_Msk = 0xf00 // Bit mask of SS_SA_SDIO_DR_EN field.

	// INTFL: SPI Master Interrupt Flags
	SPI_Master_INTFL_TX_STALLED_Pos = 0x0  // Position of TX_STALLED field.
	SPI_Master_INTFL_TX_STALLED_Msk = 0x1  // Bit mask of TX_STALLED field.
	SPI_Master_INTFL_TX_STALLED     = 0x1  // Bit TX_STALLED.
	SPI_Master_INTFL_RX_STALLED_Pos = 0x1  // Position of RX_STALLED field.
	SPI_Master_INTFL_RX_STALLED_Msk = 0x2  // Bit mask of RX_STALLED field.
	SPI_Master_INTFL_RX_STALLED     = 0x2  // Bit RX_STALLED.
	SPI_Master_INTFL_TX_READY_Pos   = 0x2  // Position of TX_READY field.
	SPI_Master_INTFL_TX_READY_Msk   = 0x4  // Bit mask of TX_READY field.
	SPI_Master_INTFL_TX_READY       = 0x4  // Bit TX_READY.
	SPI_Master_INTFL_RX_DONE_Pos    = 0x3  // Position of RX_DONE field.
	SPI_Master_INTFL_RX_DONE_Msk    = 0x8  // Bit mask of RX_DONE field.
	SPI_Master_INTFL_RX_DONE        = 0x8  // Bit RX_DONE.
	SPI_Master_INTFL_TX_FIFO_AE_Pos = 0x4  // Position of TX_FIFO_AE field.
	SPI_Master_INTFL_TX_FIFO_AE_Msk = 0x10 // Bit mask of TX_FIFO_AE field.
	SPI_Master_INTFL_TX_FIFO_AE     = 0x10 // Bit TX_FIFO_AE.
	SPI_Master_INTFL_RX_FIFO_AF_Pos = 0x5  // Position of RX_FIFO_AF field.
	SPI_Master_INTFL_RX_FIFO_AF_Msk = 0x20 // Bit mask of RX_FIFO_AF field.
	SPI_Master_INTFL_RX_FIFO_AF     = 0x20 // Bit RX_FIFO_AF.

	// INTEN: SPI Master Interrupt Enable/Disable Settings
	SPI_Master_INTEN_TX_STALLED_Pos = 0x0  // Position of TX_STALLED field.
	SPI_Master_INTEN_TX_STALLED_Msk = 0x1  // Bit mask of TX_STALLED field.
	SPI_Master_INTEN_TX_STALLED     = 0x1  // Bit TX_STALLED.
	SPI_Master_INTEN_RX_STALLED_Pos = 0x1  // Position of RX_STALLED field.
	SPI_Master_INTEN_RX_STALLED_Msk = 0x2  // Bit mask of RX_STALLED field.
	SPI_Master_INTEN_RX_STALLED     = 0x2  // Bit RX_STALLED.
	SPI_Master_INTEN_TX_READY_Pos   = 0x2  // Position of TX_READY field.
	SPI_Master_INTEN_TX_READY_Msk   = 0x4  // Bit mask of TX_READY field.
	SPI_Master_INTEN_TX_READY       = 0x4  // Bit TX_READY.
	SPI_Master_INTEN_RX_DONE_Pos    = 0x3  // Position of RX_DONE field.
	SPI_Master_INTEN_RX_DONE_Msk    = 0x8  // Bit mask of RX_DONE field.
	SPI_Master_INTEN_RX_DONE        = 0x8  // Bit RX_DONE.
	SPI_Master_INTEN_TX_FIFO_AE_Pos = 0x4  // Position of TX_FIFO_AE field.
	SPI_Master_INTEN_TX_FIFO_AE_Msk = 0x10 // Bit mask of TX_FIFO_AE field.
	SPI_Master_INTEN_TX_FIFO_AE     = 0x10 // Bit TX_FIFO_AE.
	SPI_Master_INTEN_RX_FIFO_AF_Pos = 0x5  // Position of RX_FIFO_AF field.
	SPI_Master_INTEN_RX_FIFO_AF_Msk = 0x20 // Bit mask of RX_FIFO_AF field.
	SPI_Master_INTEN_RX_FIFO_AF     = 0x20 // Bit RX_FIFO_AF.
)

// Bitfields for OWM: 1-Wire Master Interface
const (
	// CFG: 1-Wire Master Configuration
	_1_Wire_Master_CFG_LONG_LINE_MODE_Pos    = 0x0  // Position of LONG_LINE_MODE field.
	_1_Wire_Master_CFG_LONG_LINE_MODE_Msk    = 0x1  // Bit mask of LONG_LINE_MODE field.
	_1_Wire_Master_CFG_LONG_LINE_MODE        = 0x1  // Bit LONG_LINE_MODE.
	_1_Wire_Master_CFG_FORCE_PRES_DET_Pos    = 0x1  // Position of FORCE_PRES_DET field.
	_1_Wire_Master_CFG_FORCE_PRES_DET_Msk    = 0x2  // Bit mask of FORCE_PRES_DET field.
	_1_Wire_Master_CFG_FORCE_PRES_DET        = 0x2  // Bit FORCE_PRES_DET.
	_1_Wire_Master_CFG_BIT_BANG_EN_Pos       = 0x2  // Position of BIT_BANG_EN field.
	_1_Wire_Master_CFG_BIT_BANG_EN_Msk       = 0x4  // Bit mask of BIT_BANG_EN field.
	_1_Wire_Master_CFG_BIT_BANG_EN           = 0x4  // Bit BIT_BANG_EN.
	_1_Wire_Master_CFG_EXT_PULLUP_MODE_Pos   = 0x3  // Position of EXT_PULLUP_MODE field.
	_1_Wire_Master_CFG_EXT_PULLUP_MODE_Msk   = 0x8  // Bit mask of EXT_PULLUP_MODE field.
	_1_Wire_Master_CFG_EXT_PULLUP_MODE       = 0x8  // Bit EXT_PULLUP_MODE.
	_1_Wire_Master_CFG_EXT_PULLUP_ENABLE_Pos = 0x4  // Position of EXT_PULLUP_ENABLE field.
	_1_Wire_Master_CFG_EXT_PULLUP_ENABLE_Msk = 0x10 // Bit mask of EXT_PULLUP_ENABLE field.
	_1_Wire_Master_CFG_EXT_PULLUP_ENABLE     = 0x10 // Bit EXT_PULLUP_ENABLE.
	_1_Wire_Master_CFG_SINGLE_BIT_MODE_Pos   = 0x5  // Position of SINGLE_BIT_MODE field.
	_1_Wire_Master_CFG_SINGLE_BIT_MODE_Msk   = 0x20 // Bit mask of SINGLE_BIT_MODE field.
	_1_Wire_Master_CFG_SINGLE_BIT_MODE       = 0x20 // Bit SINGLE_BIT_MODE.
	_1_Wire_Master_CFG_OVERDRIVE_Pos         = 0x6  // Position of OVERDRIVE field.
	_1_Wire_Master_CFG_OVERDRIVE_Msk         = 0x40 // Bit mask of OVERDRIVE field.
	_1_Wire_Master_CFG_OVERDRIVE             = 0x40 // Bit OVERDRIVE.
	_1_Wire_Master_CFG_INT_PULLUP_ENABLE_Pos = 0x7  // Position of INT_PULLUP_ENABLE field.
	_1_Wire_Master_CFG_INT_PULLUP_ENABLE_Msk = 0x80 // Bit mask of INT_PULLUP_ENABLE field.
	_1_Wire_Master_CFG_INT_PULLUP_ENABLE     = 0x80 // Bit INT_PULLUP_ENABLE.

	// CLK_DIV_1US: 1-Wire Master Clock Divisor
	_1_Wire_Master_CLK_DIV_1US_DIVISOR_Pos = 0x0  // Position of DIVISOR field.
	_1_Wire_Master_CLK_DIV_1US_DIVISOR_Msk = 0xff // Bit mask of DIVISOR field.

	// CTRL_STAT: 1-Wire Master Control/Status
	_1_Wire_Master_CTRL_STAT_START_OW_RESET_Pos  = 0x0  // Position of START_OW_RESET field.
	_1_Wire_Master_CTRL_STAT_START_OW_RESET_Msk  = 0x1  // Bit mask of START_OW_RESET field.
	_1_Wire_Master_CTRL_STAT_START_OW_RESET      = 0x1  // Bit START_OW_RESET.
	_1_Wire_Master_CTRL_STAT_SRA_MODE_Pos        = 0x1  // Position of SRA_MODE field.
	_1_Wire_Master_CTRL_STAT_SRA_MODE_Msk        = 0x2  // Bit mask of SRA_MODE field.
	_1_Wire_Master_CTRL_STAT_SRA_MODE            = 0x2  // Bit SRA_MODE.
	_1_Wire_Master_CTRL_STAT_BIT_BANG_OE_Pos     = 0x2  // Position of BIT_BANG_OE field.
	_1_Wire_Master_CTRL_STAT_BIT_BANG_OE_Msk     = 0x4  // Bit mask of BIT_BANG_OE field.
	_1_Wire_Master_CTRL_STAT_BIT_BANG_OE         = 0x4  // Bit BIT_BANG_OE.
	_1_Wire_Master_CTRL_STAT_OW_INPUT_Pos        = 0x3  // Position of OW_INPUT field.
	_1_Wire_Master_CTRL_STAT_OW_INPUT_Msk        = 0x8  // Bit mask of OW_INPUT field.
	_1_Wire_Master_CTRL_STAT_OW_INPUT            = 0x8  // Bit OW_INPUT.
	_1_Wire_Master_CTRL_STAT_PRESENCE_DETECT_Pos = 0x7  // Position of PRESENCE_DETECT field.
	_1_Wire_Master_CTRL_STAT_PRESENCE_DETECT_Msk = 0x80 // Bit mask of PRESENCE_DETECT field.
	_1_Wire_Master_CTRL_STAT_PRESENCE_DETECT     = 0x80 // Bit PRESENCE_DETECT.

	// DATA: 1-Wire Master Data Buffer
	_1_Wire_Master_DATA_TX_RX_Pos = 0x0  // Position of TX_RX field.
	_1_Wire_Master_DATA_TX_RX_Msk = 0xff // Bit mask of TX_RX field.

	// INTFL: 1-Wire Master Interrupt Flags
	_1_Wire_Master_INTFL_OW_RESET_DONE_Pos = 0x0  // Position of OW_RESET_DONE field.
	_1_Wire_Master_INTFL_OW_RESET_DONE_Msk = 0x1  // Bit mask of OW_RESET_DONE field.
	_1_Wire_Master_INTFL_OW_RESET_DONE     = 0x1  // Bit OW_RESET_DONE.
	_1_Wire_Master_INTFL_TX_DATA_EMPTY_Pos = 0x1  // Position of TX_DATA_EMPTY field.
	_1_Wire_Master_INTFL_TX_DATA_EMPTY_Msk = 0x2  // Bit mask of TX_DATA_EMPTY field.
	_1_Wire_Master_INTFL_TX_DATA_EMPTY     = 0x2  // Bit TX_DATA_EMPTY.
	_1_Wire_Master_INTFL_RX_DATA_READY_Pos = 0x2  // Position of RX_DATA_READY field.
	_1_Wire_Master_INTFL_RX_DATA_READY_Msk = 0x4  // Bit mask of RX_DATA_READY field.
	_1_Wire_Master_INTFL_RX_DATA_READY     = 0x4  // Bit RX_DATA_READY.
	_1_Wire_Master_INTFL_LINE_SHORT_Pos    = 0x3  // Position of LINE_SHORT field.
	_1_Wire_Master_INTFL_LINE_SHORT_Msk    = 0x8  // Bit mask of LINE_SHORT field.
	_1_Wire_Master_INTFL_LINE_SHORT        = 0x8  // Bit LINE_SHORT.
	_1_Wire_Master_INTFL_LINE_LOW_Pos      = 0x4  // Position of LINE_LOW field.
	_1_Wire_Master_INTFL_LINE_LOW_Msk      = 0x10 // Bit mask of LINE_LOW field.
	_1_Wire_Master_INTFL_LINE_LOW          = 0x10 // Bit LINE_LOW.

	// INTEN: 1-Wire Master Interrupt Enables
	_1_Wire_Master_INTEN_OW_RESET_DONE_Pos = 0x0  // Position of OW_RESET_DONE field.
	_1_Wire_Master_INTEN_OW_RESET_DONE_Msk = 0x1  // Bit mask of OW_RESET_DONE field.
	_1_Wire_Master_INTEN_OW_RESET_DONE     = 0x1  // Bit OW_RESET_DONE.
	_1_Wire_Master_INTEN_TX_DATA_EMPTY_Pos = 0x1  // Position of TX_DATA_EMPTY field.
	_1_Wire_Master_INTEN_TX_DATA_EMPTY_Msk = 0x2  // Bit mask of TX_DATA_EMPTY field.
	_1_Wire_Master_INTEN_TX_DATA_EMPTY     = 0x2  // Bit TX_DATA_EMPTY.
	_1_Wire_Master_INTEN_RX_DATA_READY_Pos = 0x2  // Position of RX_DATA_READY field.
	_1_Wire_Master_INTEN_RX_DATA_READY_Msk = 0x4  // Bit mask of RX_DATA_READY field.
	_1_Wire_Master_INTEN_RX_DATA_READY     = 0x4  // Bit RX_DATA_READY.
	_1_Wire_Master_INTEN_LINE_SHORT_Pos    = 0x3  // Position of LINE_SHORT field.
	_1_Wire_Master_INTEN_LINE_SHORT_Msk    = 0x8  // Bit mask of LINE_SHORT field.
	_1_Wire_Master_INTEN_LINE_SHORT        = 0x8  // Bit LINE_SHORT.
	_1_Wire_Master_INTEN_LINE_LOW_Pos      = 0x4  // Position of LINE_LOW field.
	_1_Wire_Master_INTEN_LINE_LOW_Msk      = 0x10 // Bit mask of LINE_LOW field.
	_1_Wire_Master_INTEN_LINE_LOW          = 0x10 // Bit LINE_LOW.
)

// Bitfields for ADC: ADC / AFE
const (
	// CTRL: ADC Control
	ADC_CTRL_CPU_ADC_START_Pos  = 0x0        // Position of CPU_ADC_START field.
	ADC_CTRL_CPU_ADC_START_Msk  = 0x1        // Bit mask of CPU_ADC_START field.
	ADC_CTRL_CPU_ADC_START      = 0x1        // Bit CPU_ADC_START.
	ADC_CTRL_ADC_PU_Pos         = 0x1        // Position of ADC_PU field.
	ADC_CTRL_ADC_PU_Msk         = 0x2        // Bit mask of ADC_PU field.
	ADC_CTRL_ADC_PU             = 0x2        // Bit ADC_PU.
	ADC_CTRL_BUF_PU_Pos         = 0x2        // Position of BUF_PU field.
	ADC_CTRL_BUF_PU_Msk         = 0x4        // Bit mask of BUF_PU field.
	ADC_CTRL_BUF_PU             = 0x4        // Bit BUF_PU.
	ADC_CTRL_ADC_REFBUF_PU_Pos  = 0x3        // Position of ADC_REFBUF_PU field.
	ADC_CTRL_ADC_REFBUF_PU_Msk  = 0x8        // Bit mask of ADC_REFBUF_PU field.
	ADC_CTRL_ADC_REFBUF_PU      = 0x8        // Bit ADC_REFBUF_PU.
	ADC_CTRL_ADC_CHGPUMP_PU_Pos = 0x4        // Position of ADC_CHGPUMP_PU field.
	ADC_CTRL_ADC_CHGPUMP_PU_Msk = 0x10       // Bit mask of ADC_CHGPUMP_PU field.
	ADC_CTRL_ADC_CHGPUMP_PU     = 0x10       // Bit ADC_CHGPUMP_PU.
	ADC_CTRL_BUF_CHOP_DIS_Pos   = 0x5        // Position of BUF_CHOP_DIS field.
	ADC_CTRL_BUF_CHOP_DIS_Msk   = 0x20       // Bit mask of BUF_CHOP_DIS field.
	ADC_CTRL_BUF_CHOP_DIS       = 0x20       // Bit BUF_CHOP_DIS.
	ADC_CTRL_BUF_PUMP_DIS_Pos   = 0x6        // Position of BUF_PUMP_DIS field.
	ADC_CTRL_BUF_PUMP_DIS_Msk   = 0x40       // Bit mask of BUF_PUMP_DIS field.
	ADC_CTRL_BUF_PUMP_DIS       = 0x40       // Bit BUF_PUMP_DIS.
	ADC_CTRL_BUF_BYPASS_Pos     = 0x7        // Position of BUF_BYPASS field.
	ADC_CTRL_BUF_BYPASS_Msk     = 0x80       // Bit mask of BUF_BYPASS field.
	ADC_CTRL_BUF_BYPASS         = 0x80       // Bit BUF_BYPASS.
	ADC_CTRL_ADC_REFSCL_Pos     = 0x8        // Position of ADC_REFSCL field.
	ADC_CTRL_ADC_REFSCL_Msk     = 0x100      // Bit mask of ADC_REFSCL field.
	ADC_CTRL_ADC_REFSCL         = 0x100      // Bit ADC_REFSCL.
	ADC_CTRL_ADC_SCALE_Pos      = 0x9        // Position of ADC_SCALE field.
	ADC_CTRL_ADC_SCALE_Msk      = 0x200      // Bit mask of ADC_SCALE field.
	ADC_CTRL_ADC_SCALE          = 0x200      // Bit ADC_SCALE.
	ADC_CTRL_ADC_REFSEL_Pos     = 0xa        // Position of ADC_REFSEL field.
	ADC_CTRL_ADC_REFSEL_Msk     = 0x400      // Bit mask of ADC_REFSEL field.
	ADC_CTRL_ADC_REFSEL         = 0x400      // Bit ADC_REFSEL.
	ADC_CTRL_ADC_CLK_EN_Pos     = 0xb        // Position of ADC_CLK_EN field.
	ADC_CTRL_ADC_CLK_EN_Msk     = 0x800      // Bit mask of ADC_CLK_EN field.
	ADC_CTRL_ADC_CLK_EN         = 0x800      // Bit ADC_CLK_EN.
	ADC_CTRL_ADC_CHSEL_Pos      = 0xc        // Position of ADC_CHSEL field.
	ADC_CTRL_ADC_CHSEL_Msk      = 0xf000     // Bit mask of ADC_CHSEL field.
	ADC_CTRL_ADC_XREF_Pos       = 0x10       // Position of ADC_XREF field.
	ADC_CTRL_ADC_XREF_Msk       = 0x10000    // Bit mask of ADC_XREF field.
	ADC_CTRL_ADC_XREF           = 0x10000    // Bit ADC_XREF.
	ADC_CTRL_ADC_DATAALIGN_Pos  = 0x11       // Position of ADC_DATAALIGN field.
	ADC_CTRL_ADC_DATAALIGN_Msk  = 0x20000    // Bit mask of ADC_DATAALIGN field.
	ADC_CTRL_ADC_DATAALIGN      = 0x20000    // Bit ADC_DATAALIGN.
	ADC_CTRL_AFE_PWR_UP_DLY_Pos = 0x18       // Position of AFE_PWR_UP_DLY field.
	ADC_CTRL_AFE_PWR_UP_DLY_Msk = 0xff000000 // Bit mask of AFE_PWR_UP_DLY field.

	// STATUS: ADC Status
	ADC_STATUS_ADC_ACTIVE_Pos           = 0x0 // Position of ADC_ACTIVE field.
	ADC_STATUS_ADC_ACTIVE_Msk           = 0x1 // Bit mask of ADC_ACTIVE field.
	ADC_STATUS_ADC_ACTIVE               = 0x1 // Bit ADC_ACTIVE.
	ADC_STATUS_RO_CAL_ATOMIC_ACTIVE_Pos = 0x1 // Position of RO_CAL_ATOMIC_ACTIVE field.
	ADC_STATUS_RO_CAL_ATOMIC_ACTIVE_Msk = 0x2 // Bit mask of RO_CAL_ATOMIC_ACTIVE field.
	ADC_STATUS_RO_CAL_ATOMIC_ACTIVE     = 0x2 // Bit RO_CAL_ATOMIC_ACTIVE.
	ADC_STATUS_AFE_PWR_UP_ACTIVE_Pos    = 0x2 // Position of AFE_PWR_UP_ACTIVE field.
	ADC_STATUS_AFE_PWR_UP_ACTIVE_Msk    = 0x4 // Bit mask of AFE_PWR_UP_ACTIVE field.
	ADC_STATUS_AFE_PWR_UP_ACTIVE        = 0x4 // Bit AFE_PWR_UP_ACTIVE.
	ADC_STATUS_ADC_OVERFLOW_Pos         = 0x3 // Position of ADC_OVERFLOW field.
	ADC_STATUS_ADC_OVERFLOW_Msk         = 0x8 // Bit mask of ADC_OVERFLOW field.
	ADC_STATUS_ADC_OVERFLOW             = 0x8 // Bit ADC_OVERFLOW.

	// DATA: ADC Output Data
	ADC_DATA_ADC_DATA_Pos = 0x0    // Position of ADC_DATA field.
	ADC_DATA_ADC_DATA_Msk = 0xffff // Bit mask of ADC_DATA field.

	// INTR: ADC Interrupt Control Register
	ADC_INTR_ADC_DONE_IE_Pos      = 0x0      // Position of ADC_DONE_IE field.
	ADC_INTR_ADC_DONE_IE_Msk      = 0x1      // Bit mask of ADC_DONE_IE field.
	ADC_INTR_ADC_DONE_IE          = 0x1      // Bit ADC_DONE_IE.
	ADC_INTR_ADC_DONE_IE_Disabled = 0x0      // Disable Interrupt
	ADC_INTR_ADC_DONE_IE_Enabled  = 0x1      // Enable Interrupt
	ADC_INTR_ADC_REF_READY_IE_Pos = 0x1      // Position of ADC_REF_READY_IE field.
	ADC_INTR_ADC_REF_READY_IE_Msk = 0x2      // Bit mask of ADC_REF_READY_IE field.
	ADC_INTR_ADC_REF_READY_IE     = 0x2      // Bit ADC_REF_READY_IE.
	ADC_INTR_ADC_HI_LIMIT_IE_Pos  = 0x2      // Position of ADC_HI_LIMIT_IE field.
	ADC_INTR_ADC_HI_LIMIT_IE_Msk  = 0x4      // Bit mask of ADC_HI_LIMIT_IE field.
	ADC_INTR_ADC_HI_LIMIT_IE      = 0x4      // Bit ADC_HI_LIMIT_IE.
	ADC_INTR_ADC_LO_LIMIT_IE_Pos  = 0x3      // Position of ADC_LO_LIMIT_IE field.
	ADC_INTR_ADC_LO_LIMIT_IE_Msk  = 0x8      // Bit mask of ADC_LO_LIMIT_IE field.
	ADC_INTR_ADC_LO_LIMIT_IE      = 0x8      // Bit ADC_LO_LIMIT_IE.
	ADC_INTR_ADC_OVERFLOW_IE_Pos  = 0x4      // Position of ADC_OVERFLOW_IE field.
	ADC_INTR_ADC_OVERFLOW_IE_Msk  = 0x10     // Bit mask of ADC_OVERFLOW_IE field.
	ADC_INTR_ADC_OVERFLOW_IE      = 0x10     // Bit ADC_OVERFLOW_IE.
	ADC_INTR_RO_CAL_DONE_IE_Pos   = 0x5      // Position of RO_CAL_DONE_IE field.
	ADC_INTR_RO_CAL_DONE_IE_Msk   = 0x20     // Bit mask of RO_CAL_DONE_IE field.
	ADC_INTR_RO_CAL_DONE_IE       = 0x20     // Bit RO_CAL_DONE_IE.
	ADC_INTR_ADC_DONE_IF_Pos      = 0x10     // Position of ADC_DONE_IF field.
	ADC_INTR_ADC_DONE_IF_Msk      = 0x10000  // Bit mask of ADC_DONE_IF field.
	ADC_INTR_ADC_DONE_IF          = 0x10000  // Bit ADC_DONE_IF.
	ADC_INTR_ADC_REF_READY_IF_Pos = 0x11     // Position of ADC_REF_READY_IF field.
	ADC_INTR_ADC_REF_READY_IF_Msk = 0x20000  // Bit mask of ADC_REF_READY_IF field.
	ADC_INTR_ADC_REF_READY_IF     = 0x20000  // Bit ADC_REF_READY_IF.
	ADC_INTR_ADC_HI_LIMIT_IF_Pos  = 0x12     // Position of ADC_HI_LIMIT_IF field.
	ADC_INTR_ADC_HI_LIMIT_IF_Msk  = 0x40000  // Bit mask of ADC_HI_LIMIT_IF field.
	ADC_INTR_ADC_HI_LIMIT_IF      = 0x40000  // Bit ADC_HI_LIMIT_IF.
	ADC_INTR_ADC_LO_LIMIT_IF_Pos  = 0x13     // Position of ADC_LO_LIMIT_IF field.
	ADC_INTR_ADC_LO_LIMIT_IF_Msk  = 0x80000  // Bit mask of ADC_LO_LIMIT_IF field.
	ADC_INTR_ADC_LO_LIMIT_IF      = 0x80000  // Bit ADC_LO_LIMIT_IF.
	ADC_INTR_ADC_OVERFLOW_IF_Pos  = 0x14     // Position of ADC_OVERFLOW_IF field.
	ADC_INTR_ADC_OVERFLOW_IF_Msk  = 0x100000 // Bit mask of ADC_OVERFLOW_IF field.
	ADC_INTR_ADC_OVERFLOW_IF      = 0x100000 // Bit ADC_OVERFLOW_IF.
	ADC_INTR_RO_CAL_DONE_IF_Pos   = 0x15     // Position of RO_CAL_DONE_IF field.
	ADC_INTR_RO_CAL_DONE_IF_Msk   = 0x200000 // Bit mask of RO_CAL_DONE_IF field.
	ADC_INTR_RO_CAL_DONE_IF       = 0x200000 // Bit RO_CAL_DONE_IF.
	ADC_INTR_ADC_INT_PENDING_Pos  = 0x16     // Position of ADC_INT_PENDING field.
	ADC_INTR_ADC_INT_PENDING_Msk  = 0x400000 // Bit mask of ADC_INT_PENDING field.
	ADC_INTR_ADC_INT_PENDING      = 0x400000 // Bit ADC_INT_PENDING.

	// LIMIT0: ADC Limit
	ADC_LIMIT0_CH_LO_LIMIT_Pos    = 0x0        // Position of CH_LO_LIMIT field.
	ADC_LIMIT0_CH_LO_LIMIT_Msk    = 0x3ff      // Bit mask of CH_LO_LIMIT field.
	ADC_LIMIT0_CH_HI_LIMIT_Pos    = 0xc        // Position of CH_HI_LIMIT field.
	ADC_LIMIT0_CH_HI_LIMIT_Msk    = 0x3ff000   // Bit mask of CH_HI_LIMIT field.
	ADC_LIMIT0_CH_SEL_Pos         = 0x18       // Position of CH_SEL field.
	ADC_LIMIT0_CH_SEL_Msk         = 0xf000000  // Bit mask of CH_SEL field.
	ADC_LIMIT0_CH_LO_LIMIT_EN_Pos = 0x1c       // Position of CH_LO_LIMIT_EN field.
	ADC_LIMIT0_CH_LO_LIMIT_EN_Msk = 0x10000000 // Bit mask of CH_LO_LIMIT_EN field.
	ADC_LIMIT0_CH_LO_LIMIT_EN     = 0x10000000 // Bit CH_LO_LIMIT_EN.
	ADC_LIMIT0_CH_HI_LIMIT_EN_Pos = 0x1d       // Position of CH_HI_LIMIT_EN field.
	ADC_LIMIT0_CH_HI_LIMIT_EN_Msk = 0x20000000 // Bit mask of CH_HI_LIMIT_EN field.
	ADC_LIMIT0_CH_HI_LIMIT_EN     = 0x20000000 // Bit CH_HI_LIMIT_EN.

	// LIMIT1: ADC Limit 1
	ADC_LIMIT1_CH_LO_LIMIT_Pos    = 0x0        // Position of CH_LO_LIMIT field.
	ADC_LIMIT1_CH_LO_LIMIT_Msk    = 0x3ff      // Bit mask of CH_LO_LIMIT field.
	ADC_LIMIT1_CH_HI_LIMIT_Pos    = 0xc        // Position of CH_HI_LIMIT field.
	ADC_LIMIT1_CH_HI_LIMIT_Msk    = 0x3ff000   // Bit mask of CH_HI_LIMIT field.
	ADC_LIMIT1_CH_SEL_Pos         = 0x18       // Position of CH_SEL field.
	ADC_LIMIT1_CH_SEL_Msk         = 0xf000000  // Bit mask of CH_SEL field.
	ADC_LIMIT1_CH_LO_LIMIT_EN_Pos = 0x1c       // Position of CH_LO_LIMIT_EN field.
	ADC_LIMIT1_CH_LO_LIMIT_EN_Msk = 0x10000000 // Bit mask of CH_LO_LIMIT_EN field.
	ADC_LIMIT1_CH_LO_LIMIT_EN     = 0x10000000 // Bit CH_LO_LIMIT_EN.
	ADC_LIMIT1_CH_HI_LIMIT_EN_Pos = 0x1d       // Position of CH_HI_LIMIT_EN field.
	ADC_LIMIT1_CH_HI_LIMIT_EN_Msk = 0x20000000 // Bit mask of CH_HI_LIMIT_EN field.
	ADC_LIMIT1_CH_HI_LIMIT_EN     = 0x20000000 // Bit CH_HI_LIMIT_EN.

	// LIMIT2: ADC Limit 2
	ADC_LIMIT2_CH_LO_LIMIT_Pos    = 0x0        // Position of CH_LO_LIMIT field.
	ADC_LIMIT2_CH_LO_LIMIT_Msk    = 0x3ff      // Bit mask of CH_LO_LIMIT field.
	ADC_LIMIT2_CH_HI_LIMIT_Pos    = 0xc        // Position of CH_HI_LIMIT field.
	ADC_LIMIT2_CH_HI_LIMIT_Msk    = 0x3ff000   // Bit mask of CH_HI_LIMIT field.
	ADC_LIMIT2_CH_SEL_Pos         = 0x18       // Position of CH_SEL field.
	ADC_LIMIT2_CH_SEL_Msk         = 0xf000000  // Bit mask of CH_SEL field.
	ADC_LIMIT2_CH_LO_LIMIT_EN_Pos = 0x1c       // Position of CH_LO_LIMIT_EN field.
	ADC_LIMIT2_CH_LO_LIMIT_EN_Msk = 0x10000000 // Bit mask of CH_LO_LIMIT_EN field.
	ADC_LIMIT2_CH_LO_LIMIT_EN     = 0x10000000 // Bit CH_LO_LIMIT_EN.
	ADC_LIMIT2_CH_HI_LIMIT_EN_Pos = 0x1d       // Position of CH_HI_LIMIT_EN field.
	ADC_LIMIT2_CH_HI_LIMIT_EN_Msk = 0x20000000 // Bit mask of CH_HI_LIMIT_EN field.
	ADC_LIMIT2_CH_HI_LIMIT_EN     = 0x20000000 // Bit CH_HI_LIMIT_EN.

	// LIMIT3: ADC Limit 3
	ADC_LIMIT3_CH_LO_LIMIT_Pos    = 0x0        // Position of CH_LO_LIMIT field.
	ADC_LIMIT3_CH_LO_LIMIT_Msk    = 0x3ff      // Bit mask of CH_LO_LIMIT field.
	ADC_LIMIT3_CH_HI_LIMIT_Pos    = 0xc        // Position of CH_HI_LIMIT field.
	ADC_LIMIT3_CH_HI_LIMIT_Msk    = 0x3ff000   // Bit mask of CH_HI_LIMIT field.
	ADC_LIMIT3_CH_SEL_Pos         = 0x18       // Position of CH_SEL field.
	ADC_LIMIT3_CH_SEL_Msk         = 0xf000000  // Bit mask of CH_SEL field.
	ADC_LIMIT3_CH_LO_LIMIT_EN_Pos = 0x1c       // Position of CH_LO_LIMIT_EN field.
	ADC_LIMIT3_CH_LO_LIMIT_EN_Msk = 0x10000000 // Bit mask of CH_LO_LIMIT_EN field.
	ADC_LIMIT3_CH_LO_LIMIT_EN     = 0x10000000 // Bit CH_LO_LIMIT_EN.
	ADC_LIMIT3_CH_HI_LIMIT_EN_Pos = 0x1d       // Position of CH_HI_LIMIT_EN field.
	ADC_LIMIT3_CH_HI_LIMIT_EN_Msk = 0x20000000 // Bit mask of CH_HI_LIMIT_EN field.
	ADC_LIMIT3_CH_HI_LIMIT_EN     = 0x20000000 // Bit CH_HI_LIMIT_EN.

	// AFE_CTRL: AFE Control Register
	ADC_AFE_CTRL_TMON_INTBIAS_EN_Pos = 0x8   // Position of TMON_INTBIAS_EN field.
	ADC_AFE_CTRL_TMON_INTBIAS_EN_Msk = 0x100 // Bit mask of TMON_INTBIAS_EN field.
	ADC_AFE_CTRL_TMON_INTBIAS_EN     = 0x100 // Bit TMON_INTBIAS_EN.
	ADC_AFE_CTRL_TMON_EXTBIAS_EN_Pos = 0x9   // Position of TMON_EXTBIAS_EN field.
	ADC_AFE_CTRL_TMON_EXTBIAS_EN_Msk = 0x200 // Bit mask of TMON_EXTBIAS_EN field.
	ADC_AFE_CTRL_TMON_EXTBIAS_EN     = 0x200 // Bit TMON_EXTBIAS_EN.

	// RO_CAL0: RO Trim Calibration Register 0
	ADC_RO_CAL0_RO_CAL_EN_Pos     = 0x0        // Position of RO_CAL_EN field.
	ADC_RO_CAL0_RO_CAL_EN_Msk     = 0x1        // Bit mask of RO_CAL_EN field.
	ADC_RO_CAL0_RO_CAL_EN         = 0x1        // Bit RO_CAL_EN.
	ADC_RO_CAL0_RO_CAL_RUN_Pos    = 0x1        // Position of RO_CAL_RUN field.
	ADC_RO_CAL0_RO_CAL_RUN_Msk    = 0x2        // Bit mask of RO_CAL_RUN field.
	ADC_RO_CAL0_RO_CAL_RUN        = 0x2        // Bit RO_CAL_RUN.
	ADC_RO_CAL0_RO_CAL_LOAD_Pos   = 0x2        // Position of RO_CAL_LOAD field.
	ADC_RO_CAL0_RO_CAL_LOAD_Msk   = 0x4        // Bit mask of RO_CAL_LOAD field.
	ADC_RO_CAL0_RO_CAL_LOAD       = 0x4        // Bit RO_CAL_LOAD.
	ADC_RO_CAL0_RO_CAL_ATOMIC_Pos = 0x4        // Position of RO_CAL_ATOMIC field.
	ADC_RO_CAL0_RO_CAL_ATOMIC_Msk = 0x10       // Bit mask of RO_CAL_ATOMIC field.
	ADC_RO_CAL0_RO_CAL_ATOMIC     = 0x10       // Bit RO_CAL_ATOMIC.
	ADC_RO_CAL0_TRM_MU_Pos        = 0x8        // Position of TRM_MU field.
	ADC_RO_CAL0_TRM_MU_Msk        = 0xfff00    // Bit mask of TRM_MU field.
	ADC_RO_CAL0_RO_TRM_Pos        = 0x17       // Position of RO_TRM field.
	ADC_RO_CAL0_RO_TRM_Msk        = 0xff800000 // Bit mask of RO_TRM field.

	// RO_CAL1: RO Trim Calibration Register 1
	ADC_RO_CAL1_TRM_INIT_Pos = 0x0        // Position of TRM_INIT field.
	ADC_RO_CAL1_TRM_INIT_Msk = 0x1ff      // Bit mask of TRM_INIT field.
	ADC_RO_CAL1_TRM_MIN_Pos  = 0xa        // Position of TRM_MIN field.
	ADC_RO_CAL1_TRM_MIN_Msk  = 0x7fc00    // Bit mask of TRM_MIN field.
	ADC_RO_CAL1_TRM_MAX_Pos  = 0x14       // Position of TRM_MAX field.
	ADC_RO_CAL1_TRM_MAX_Msk  = 0x1ff00000 // Bit mask of TRM_MAX field.

	// RO_CAL2: RO Trim Calibration Register 2
	ADC_RO_CAL2_AUTO_CAL_DONE_CNT_Pos = 0x0  // Position of AUTO_CAL_DONE_CNT field.
	ADC_RO_CAL2_AUTO_CAL_DONE_CNT_Msk = 0xff // Bit mask of AUTO_CAL_DONE_CNT field.
)
